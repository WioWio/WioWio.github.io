// Generated by Construct 2, the HTML5 game and app creator :: http://www.scirra.com
var cr = {};
cr.plugins_ = {};
cr.behaviors = {};
if (typeof Object.getPrototypeOf !== "function")
{
	if (typeof "test".__proto__ === "object")
	{
		Object.getPrototypeOf = function(object) {
			return object.__proto__;
		};
	}
	else
	{
		Object.getPrototypeOf = function(object) {
			return object.constructor.prototype;
		};
	}
}
(function(){
	cr.logexport = function (msg)
	{
		if (window.console && window.console.log)
			window.console.log(msg);
	};
	cr.seal = function(x)
	{
		return x;
	};
	cr.freeze = function(x)
	{
		return x;
	};
	cr.is_undefined = function (x)
	{
		return typeof x === "undefined";
	};
	cr.is_number = function (x)
	{
		return typeof x === "number";
	};
	cr.is_string = function (x)
	{
		return typeof x === "string";
	};
	cr.isPOT = function (x)
	{
		return x > 0 && ((x - 1) & x) === 0;
	};
	cr.abs = function (x)
	{
		return (x < 0 ? -x : x);
	};
	cr.max = function (a, b)
	{
		return (a > b ? a : b);
	};
	cr.min = function (a, b)
	{
		return (a < b ? a : b);
	};
	cr.PI = Math.PI;
	cr.round = function (x)
	{
		return (x + 0.5) | 0;
	};
	cr.floor = function (x)
	{
		return x | 0;
	};
	function Vector2(x, y)
	{
		this.x = x;
		this.y = y;
		cr.seal(this);
	};
	Vector2.prototype.offset = function (px, py)
	{
		this.x += px;
		this.y += py;
		return this;
	};
	Vector2.prototype.mul = function (px, py)
	{
		this.x *= px;
		this.y *= py;
		return this;
	};
	cr.vector2 = Vector2;
	cr.segments_intersect = function(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y)
	{
		if (cr.max(a1x, a2x) < cr.min(b1x, b2x)
		 || cr.min(a1x, a2x) > cr.max(b1x, b2x)
		 || cr.max(a1y, a2y) < cr.min(b1y, b2y)
		 || cr.min(a1y, a2y) > cr.max(b1y, b2y))
		{
			return false;
		}
		var dpx = b1x - a1x + b2x - a2x;
		var dpy = b1y - a1y + b2y - a2y;
		var qax = a2x - a1x;
		var qay = a2y - a1y;
		var qbx = b2x - b1x;
		var qby = b2y - b1y;
		var d = cr.abs(qay * qbx - qby * qax);
		var la = qbx * dpy - qby * dpx;
		var lb = qax * dpy - qay * dpx;
		return cr.abs(la) <= d && cr.abs(lb) <= d;
	};
	function Rect(left, top, right, bottom)
	{
		this.set(left, top, right, bottom);
		cr.seal(this);
	};
	Rect.prototype.set = function (left, top, right, bottom)
	{
		this.left = left;
		this.top = top;
		this.right = right;
		this.bottom = bottom;
	};
	Rect.prototype.width = function ()
	{
		return this.right - this.left;
	};
	Rect.prototype.height = function ()
	{
		return this.bottom - this.top;
	};
	Rect.prototype.offset = function (px, py)
	{
		this.left += px;
		this.top += py;
		this.right += px;
		this.bottom += py;
		return this;
	};
	Rect.prototype.intersects_rect = function (rc)
	{
		return !(rc.right < this.left || rc.bottom < this.top || rc.left > this.right || rc.top > this.bottom);
	};
	Rect.prototype.contains_pt = function (x, y)
	{
		return (x >= this.left && x <= this.right) && (y >= this.top && y <= this.bottom);
	};
	cr.rect = Rect;
	function Quad()
	{
		this.tlx = 0;
		this.tly = 0;
		this.trx = 0;
		this.try_ = 0;	// is a keyword otherwise!
		this.brx = 0;
		this.bry = 0;
		this.blx = 0;
		this.bly = 0;
		cr.seal(this);
	};
	Quad.prototype.set_from_rect = function (rc)
	{
		this.tlx = rc.left;
		this.tly = rc.top;
		this.trx = rc.right;
		this.try_ = rc.top;
		this.brx = rc.right;
		this.bry = rc.bottom;
		this.blx = rc.left;
		this.bly = rc.bottom;
	};
	Quad.prototype.set_from_rotated_rect = function (rc, a)
	{
		if (a === 0)
		{
			this.set_from_rect(rc);
		}
		else
		{
			var sin_a = Math.sin(a);
			var cos_a = Math.cos(a);
			var left_sin_a = rc.left * sin_a;
			var top_sin_a = rc.top * sin_a;
			var right_sin_a = rc.right * sin_a;
			var bottom_sin_a = rc.bottom * sin_a;
			var left_cos_a = rc.left * cos_a;
			var top_cos_a = rc.top * cos_a;
			var right_cos_a = rc.right * cos_a;
			var bottom_cos_a = rc.bottom * cos_a;
			this.tlx = left_cos_a - top_sin_a;
			this.tly = top_cos_a + left_sin_a;
			this.trx = right_cos_a - top_sin_a;
			this.try_ = top_cos_a + right_sin_a;
			this.brx = right_cos_a - bottom_sin_a;
			this.bry = bottom_cos_a + right_sin_a;
			this.blx = left_cos_a - bottom_sin_a;
			this.bly = bottom_cos_a + left_sin_a;
		}
	};
	Quad.prototype.offset = function (px, py)
	{
		this.tlx += px;
		this.tly += py;
		this.trx += px;
		this.try_ += py;
		this.brx += px;
		this.bry += py;
		this.blx += px;
		this.bly += py;
		return this;
	};
	Quad.prototype.bounding_box = function (rc)
	{
		rc.left =   cr.min(cr.min(this.tlx, this.trx),  cr.min(this.brx, this.blx));
		rc.top =    cr.min(cr.min(this.tly, this.try_), cr.min(this.bry, this.bly));
		rc.right =  cr.max(cr.max(this.tlx, this.trx),  cr.max(this.brx, this.blx));
		rc.bottom = cr.max(cr.max(this.tly, this.try_), cr.max(this.bry, this.bly));
	};
	Quad.prototype.contains_pt = function (x, y)
	{
		var v0x = this.trx - this.tlx;
		var v0y = this.try_ - this.tly;
		var v1x = this.brx - this.tlx;
		var v1y = this.bry - this.tly;
		var v2x = x - this.tlx;
		var v2y = y - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		var dot11 = v1x * v1x + v1y * v1y
		var dot12 = v1x * v2x + v1y * v2y
		var invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		if ((u >= 0.0) && (v > 0.0) && (u + v < 1))
			return true;
		v0x = this.blx - this.tlx;
		v0y = this.bly - this.tly;
		var dot00 = v0x * v0x + v0y * v0y
		var dot01 = v0x * v1x + v0y * v1y
		var dot02 = v0x * v2x + v0y * v2y
		invDenom = 1.0 / (dot00 * dot11 - dot01 * dot01);
		u = (dot11 * dot02 - dot01 * dot12) * invDenom;
		v = (dot00 * dot12 - dot01 * dot02) * invDenom;
		return (u >= 0.0) && (v > 0.0) && (u + v < 1);
	};
	Quad.prototype.at = function (i, xory)
	{
		switch (i)
		{
			case 0: return xory ? this.tlx : this.tly;
			case 1: return xory ? this.trx : this.try_;
			case 2: return xory ? this.brx : this.bry;
			case 3: return xory ? this.blx : this.bly;
			case 4: return xory ? this.tlx : this.tly;		// same as 0, repeated for perf
			default: return xory ? this.tlx : this.tly;
		}
	};
	Quad.prototype.midX = function ()
	{
		return (this.tlx + this.trx  + this.brx + this.blx) / 4;
	};
	Quad.prototype.midY = function ()
	{
		return (this.tly + this.try_ + this.bry + this.bly) / 4;
	};
	Quad.prototype.intersects_quad = function (rhs)
	{
		var midx = rhs.midX();
		var midy = rhs.midY();
		if (this.contains_pt(midx, midy))
			return true;
		midx = this.midX();
		midy = this.midY();
		if (rhs.contains_pt(midx, midy))
			return true;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		var i, j;
		for (i = 0; i < 4; i++)
		{
			for (j = 0; j < 4; j++)
			{
				a1x = this.at(i, true);
				a1y = this.at(i, false);
				a2x = this.at(i + 1, true);
				a2y = this.at(i + 1, false);
				b1x = rhs.at(j, true);
				b1y = rhs.at(j, false);
				b2x = rhs.at(j + 1, true);
				b2y = rhs.at(j + 1, false);
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	cr.quad = Quad;
	cr.RGB = function (red, green, blue)
	{
		return Math.max(Math.min(red, 255), 0)
			 | (Math.max(Math.min(green, 255), 0) << 8)
			 | (Math.max(Math.min(blue, 255), 0) << 16);
	};
	cr.GetRValue = function (rgb)
	{
		return rgb & 0xFF;
	};
	cr.GetGValue = function (rgb)
	{
		return (rgb & 0xFF00) >> 8;
	};
	cr.GetBValue = function (rgb)
	{
		return (rgb & 0xFF0000) >> 16;
	};
	cr.shallowCopy = function (a, b, allowOverwrite)
	{
		var attr;
		for (attr in b)
		{
			if (b.hasOwnProperty(attr))
			{
;
				a[attr] = b[attr];
			}
		}
		return a;
	};
	cr.arrayRemove = function (arr, index)
	{
		var i, len;
		index = cr.floor(index);
		if (index < 0 || index >= arr.length)
			return;							// index out of bounds
		if (index === 0)					// removing first item
			arr.shift();
		else if (index === arr.length - 1)	// removing last item
			arr.pop();
		else
		{
			for (i = index, len = arr.length - 1; i < len; i++)
				arr[i] = arr[i + 1];
			arr.length = len;
		}
	};
	cr.shallowAssignArray = function(dest, src)
	{
		dest.length = src.length;
		var i, len;
		for (i = 0, len = src.length; i < len; i++)
			dest[i] = src[i];
	};
	cr.arrayFindRemove = function (arr, item)
	{
		var index = arr.indexOf(item);
		if (index !== -1)
			cr.arrayRemove(arr, index);
	};
	cr.clamp = function(x, a, b)
	{
		if (x < a)
			return a;
		else if (x > b)
			return b;
		else
			return x;
	};
	cr.to_radians = function(x)
	{
		return x / (180.0 / cr.PI);
	};
	cr.to_degrees = function(x)
	{
		return x * (180.0 / cr.PI);
	};
	cr.clamp_angle_degrees = function (a)
	{
		a %= 360;       // now in (-360, 360) range
		if (a < 0)
			a += 360;   // now in [0, 360) range
		return a;
	};
	cr.clamp_angle = function (a)
	{
		a %= 2 * cr.PI;       // now in (-2pi, 2pi) range
		if (a < 0)
			a += 2 * cr.PI;   // now in [0, 2pi) range
		return a;
	};
	cr.to_clamped_degrees = function (x)
	{
		return cr.clamp_angle_degrees(cr.to_degrees(x));
	};
	cr.to_clamped_radians = function (x)
	{
		return cr.clamp_angle(cr.to_radians(x));
	};
	cr.angleTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.atan2(dy, dx);
	};
	cr.angleDiff = function (a1, a2)
	{
		if (a1 === a2)
			return 0;
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		var n = s1 * s2 + c1 * c2;
		if (n >= 1)
			return 0;
		if (n <= -1)
			return cr.PI;
		return Math.acos(n);
	};
	cr.angleRotate = function (start, end, step)
	{
		var ss = Math.sin(start);
		var cs = Math.cos(start);
		var se = Math.sin(end);
		var ce = Math.cos(end);
		if (Math.acos(ss * se + cs * ce) > step)
		{
			if (cs * se - ss * ce > 0)
				return cr.clamp_angle(start + step);
			else
				return cr.clamp_angle(start - step);
		}
		else
			return cr.clamp_angle(end);
	};
	cr.angleClockwise = function (a1, a2)
	{
		var s1 = Math.sin(a1);
		var c1 = Math.cos(a1);
		var s2 = Math.sin(a2);
		var c2 = Math.cos(a2);
		return c1 * s2 - s1 * c2 <= 0;
	};
	cr.distanceTo = function(x1, y1, x2, y2)
	{
		var dx = x2 - x1;
        var dy = y2 - y1;
		return Math.sqrt(dx*dx + dy*dy);
	};
	cr.xor = function (x, y)
	{
		return !x !== !y;
	};
	cr.lerp = function (a, b, x)
	{
		return a + (b - a) * x;
	};
	cr.hasAnyOwnProperty = function (o)
	{
		var p;
		for (p in o)
		{
			if (o.hasOwnProperty(p))
				return true;
		}
		return false;
	};
	cr.wipe = function (obj)
	{
		var p;
		for (p in obj)
		{
			if (obj.hasOwnProperty(p))
				delete obj[p];
		}
	};
	cr.performance_now = function()
	{
		if (typeof window["performance"] !== "undefined")
		{
			var winperf = window["performance"];
			if (typeof winperf.now !== "undefined")
				return winperf.now();
			else if (typeof winperf["webkitNow"] !== "undefined")
				return winperf["webkitNow"]();
			else if (typeof winperf["msNow"] !== "undefined")
				return winperf["msNow"]();
		}
		return Date.now();
	};
	function ObjectSet_()
	{
		this.items = {};
		this.item_count = 0;
		this.values_cache = [];
		this.cache_valid = true;
		cr.seal(this);
	};
	ObjectSet_.prototype.contains = function (x)
	{
		return this.items.hasOwnProperty(x.toString());
	};
	ObjectSet_.prototype.add = function (x)
	{
		var str = x.toString();
		if (!this.items.hasOwnProperty(str))
		{
			this.items[str] = x;
			this.item_count++;
			this.cache_valid = false;
		}
		return this;
	};
	ObjectSet_.prototype.remove = function (x)
	{
		var str = x.toString();
		if (this.items.hasOwnProperty(str))
		{
			delete this.items[str];
			this.item_count--;
			this.cache_valid = false;
		}
		return this;
	};
	ObjectSet_.prototype.clear = function ()
	{
		cr.wipe(this.items);
		this.item_count = 0;
		this.values_cache.length = 0;
		this.cache_valid = true;
		return this;
	};
	ObjectSet_.prototype.isEmpty = function ()
	{
		return this.item_count === 0;
	};
	ObjectSet_.prototype.count = function ()
	{
		return this.item_count;
	};
	ObjectSet_.prototype.update_cache = function ()
	{
		if (this.cache_valid)
			return;
		this.values_cache.length = this.item_count;
		var p, n = 0;
		for (p in this.items)
		{
			if (this.items.hasOwnProperty(p))
				this.values_cache[n++] = this.items[p];
		}
;
		this.cache_valid = true;
	};
	ObjectSet_.prototype.values = function ()
	{
		this.update_cache();
		return this.values_cache.slice(0);
	};
	ObjectSet_.prototype.valuesRef = function ()
	{
		this.update_cache();
		return this.values_cache;
	};
	cr.ObjectSet = ObjectSet_;
	function KahanAdder_()
	{
		this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
		cr.seal(this);
	};
	KahanAdder_.prototype.add = function (v)
	{
		this.y = v - this.c;
	    this.t = this.sum + this.y;
	    this.c = (this.t - this.sum) - this.y;
	    this.sum = this.t;
	};
    KahanAdder_.prototype.reset = function ()
    {
        this.c = 0;
        this.y = 0;
        this.t = 0;
        this.sum = 0;
    };
	cr.KahanAdder = KahanAdder_;
	cr.regexp_escape = function(text)
	{
		return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
	};
	function CollisionPoly_(pts_array_)
	{
		this.pts_cache = [];
		this.set_pts(pts_array_);
		cr.seal(this);
	};
	CollisionPoly_.prototype.set_pts = function(pts_array_)
	{
		this.pts_array = pts_array_;
		this.pts_count = pts_array_.length / 2;			// x, y, x, y... in array
		this.pts_cache.length = pts_array_.length;
		this.cache_width = -1;
		this.cache_height = -1;
		this.cache_angle = 0;
	};
	CollisionPoly_.prototype.is_empty = function()
	{
		return !this.pts_array.length;
	};
	CollisionPoly_.prototype.set_from_quad = function(q, offx, offy, w, h)
	{
		this.pts_cache.length = 8;
		this.pts_count = 4;
		var myptscache = this.pts_cache;
		myptscache[0] = q.tlx - offx;
		myptscache[1] = q.tly - offy;
		myptscache[2] = q.trx - offx;
		myptscache[3] = q.try_ - offy;
		myptscache[4] = q.brx - offx;
		myptscache[5] = q.bry - offy;
		myptscache[6] = q.blx - offx;
		myptscache[7] = q.bly - offy;
		this.cache_width = w;
		this.cache_height = h;
	};
	CollisionPoly_.prototype.set_from_poly = function (r)
	{
		this.pts_count = r.pts_count;
		cr.shallowAssignArray(this.pts_cache, r.pts_cache);
	};
	CollisionPoly_.prototype.cache_poly = function(w, h, a)
	{
		if (this.cache_width === w && this.cache_height === h && this.cache_angle === a)
			return;		// cache up-to-date
		this.cache_width = w;
		this.cache_height = h;
		this.cache_angle = a;
		var i, len, x, y;
		var sina = 0;
		var cosa = 1;
		var myptsarray = this.pts_array;
		var myptscache = this.pts_cache;
		if (a !== 0)
		{
			sina = Math.sin(a);
			cosa = Math.cos(a);
		}
		for (i = 0, len = this.pts_count; i < len; i++)
		{
			x = myptsarray[i*2] * w;
			y = myptsarray[i*2+1] * h;
			myptscache[i*2] = (x * cosa) - (y * sina);
			myptscache[i*2+1] = (y * cosa) + (x * sina);
		}
	};
	CollisionPoly_.prototype.contains_pt = function (a2x, a2y)
	{
		var myptscache = this.pts_cache;
		if (a2x === myptscache[0] && a2y === myptscache[1])
			return true;
		var a1x = -this.cache_width * 5 - 1;
		var a1y = -this.cache_height * 5 - 1;
		var a3x = this.cache_width * 5 + 1;
		var a3y = -1;
		var b1x, b1y, b2x, b2y;
		var i, len;
		var count1 = 0, count2 = 0;
		for (i = 0, len = this.pts_count; i < len; i++)
		{
			b1x = myptscache[i*2];
			b1y = myptscache[i*2+1];
			b2x = myptscache[((i+1)%len)*2];
			b2y = myptscache[((i+1)%len)*2+1];
			if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
				count1++;
			if (cr.segments_intersect(a3x, a3y, a2x, a2y, b1x, b1y, b2x, b2y))
				count2++;
		}
		return (count1 % 2 === 1) || (count2 % 2 === 1);
	};
	CollisionPoly_.prototype.intersects_poly = function (rhs, offx, offy)
	{
		var rhspts = rhs.pts_cache;
		var mypts = this.pts_cache;
		if (this.contains_pt(rhspts[0] + offx, rhspts[1] + offy))
			return true;
		if (rhs.contains_pt(mypts[0] - offx, mypts[1] - offy))
			return true;
		var i, leni, j, lenj;
		var a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y;
		for (i = 0, leni = this.pts_count; i < leni; i++)
		{
			a1x = mypts[i*2];
			a1y = mypts[i*2+1];
			a2x = mypts[((i+1)%leni)*2];
			a2y = mypts[((i+1)%leni)*2+1];
			for (j = 0, lenj = rhs.pts_count; j < lenj; j++)
			{
				b1x = rhspts[j*2] + offx;
				b1y = rhspts[j*2+1] + offy;
				b2x = rhspts[((j+1)%lenj)*2] + offx;
				b2y = rhspts[((j+1)%lenj)*2+1] + offy;
				if (cr.segments_intersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y))
					return true;
			}
		}
		return false;
	};
	cr.CollisionPoly = CollisionPoly_;
	var fxNames = [ "lighter",
					"xor",
					"copy",
					"destination-over",
					"source-in",
					"destination-in",
					"source-out",
					"destination-out",
					"source-atop",
					"destination-atop"];
	cr.effectToCompositeOp = function(effect)
	{
		if (effect <= 0 || effect >= 11)
			return "source-over";
		return fxNames[effect - 1];	// not including "none" so offset by 1
	};
	cr.setGLBlend = function(this_, effect, gl)
	{
		if (!gl)
			return;
		this_.srcBlend = gl.ONE;
		this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
		switch (effect) {
		case 1:		// lighter (additive)
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ONE;
			break;
		case 2:		// xor
			break;	// todo
		case 3:		// copy
			this_.srcBlend = gl.ONE;
			this_.destBlend = gl.ZERO;
			break;
		case 4:		// destination-over
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ONE;
			break;
		case 5:		// source-in
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 6:		// destination-in
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		case 7:		// source-out
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.ZERO;
			break;
		case 8:		// destination-out
			this_.srcBlend = gl.ZERO;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 9:		// source-atop
			this_.srcBlend = gl.DST_ALPHA;
			this_.destBlend = gl.ONE_MINUS_SRC_ALPHA;
			break;
		case 10:	// destination-atop
			this_.srcBlend = gl.ONE_MINUS_DST_ALPHA;
			this_.destBlend = gl.SRC_ALPHA;
			break;
		}
	};
	cr.round6dp = function (x)
	{
		return Math.round(x * 1000000) / 1000000;
	};
}());
var MatrixArray=typeof Float32Array!=="undefined"?Float32Array:Array,glMatrixArrayType=MatrixArray,vec3={},mat3={},mat4={},quat4={};vec3.create=function(a){var b=new MatrixArray(3);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2]);return b};vec3.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];return b};vec3.add=function(a,b,c){if(!c||a===c)return a[0]+=b[0],a[1]+=b[1],a[2]+=b[2],a;c[0]=a[0]+b[0];c[1]=a[1]+b[1];c[2]=a[2]+b[2];return c};
vec3.subtract=function(a,b,c){if(!c||a===c)return a[0]-=b[0],a[1]-=b[1],a[2]-=b[2],a;c[0]=a[0]-b[0];c[1]=a[1]-b[1];c[2]=a[2]-b[2];return c};vec3.negate=function(a,b){b||(b=a);b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];return b};vec3.scale=function(a,b,c){if(!c||a===c)return a[0]*=b,a[1]*=b,a[2]*=b,a;c[0]=a[0]*b;c[1]=a[1]*b;c[2]=a[2]*b;return c};
vec3.normalize=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=Math.sqrt(c*c+d*d+e*e);if(g){if(g===1)return b[0]=c,b[1]=d,b[2]=e,b}else return b[0]=0,b[1]=0,b[2]=0,b;g=1/g;b[0]=c*g;b[1]=d*g;b[2]=e*g;return b};vec3.cross=function(a,b,c){c||(c=a);var d=a[0],e=a[1],a=a[2],g=b[0],f=b[1],b=b[2];c[0]=e*b-a*f;c[1]=a*g-d*b;c[2]=d*f-e*g;return c};vec3.length=function(a){var b=a[0],c=a[1],a=a[2];return Math.sqrt(b*b+c*c+a*a)};vec3.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]};
vec3.direction=function(a,b,c){c||(c=a);var d=a[0]-b[0],e=a[1]-b[1],a=a[2]-b[2],b=Math.sqrt(d*d+e*e+a*a);if(!b)return c[0]=0,c[1]=0,c[2]=0,c;b=1/b;c[0]=d*b;c[1]=e*b;c[2]=a*b;return c};vec3.lerp=function(a,b,c,d){d||(d=a);d[0]=a[0]+c*(b[0]-a[0]);d[1]=a[1]+c*(b[1]-a[1]);d[2]=a[2]+c*(b[2]-a[2]);return d};vec3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+"]"};
mat3.create=function(a){var b=new MatrixArray(9);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8]);return b};mat3.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return b};mat3.identity=function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a};
mat3.transpose=function(a,b){if(!b||a===b){var c=a[1],d=a[2],e=a[5];a[1]=a[3];a[2]=a[6];a[3]=c;a[5]=a[7];a[6]=d;a[7]=e;return a}b[0]=a[0];b[1]=a[3];b[2]=a[6];b[3]=a[1];b[4]=a[4];b[5]=a[7];b[6]=a[2];b[7]=a[5];b[8]=a[8];return b};mat3.toMat4=function(a,b){b||(b=mat4.create());b[15]=1;b[14]=0;b[13]=0;b[12]=0;b[11]=0;b[10]=a[8];b[9]=a[7];b[8]=a[6];b[7]=0;b[6]=a[5];b[5]=a[4];b[4]=a[3];b[3]=0;b[2]=a[2];b[1]=a[1];b[0]=a[0];return b};
mat3.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+"]"};mat4.create=function(a){var b=new MatrixArray(16);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3],b[4]=a[4],b[5]=a[5],b[6]=a[6],b[7]=a[7],b[8]=a[8],b[9]=a[9],b[10]=a[10],b[11]=a[11],b[12]=a[12],b[13]=a[13],b[14]=a[14],b[15]=a[15]);return b};
mat4.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=a[12];b[13]=a[13];b[14]=a[14];b[15]=a[15];return b};mat4.identity=function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=0;a[5]=1;a[6]=0;a[7]=0;a[8]=0;a[9]=0;a[10]=1;a[11]=0;a[12]=0;a[13]=0;a[14]=0;a[15]=1;return a};
mat4.transpose=function(a,b){if(!b||a===b){var c=a[1],d=a[2],e=a[3],g=a[6],f=a[7],h=a[11];a[1]=a[4];a[2]=a[8];a[3]=a[12];a[4]=c;a[6]=a[9];a[7]=a[13];a[8]=d;a[9]=g;a[11]=a[14];a[12]=e;a[13]=f;a[14]=h;return a}b[0]=a[0];b[1]=a[4];b[2]=a[8];b[3]=a[12];b[4]=a[1];b[5]=a[5];b[6]=a[9];b[7]=a[13];b[8]=a[2];b[9]=a[6];b[10]=a[10];b[11]=a[14];b[12]=a[3];b[13]=a[7];b[14]=a[11];b[15]=a[15];return b};
mat4.determinant=function(a){var b=a[0],c=a[1],d=a[2],e=a[3],g=a[4],f=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],n=a[11],o=a[12],m=a[13],p=a[14],a=a[15];return o*k*h*e-j*m*h*e-o*f*l*e+g*m*l*e+j*f*p*e-g*k*p*e-o*k*d*i+j*m*d*i+o*c*l*i-b*m*l*i-j*c*p*i+b*k*p*i+o*f*d*n-g*m*d*n-o*c*h*n+b*m*h*n+g*c*p*n-b*f*p*n-j*f*d*a+g*k*d*a+j*c*h*a-b*k*h*a-g*c*l*a+b*f*l*a};
mat4.inverse=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=a[3],f=a[4],h=a[5],i=a[6],j=a[7],k=a[8],l=a[9],n=a[10],o=a[11],m=a[12],p=a[13],r=a[14],s=a[15],A=c*h-d*f,B=c*i-e*f,t=c*j-g*f,u=d*i-e*h,v=d*j-g*h,w=e*j-g*i,x=k*p-l*m,y=k*r-n*m,z=k*s-o*m,C=l*r-n*p,D=l*s-o*p,E=n*s-o*r,q=1/(A*E-B*D+t*C+u*z-v*y+w*x);b[0]=(h*E-i*D+j*C)*q;b[1]=(-d*E+e*D-g*C)*q;b[2]=(p*w-r*v+s*u)*q;b[3]=(-l*w+n*v-o*u)*q;b[4]=(-f*E+i*z-j*y)*q;b[5]=(c*E-e*z+g*y)*q;b[6]=(-m*w+r*t-s*B)*q;b[7]=(k*w-n*t+o*B)*q;b[8]=(f*D-h*z+j*x)*q;
b[9]=(-c*D+d*z-g*x)*q;b[10]=(m*v-p*t+s*A)*q;b[11]=(-k*v+l*t-o*A)*q;b[12]=(-f*C+h*y-i*x)*q;b[13]=(c*C-d*y+e*x)*q;b[14]=(-m*u+p*B-r*A)*q;b[15]=(k*u-l*B+n*A)*q;return b};mat4.toRotationMat=function(a,b){b||(b=mat4.create());b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];b[9]=a[9];b[10]=a[10];b[11]=a[11];b[12]=0;b[13]=0;b[14]=0;b[15]=1;return b};
mat4.toMat3=function(a,b){b||(b=mat3.create());b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[4];b[4]=a[5];b[5]=a[6];b[6]=a[8];b[7]=a[9];b[8]=a[10];return b};mat4.toInverseMat3=function(a,b){var c=a[0],d=a[1],e=a[2],g=a[4],f=a[5],h=a[6],i=a[8],j=a[9],k=a[10],l=k*f-h*j,n=-k*g+h*i,o=j*g-f*i,m=c*l+d*n+e*o;if(!m)return null;m=1/m;b||(b=mat3.create());b[0]=l*m;b[1]=(-k*d+e*j)*m;b[2]=(h*d-e*f)*m;b[3]=n*m;b[4]=(k*c-e*i)*m;b[5]=(-h*c+e*g)*m;b[6]=o*m;b[7]=(-j*c+d*i)*m;b[8]=(f*c-d*g)*m;return b};
mat4.multiply=function(a,b,c){c||(c=a);var d=a[0],e=a[1],g=a[2],f=a[3],h=a[4],i=a[5],j=a[6],k=a[7],l=a[8],n=a[9],o=a[10],m=a[11],p=a[12],r=a[13],s=a[14],a=a[15],A=b[0],B=b[1],t=b[2],u=b[3],v=b[4],w=b[5],x=b[6],y=b[7],z=b[8],C=b[9],D=b[10],E=b[11],q=b[12],F=b[13],G=b[14],b=b[15];c[0]=A*d+B*h+t*l+u*p;c[1]=A*e+B*i+t*n+u*r;c[2]=A*g+B*j+t*o+u*s;c[3]=A*f+B*k+t*m+u*a;c[4]=v*d+w*h+x*l+y*p;c[5]=v*e+w*i+x*n+y*r;c[6]=v*g+w*j+x*o+y*s;c[7]=v*f+w*k+x*m+y*a;c[8]=z*d+C*h+D*l+E*p;c[9]=z*e+C*i+D*n+E*r;c[10]=z*g+C*
j+D*o+E*s;c[11]=z*f+C*k+D*m+E*a;c[12]=q*d+F*h+G*l+b*p;c[13]=q*e+F*i+G*n+b*r;c[14]=q*g+F*j+G*o+b*s;c[15]=q*f+F*k+G*m+b*a;return c};mat4.multiplyVec3=function(a,b,c){c||(c=b);var d=b[0],e=b[1],b=b[2];c[0]=a[0]*d+a[4]*e+a[8]*b+a[12];c[1]=a[1]*d+a[5]*e+a[9]*b+a[13];c[2]=a[2]*d+a[6]*e+a[10]*b+a[14];return c};
mat4.multiplyVec4=function(a,b,c){c||(c=b);var d=b[0],e=b[1],g=b[2],b=b[3];c[0]=a[0]*d+a[4]*e+a[8]*g+a[12]*b;c[1]=a[1]*d+a[5]*e+a[9]*g+a[13]*b;c[2]=a[2]*d+a[6]*e+a[10]*g+a[14]*b;c[3]=a[3]*d+a[7]*e+a[11]*g+a[15]*b;return c};
mat4.translate=function(a,b,c){var d=b[0],e=b[1],b=b[2],g,f,h,i,j,k,l,n,o,m,p,r;if(!c||a===c)return a[12]=a[0]*d+a[4]*e+a[8]*b+a[12],a[13]=a[1]*d+a[5]*e+a[9]*b+a[13],a[14]=a[2]*d+a[6]*e+a[10]*b+a[14],a[15]=a[3]*d+a[7]*e+a[11]*b+a[15],a;g=a[0];f=a[1];h=a[2];i=a[3];j=a[4];k=a[5];l=a[6];n=a[7];o=a[8];m=a[9];p=a[10];r=a[11];c[0]=g;c[1]=f;c[2]=h;c[3]=i;c[4]=j;c[5]=k;c[6]=l;c[7]=n;c[8]=o;c[9]=m;c[10]=p;c[11]=r;c[12]=g*d+j*e+o*b+a[12];c[13]=f*d+k*e+m*b+a[13];c[14]=h*d+l*e+p*b+a[14];c[15]=i*d+n*e+r*b+a[15];
return c};mat4.scale=function(a,b,c){var d=b[0],e=b[1],b=b[2];if(!c||a===c)return a[0]*=d,a[1]*=d,a[2]*=d,a[3]*=d,a[4]*=e,a[5]*=e,a[6]*=e,a[7]*=e,a[8]*=b,a[9]*=b,a[10]*=b,a[11]*=b,a;c[0]=a[0]*d;c[1]=a[1]*d;c[2]=a[2]*d;c[3]=a[3]*d;c[4]=a[4]*e;c[5]=a[5]*e;c[6]=a[6]*e;c[7]=a[7]*e;c[8]=a[8]*b;c[9]=a[9]*b;c[10]=a[10]*b;c[11]=a[11]*b;c[12]=a[12];c[13]=a[13];c[14]=a[14];c[15]=a[15];return c};
mat4.rotate=function(a,b,c,d){var e=c[0],g=c[1],c=c[2],f=Math.sqrt(e*e+g*g+c*c),h,i,j,k,l,n,o,m,p,r,s,A,B,t,u,v,w,x,y,z;if(!f)return null;f!==1&&(f=1/f,e*=f,g*=f,c*=f);h=Math.sin(b);i=Math.cos(b);j=1-i;b=a[0];f=a[1];k=a[2];l=a[3];n=a[4];o=a[5];m=a[6];p=a[7];r=a[8];s=a[9];A=a[10];B=a[11];t=e*e*j+i;u=g*e*j+c*h;v=c*e*j-g*h;w=e*g*j-c*h;x=g*g*j+i;y=c*g*j+e*h;z=e*c*j+g*h;e=g*c*j-e*h;g=c*c*j+i;d?a!==d&&(d[12]=a[12],d[13]=a[13],d[14]=a[14],d[15]=a[15]):d=a;d[0]=b*t+n*u+r*v;d[1]=f*t+o*u+s*v;d[2]=k*t+m*u+A*
v;d[3]=l*t+p*u+B*v;d[4]=b*w+n*x+r*y;d[5]=f*w+o*x+s*y;d[6]=k*w+m*x+A*y;d[7]=l*w+p*x+B*y;d[8]=b*z+n*e+r*g;d[9]=f*z+o*e+s*g;d[10]=k*z+m*e+A*g;d[11]=l*z+p*e+B*g;return d};mat4.rotateX=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[4],g=a[5],f=a[6],h=a[7],i=a[8],j=a[9],k=a[10],l=a[11];c?a!==c&&(c[0]=a[0],c[1]=a[1],c[2]=a[2],c[3]=a[3],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[4]=e*b+i*d;c[5]=g*b+j*d;c[6]=f*b+k*d;c[7]=h*b+l*d;c[8]=e*-d+i*b;c[9]=g*-d+j*b;c[10]=f*-d+k*b;c[11]=h*-d+l*b;return c};
mat4.rotateY=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[0],g=a[1],f=a[2],h=a[3],i=a[8],j=a[9],k=a[10],l=a[11];c?a!==c&&(c[4]=a[4],c[5]=a[5],c[6]=a[6],c[7]=a[7],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[0]=e*b+i*-d;c[1]=g*b+j*-d;c[2]=f*b+k*-d;c[3]=h*b+l*-d;c[8]=e*d+i*b;c[9]=g*d+j*b;c[10]=f*d+k*b;c[11]=h*d+l*b;return c};
mat4.rotateZ=function(a,b,c){var d=Math.sin(b),b=Math.cos(b),e=a[0],g=a[1],f=a[2],h=a[3],i=a[4],j=a[5],k=a[6],l=a[7];c?a!==c&&(c[8]=a[8],c[9]=a[9],c[10]=a[10],c[11]=a[11],c[12]=a[12],c[13]=a[13],c[14]=a[14],c[15]=a[15]):c=a;c[0]=e*b+i*d;c[1]=g*b+j*d;c[2]=f*b+k*d;c[3]=h*b+l*d;c[4]=e*-d+i*b;c[5]=g*-d+j*b;c[6]=f*-d+k*b;c[7]=h*-d+l*b;return c};
mat4.frustum=function(a,b,c,d,e,g,f){f||(f=mat4.create());var h=b-a,i=d-c,j=g-e;f[0]=e*2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=e*2/i;f[6]=0;f[7]=0;f[8]=(b+a)/h;f[9]=(d+c)/i;f[10]=-(g+e)/j;f[11]=-1;f[12]=0;f[13]=0;f[14]=-(g*e*2)/j;f[15]=0;return f};mat4.perspective=function(a,b,c,d,e){a=c*Math.tan(a*Math.PI/360);b*=a;return mat4.frustum(-b,b,-a,a,c,d,e)};
mat4.ortho=function(a,b,c,d,e,g,f){f||(f=mat4.create());var h=b-a,i=d-c,j=g-e;f[0]=2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=2/i;f[6]=0;f[7]=0;f[8]=0;f[9]=0;f[10]=-2/j;f[11]=0;f[12]=-(a+b)/h;f[13]=-(d+c)/i;f[14]=-(g+e)/j;f[15]=1;return f};
mat4.lookAt=function(a,b,c,d){d||(d=mat4.create());var e,g,f,h,i,j,k,l,n=a[0],o=a[1],a=a[2];g=c[0];f=c[1];e=c[2];c=b[1];j=b[2];if(n===b[0]&&o===c&&a===j)return mat4.identity(d);c=n-b[0];j=o-b[1];k=a-b[2];l=1/Math.sqrt(c*c+j*j+k*k);c*=l;j*=l;k*=l;b=f*k-e*j;e=e*c-g*k;g=g*j-f*c;(l=Math.sqrt(b*b+e*e+g*g))?(l=1/l,b*=l,e*=l,g*=l):g=e=b=0;f=j*g-k*e;h=k*b-c*g;i=c*e-j*b;(l=Math.sqrt(f*f+h*h+i*i))?(l=1/l,f*=l,h*=l,i*=l):i=h=f=0;d[0]=b;d[1]=f;d[2]=c;d[3]=0;d[4]=e;d[5]=h;d[6]=j;d[7]=0;d[8]=g;d[9]=i;d[10]=k;d[11]=
0;d[12]=-(b*n+e*o+g*a);d[13]=-(f*n+h*o+i*a);d[14]=-(c*n+j*o+k*a);d[15]=1;return d};mat4.fromRotationTranslation=function(a,b,c){c||(c=mat4.create());var d=a[0],e=a[1],g=a[2],f=a[3],h=d+d,i=e+e,j=g+g,a=d*h,k=d*i;d*=j;var l=e*i;e*=j;g*=j;h*=f;i*=f;f*=j;c[0]=1-(l+g);c[1]=k+f;c[2]=d-i;c[3]=0;c[4]=k-f;c[5]=1-(a+g);c[6]=e+h;c[7]=0;c[8]=d+i;c[9]=e-h;c[10]=1-(a+l);c[11]=0;c[12]=b[0];c[13]=b[1];c[14]=b[2];c[15]=1;return c};
mat4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+", "+a[9]+", "+a[10]+", "+a[11]+", "+a[12]+", "+a[13]+", "+a[14]+", "+a[15]+"]"};quat4.create=function(a){var b=new MatrixArray(4);a&&(b[0]=a[0],b[1]=a[1],b[2]=a[2],b[3]=a[3]);return b};quat4.set=function(a,b){b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];return b};
quat4.calculateW=function(a,b){var c=a[0],d=a[1],e=a[2];if(!b||a===b)return a[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e)),a;b[0]=c;b[1]=d;b[2]=e;b[3]=-Math.sqrt(Math.abs(1-c*c-d*d-e*e));return b};quat4.inverse=function(a,b){if(!b||a===b)return a[0]*=-1,a[1]*=-1,a[2]*=-1,a;b[0]=-a[0];b[1]=-a[1];b[2]=-a[2];b[3]=a[3];return b};quat4.length=function(a){var b=a[0],c=a[1],d=a[2],a=a[3];return Math.sqrt(b*b+c*c+d*d+a*a)};
quat4.normalize=function(a,b){b||(b=a);var c=a[0],d=a[1],e=a[2],g=a[3],f=Math.sqrt(c*c+d*d+e*e+g*g);if(f===0)return b[0]=0,b[1]=0,b[2]=0,b[3]=0,b;f=1/f;b[0]=c*f;b[1]=d*f;b[2]=e*f;b[3]=g*f;return b};quat4.multiply=function(a,b,c){c||(c=a);var d=a[0],e=a[1],g=a[2],a=a[3],f=b[0],h=b[1],i=b[2],b=b[3];c[0]=d*b+a*f+e*i-g*h;c[1]=e*b+a*h+g*f-d*i;c[2]=g*b+a*i+d*h-e*f;c[3]=a*b-d*f-e*h-g*i;return c};
quat4.multiplyVec3=function(a,b,c){c||(c=b);var d=b[0],e=b[1],g=b[2],b=a[0],f=a[1],h=a[2],a=a[3],i=a*d+f*g-h*e,j=a*e+h*d-b*g,k=a*g+b*e-f*d,d=-b*d-f*e-h*g;c[0]=i*a+d*-b+j*-h-k*-f;c[1]=j*a+d*-f+k*-b-i*-h;c[2]=k*a+d*-h+i*-f-j*-b;return c};quat4.toMat3=function(a,b){b||(b=mat3.create());var c=a[0],d=a[1],e=a[2],g=a[3],f=c+c,h=d+d,i=e+e,j=c*f,k=c*h;c*=i;var l=d*h;d*=i;e*=i;f*=g;h*=g;g*=i;b[0]=1-(l+e);b[1]=k+g;b[2]=c-h;b[3]=k-g;b[4]=1-(j+e);b[5]=d+f;b[6]=c+h;b[7]=d-f;b[8]=1-(j+l);return b};
quat4.toMat4=function(a,b){b||(b=mat4.create());var c=a[0],d=a[1],e=a[2],g=a[3],f=c+c,h=d+d,i=e+e,j=c*f,k=c*h;c*=i;var l=d*h;d*=i;e*=i;f*=g;h*=g;g*=i;b[0]=1-(l+e);b[1]=k+g;b[2]=c-h;b[3]=0;b[4]=k-g;b[5]=1-(j+e);b[6]=d+f;b[7]=0;b[8]=c+h;b[9]=d-f;b[10]=1-(j+l);b[11]=0;b[12]=0;b[13]=0;b[14]=0;b[15]=1;return b};
quat4.slerp=function(a,b,c,d){d||(d=a);var e=a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3],g,f;if(Math.abs(e)>=1)return d!==a&&(d[0]=a[0],d[1]=a[1],d[2]=a[2],d[3]=a[3]),d;g=Math.acos(e);f=Math.sqrt(1-e*e);if(Math.abs(f)<0.001)return d[0]=a[0]*0.5+b[0]*0.5,d[1]=a[1]*0.5+b[1]*0.5,d[2]=a[2]*0.5+b[2]*0.5,d[3]=a[3]*0.5+b[3]*0.5,d;e=Math.sin((1-c)*g)/f;c=Math.sin(c*g)/f;d[0]=a[0]*e+b[0]*c;d[1]=a[1]*e+b[1]*c;d[2]=a[2]*e+b[2]*c;d[3]=a[3]*e+b[3]*c;return d};
quat4.str=function(a){return"["+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+"]"};
(function()
{
	var MAX_VERTICES = 8000;						// equates to 2500 objects being drawn
	var MAX_INDICES = (MAX_VERTICES / 2) * 3;		// 6 indices for every 4 vertices
	var MAX_POINTS = 8000;
	var MULTI_BUFFERS = 4;							// cycle 4 buffers to try and avoid blocking
	var BATCH_NULL = 0;
	var BATCH_QUAD = 1;
	var BATCH_SETTEXTURE = 2;
	var BATCH_SETOPACITY = 3;
	var BATCH_SETBLEND = 4;
	var BATCH_UPDATEMODELVIEW = 5;
	var BATCH_RENDERTOTEXTURE = 6;
	var BATCH_CLEAR = 7;
	var BATCH_POINTS = 8;
	var BATCH_SETPROGRAM = 9;
	var BATCH_SETPROGRAMPARAMETERS = 10;
	function GLWrap_(gl, isMobile)
	{
		this.width = 0;		// not yet known, wait for call to setSize()
		this.height = 0;
		this.cam = vec3.create([0, 0, 100]);			// camera position
		this.look = vec3.create([0, 0, 0]);				// lookat position
		this.up = vec3.create([0, 1, 0]);				// up vector
		this.worldScale = vec3.create([1, 1, 1]);		// world scaling factor
		this.matP = mat4.create();						// perspective matrix
		this.matMV = mat4.create();						// model view matrix
		this.lastMV = mat4.create();
		this.currentMV = mat4.create();
		this.gl = gl;
		this.initState();
	};
	GLWrap_.prototype.initState = function ()
	{
		var gl = this.gl;
		var i, len;
		this.lastOpacity = 1;
		this.lastTexture = null;
		this.currentOpacity = 1;
		gl.clearColor(0, 0, 0, 0);
		gl.clear(gl.COLOR_BUFFER_BIT);
		gl.enable(gl.BLEND);
        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);
		gl.disable(gl.CULL_FACE);
		gl.disable(gl.DEPTH_TEST);
		this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);
		this.lastSrcBlend = gl.ONE;
		this.lastDestBlend = gl.ONE_MINUS_SRC_ALPHA;
		this.pointBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ARRAY_BUFFER, this.pointBuffer);
		this.vertexBuffers = new Array(MULTI_BUFFERS);
		this.texcoordBuffers = new Array(MULTI_BUFFERS);
		for (i = 0; i < MULTI_BUFFERS; i++)
		{
			this.vertexBuffers[i] = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers[i]);
			this.texcoordBuffers[i] = gl.createBuffer();
			gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffers[i]);
		}
		this.curBuffer = 0;
		this.indexBuffer = gl.createBuffer();
		gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
		this.vertexData = new Float32Array(MAX_VERTICES * 2);
		this.texcoordData = new Float32Array(MAX_VERTICES * 2);
		this.pointData = new Float32Array(MAX_POINTS * 4);
		var indexData = new Uint16Array(MAX_INDICES);
		i = 0, len = MAX_INDICES;
		var fv = 0;
		while (i < len)
		{
			indexData[i++] = fv;		// top left
			indexData[i++] = fv + 1;	// top right
			indexData[i++] = fv + 2;	// bottom right (first tri)
			indexData[i++] = fv;		// top left
			indexData[i++] = fv + 2;	// bottom right
			indexData[i++] = fv + 3;	// bottom left
			fv += 4;
		}
		gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexData, gl.STATIC_DRAW);
		this.vertexPtr = 0;
		this.pointPtr = 0;
		var fsSource, vsSource;
		this.shaderPrograms = [];
		fsSource = [
			"varying mediump vec2 vTex;",
			"uniform lowp float opacity;",
			"uniform lowp sampler2D samplerFront;",
			"void main(void) {",
			"	gl_FragColor = texture2D(samplerFront, vTex);",
			"	gl_FragColor *= opacity;",
			"}"
		].join("\n");
		vsSource = [
			"attribute highp vec2 aPos;",
			"attribute mediump vec2 aTex;",
			"varying mediump vec2 vTex;",
			"uniform highp mat4 matP;",
			"uniform highp mat4 matMV;",
			"void main(void) {",
			"	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);",
			"	vTex = aTex;",
			"}"
		].join("\n");
		var shaderProg = this.createShaderProgram({src: fsSource}, vsSource, "<default>");
;
		this.shaderPrograms.push(shaderProg);		// Default shader is always shader 0
		fsSource = [
			"uniform mediump sampler2D samplerFront;",
			"varying lowp float opacity;",
			"void main(void) {",
			"	gl_FragColor = texture2D(samplerFront, gl_PointCoord);",
			"	gl_FragColor *= opacity;",
			"}"
		].join("\n");
		var pointVsSource = [
			"attribute vec4 aPos;",
			"varying float opacity;",
			"uniform mat4 matP;",
			"uniform mat4 matMV;",
			"void main(void) {",
			"	gl_Position = matP * matMV * vec4(aPos.x, aPos.y, 0.0, 1.0);",
			"	gl_PointSize = aPos.z;",
			"	opacity = aPos.w;",
			"}"
		].join("\n");
		shaderProg = this.createShaderProgram({src: fsSource}, pointVsSource, "<point>");
;
		this.shaderPrograms.push(shaderProg);		// Point shader is always shader 1
		for (var shader_name in cr.shaders)
		{
			if (cr.shaders.hasOwnProperty(shader_name))
				this.shaderPrograms.push(this.createShaderProgram(cr.shaders[shader_name], vsSource, shader_name));
		}
		gl.activeTexture(gl.TEXTURE0);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.batch = [];
		this.batchPtr = 0;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
		this.lastProgram = -1;				// start -1 so first switchProgram can do work
		this.currentProgram = -1;			// current program during batch execution
		this.currentShader = null;
		this.fbo = gl.createFramebuffer();
		this.renderToTex = null;
		this.tmpVec3 = vec3.create([0, 0, 0]);
;
;
		var pointsizes = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);
		this.minPointSize = pointsizes[0];
		this.maxPointSize = pointsizes[1];
;
		this.switchProgram(0);
		cr.seal(this);
	};
	function GLShaderProgram(gl, shaderProgram, name)
	{
		this.gl = gl;
		this.shaderProgram = shaderProgram;
		this.name = name;
		this.locAPos = gl.getAttribLocation(shaderProgram, "aPos");
		this.locATex = gl.getAttribLocation(shaderProgram, "aTex");
		this.locMatP = gl.getUniformLocation(shaderProgram, "matP");
		this.locMatMV = gl.getUniformLocation(shaderProgram, "matMV");
		this.locOpacity = gl.getUniformLocation(shaderProgram, "opacity");
		this.locSamplerFront = gl.getUniformLocation(shaderProgram, "samplerFront");
		this.locSamplerBack = gl.getUniformLocation(shaderProgram, "samplerBack");
		this.locDestStart = gl.getUniformLocation(shaderProgram, "destStart");
		this.locDestEnd = gl.getUniformLocation(shaderProgram, "destEnd");
		this.locSeconds = gl.getUniformLocation(shaderProgram, "seconds");
		this.locPixelWidth = gl.getUniformLocation(shaderProgram, "pixelWidth");
		this.locPixelHeight = gl.getUniformLocation(shaderProgram, "pixelHeight");
		this.locLayerScale = gl.getUniformLocation(shaderProgram, "layerScale");
		if (this.locOpacity)
			gl.uniform1f(this.locOpacity, 1);
		if (this.locSamplerFront)
			gl.uniform1i(this.locSamplerFront, 0);
		if (this.locSamplerBack)
			gl.uniform1i(this.locSamplerBack, 1);
		if (this.locDestStart)
			gl.uniform2f(this.locDestStart, 0.0, 0.0);
		if (this.locDestEnd)
			gl.uniform2f(this.locDestEnd, 1.0, 1.0);
		this.hasCurrentMatMV = false;		// matMV needs updating
	};
	GLWrap_.prototype.createShaderProgram = function(shaderEntry, vsSource, name)
	{
		var gl = this.gl;
		var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
		gl.shaderSource(fragmentShader, shaderEntry.src);
		gl.compileShader(fragmentShader);
		if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			return null;
		}
		var vertexShader = gl.createShader(gl.VERTEX_SHADER);
		gl.shaderSource(vertexShader, vsSource);
		gl.compileShader(vertexShader);
		if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			gl.deleteShader(vertexShader);
			return null;
		}
		var shaderProgram = gl.createProgram();
		gl.attachShader(shaderProgram, fragmentShader);
		gl.attachShader(shaderProgram, vertexShader);
		gl.linkProgram(shaderProgram);
		if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS))
		{
;
			gl.deleteShader(fragmentShader);
			gl.deleteShader(vertexShader);
			gl.deleteProgram(shaderProgram);
			return null;
		}
		gl.useProgram(shaderProgram);
		gl.validateProgram(shaderProgram);
;
		gl.deleteShader(fragmentShader);
		gl.deleteShader(vertexShader);
		var ret = new GLShaderProgram(gl, shaderProgram, name);
		ret.extendBoxHorizontal = shaderEntry.extendBoxHorizontal || 0;
		ret.extendBoxVertical = shaderEntry.extendBoxVertical || 0;
		ret.crossSampling = !!shaderEntry.crossSampling;
		ret.animated = !!shaderEntry.animated;
		ret.parameters = shaderEntry.parameters || [];
		var i, len;
		for (i = 0, len = ret.parameters.length; i < len; i++)
		{
			ret.parameters[i][1] = gl.getUniformLocation(shaderProgram, ret.parameters[i][0]);
			gl.uniform1f(ret.parameters[i][1], 0);
		}
		cr.seal(ret);
		return ret;
	};
	GLWrap_.prototype.getShaderIndex = function(name_)
	{
		var i, len;
		for (i = 0, len = this.shaderPrograms.length; i < len; i++)
		{
			if (this.shaderPrograms[i].name === name_)
				return i;
		}
		return -1;
	};
	GLWrap_.prototype.project = function (x, y, out)
	{
		var viewport = [0, 0, this.width, this.height];
		var mv = this.matMV;
		var proj = this.matP;
		var fTempo = [0, 0, 0, 0, 0, 0, 0, 0];
		fTempo[0] = mv[0]*x+mv[4]*y+mv[12];
		fTempo[1] = mv[1]*x+mv[5]*y+mv[13];
		fTempo[2] = mv[2]*x+mv[6]*y+mv[14];
		fTempo[3] = mv[3]*x+mv[7]*y+mv[15];
		fTempo[4] = proj[0]*fTempo[0]+proj[4]*fTempo[1]+proj[8]*fTempo[2]+proj[12]*fTempo[3];
		fTempo[5] = proj[1]*fTempo[0]+proj[5]*fTempo[1]+proj[9]*fTempo[2]+proj[13]*fTempo[3];
		fTempo[6] = proj[2]*fTempo[0]+proj[6]*fTempo[1]+proj[10]*fTempo[2]+proj[14]*fTempo[3];
		fTempo[7] = -fTempo[2];
		if(fTempo[7]===0.0)	//The w value
			return;
		fTempo[7]=1.0/fTempo[7];
		fTempo[4]*=fTempo[7];
		fTempo[5]*=fTempo[7];
		fTempo[6]*=fTempo[7];
		out[0]=(fTempo[4]*0.5+0.5)*viewport[2]+viewport[0];
		out[1]=(fTempo[5]*0.5+0.5)*viewport[3]+viewport[1];
	};
	GLWrap_.prototype.setSize = function(w, h, force)
	{
		if (this.width === w && this.height === h && !force)
			return;
		this.endBatch();
		this.width = w;
		this.height = h;
		this.gl.viewport(0, 0, w, h);
		mat4.perspective(45, w / h, 1, 1000, this.matP);
		mat4.lookAt(this.cam, this.look, this.up, this.matMV);
		var tl = [0, 0];
		var br = [0, 0];
		this.project(0, 0, tl);
		this.project(1, 1, br);
		this.worldScale[0] = 1 / (br[0] - tl[0]);
		this.worldScale[1] = -1 / (br[1] - tl[1]);
		var i, len, s;
		for (i = 0, len = this.shaderPrograms.length; i < len; i++)
		{
			s = this.shaderPrograms[i];
			s.hasCurrentMatMV = false;
			if (s.locMatP)
			{
				this.gl.useProgram(s.shaderProgram);
				this.gl.uniformMatrix4fv(s.locMatP, false, this.matP);
			}
		}
		this.gl.useProgram(this.shaderPrograms[this.lastProgram].shaderProgram);
		this.gl.bindTexture(this.gl.TEXTURE_2D, null);
		this.lastTexture = null;
	};
	GLWrap_.prototype.resetModelView = function ()
	{
		mat4.lookAt(this.cam, this.look, this.up, this.matMV);
		mat4.scale(this.matMV, this.worldScale);
	};
	GLWrap_.prototype.translate = function (x, y)
	{
		if (x === 0 && y === 0)
			return;
		this.tmpVec3[0] = x;// * this.worldScale[0];
		this.tmpVec3[1] = y;// * this.worldScale[1];
		this.tmpVec3[2] = 0;
		mat4.translate(this.matMV, this.tmpVec3);
	};
	GLWrap_.prototype.scale = function (x, y)
	{
		if (x === 1 && y === 1)
			return;
		this.tmpVec3[0] = x;
		this.tmpVec3[1] = y;
		this.tmpVec3[2] = 1;
		mat4.scale(this.matMV, this.tmpVec3);
	};
	GLWrap_.prototype.rotateZ = function (a)
	{
		if (a === 0)
			return;
		mat4.rotateZ(this.matMV, a);
	};
	GLWrap_.prototype.updateModelView = function()
	{
		var anydiff = false;
		for (var i = 0; i < 16; i++)
		{
			if (this.lastMV[i] !== this.matMV[i])
			{
				anydiff = true;
				break;
			}
		}
		if (!anydiff)
			return;
		var b = this.pushBatch();
		b.type = BATCH_UPDATEMODELVIEW;
		if (b.mat4param)
			mat4.set(this.matMV, b.mat4param);
		else
			b.mat4param = mat4.create(this.matMV);
		mat4.set(this.matMV, this.lastMV);
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	/*
	var debugBatch = false;
	jQuery(document).mousedown(
		function(info) {
			if (info.which === 2)
				debugBatch = true;
		}
	);
	*/
	function GLBatchJob(type_, glwrap_)
	{
		this.type = type_;
		this.glwrap = glwrap_;
		this.gl = glwrap_.gl;
		this.opacityParam = 0;		// for setOpacity()
		this.startIndex = 0;		// for quad()
		this.indexCount = 0;		// "
		this.texParam = null;		// for setTexture()
		this.mat4param = null;		// for updateModelView()
		this.shaderParams = [];		// for user parameters
		cr.seal(this);
	};
	GLBatchJob.prototype.doSetTexture = function ()
	{
		this.gl.bindTexture(this.gl.TEXTURE_2D, this.texParam);
	};
	GLBatchJob.prototype.doSetOpacity = function ()
	{
		var o = this.opacityParam;
		var glwrap = this.glwrap;
		glwrap.currentOpacity = o;
		var curProg = glwrap.currentShader;
		if (curProg.locOpacity)
			this.gl.uniform1f(curProg.locOpacity, o);
	};
	GLBatchJob.prototype.doQuad = function ()
	{
		this.gl.drawElements(this.gl.TRIANGLES, this.indexCount, this.gl.UNSIGNED_SHORT, this.startIndex * 2);
	};
	GLBatchJob.prototype.doSetBlend = function ()
	{
		this.gl.blendFunc(this.startIndex, this.indexCount);
	};
	GLBatchJob.prototype.doUpdateModelView = function ()
	{
		var i, len, s, shaderPrograms = this.glwrap.shaderPrograms, currentProgram = this.glwrap.currentProgram;
		for (i = 0, len = shaderPrograms.length; i < len; i++)
		{
			s = shaderPrograms[i];
			if (i === currentProgram && s.locMatMV)
			{
				this.gl.uniformMatrix4fv(s.locMatMV, false, this.mat4param);
				s.hasCurrentMatMV = true;
			}
			else
				s.hasCurrentMatMV = false;
		}
		mat4.set(this.mat4param, this.glwrap.currentMV);
	};
	GLBatchJob.prototype.doRenderToTexture = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		if (this.texParam)
		{
			gl.bindFramebuffer(gl.FRAMEBUFFER, glwrap.fbo);
			gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texParam, 0);
;
		}
		else
		{
			gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0);
			gl.bindFramebuffer(gl.FRAMEBUFFER, null);
		}
	};
	GLBatchJob.prototype.doClear = function ()
	{
		var gl = this.gl;
		if (this.startIndex === 0)		// clear whole surface
		{
			gl.clearColor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]);
			gl.clear(gl.COLOR_BUFFER_BIT);
		}
		else							// clear rectangle
		{
			gl.enable(gl.SCISSOR_TEST);
			gl.scissor(this.mat4param[0], this.mat4param[1], this.mat4param[2], this.mat4param[3]);
			gl.clearColor(0, 0, 0, 0);
			gl.clear(this.gl.COLOR_BUFFER_BIT);
			gl.disable(gl.SCISSOR_TEST);
		}
	};
	GLBatchJob.prototype.doPoints = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		var s = glwrap.shaderPrograms[1];
		gl.useProgram(s.shaderProgram);
		if (!s.hasCurrentMatMV && s.locMatMV)
		{
			gl.uniformMatrix4fv(s.locMatMV, false, glwrap.currentMV);
			s.hasCurrentMatMV = true;
		}
		gl.enableVertexAttribArray(s.locAPos);
		gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.pointBuffer);
		gl.vertexAttribPointer(s.locAPos, 4, gl.FLOAT, false, 0, 0);
		gl.drawArrays(gl.POINTS, this.startIndex / 4, this.indexCount);
		s = glwrap.currentShader;
		gl.useProgram(s.shaderProgram);
		if (s.locAPos >= 0)
		{
			gl.enableVertexAttribArray(s.locAPos);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.vertexBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
		}
		if (s.locATex >= 0)
		{
			gl.enableVertexAttribArray(s.locATex);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.texcoordBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
	};
	GLBatchJob.prototype.doSetProgram = function ()
	{
		var gl = this.gl;
		var glwrap = this.glwrap;
		var s = glwrap.shaderPrograms[this.startIndex];		// recycled param to save memory
		glwrap.currentProgram = this.startIndex;			// current batch program
		glwrap.currentShader = s;
		gl.useProgram(s.shaderProgram);						// switch to
		if (!s.hasCurrentMatMV && s.locMatMV)
		{
			gl.uniformMatrix4fv(s.locMatMV, false, glwrap.currentMV);
			s.hasCurrentMatMV = true;
		}
		if (s.locOpacity)
			gl.uniform1f(s.locOpacity, glwrap.currentOpacity);
		if (s.locAPos >= 0)
		{
			gl.enableVertexAttribArray(s.locAPos);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.vertexBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
		}
		if (s.locATex >= 0)
		{
			gl.enableVertexAttribArray(s.locATex);
			gl.bindBuffer(gl.ARRAY_BUFFER, glwrap.texcoordBuffers[glwrap.curBuffer]);
			gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
	}
	GLBatchJob.prototype.doSetProgramParameters = function ()
	{
		var i, len, s = this.glwrap.currentShader;
		var gl = this.gl;
		if (s.locSamplerBack)
		{
			gl.activeTexture(gl.TEXTURE1);
			gl.bindTexture(gl.TEXTURE_2D, this.texParam);
			gl.activeTexture(gl.TEXTURE0);
		}
		if (s.locPixelWidth)
			gl.uniform1f(s.locPixelWidth, this.mat4param[0]);
		if (s.locPixelHeight)
			gl.uniform1f(s.locPixelHeight, this.mat4param[1]);
		if (s.locDestStart)
			gl.uniform2f(s.locDestStart, this.mat4param[2], this.mat4param[3]);
		if (s.locDestEnd)
			gl.uniform2f(s.locDestEnd, this.mat4param[4], this.mat4param[5]);
		if (s.locLayerScale)
			gl.uniform1f(s.locLayerScale, this.mat4param[6]);
		if (s.locSeconds)
			gl.uniform1f(s.locSeconds, cr.performance_now() / 1000.0);
		if (s.parameters.length)
		{
			for (i = 0, len = s.parameters.length; i < len; i++)
			{
				gl.uniform1f(s.parameters[i][1], this.shaderParams[i]);
			}
		}
	};
	GLWrap_.prototype.pushBatch = function ()
	{
		if (this.batchPtr === this.batch.length)
			this.batch.push(new GLBatchJob(BATCH_NULL, this));
		return this.batch[this.batchPtr++];
	};
	GLWrap_.prototype.endBatch = function ()
	{
		if (this.batchPtr === 0)
			return;
		if (this.gl.isContextLost())
			return;
		var gl = this.gl;
		if (this.pointPtr > 0)
		{
			gl.bindBuffer(gl.ARRAY_BUFFER, this.pointBuffer);
			gl.bufferData(gl.ARRAY_BUFFER, this.pointData.subarray(0, this.pointPtr), gl.STREAM_DRAW);
			if (s && s.locAPos >= 0 && s.name === "<point>")
				gl.vertexAttribPointer(s.locAPos, 4, gl.FLOAT, false, 0, 0);
		}
		if (this.vertexPtr > 0)
		{
			var s = this.currentShader;
			gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffers[this.curBuffer]);
			gl.bufferData(gl.ARRAY_BUFFER, this.vertexData.subarray(0, this.vertexPtr), gl.STREAM_DRAW);
			if (s && s.locAPos >= 0 && s.name !== "<point>")
				gl.vertexAttribPointer(s.locAPos, 2, gl.FLOAT, false, 0, 0);
			gl.bindBuffer(gl.ARRAY_BUFFER, this.texcoordBuffers[this.curBuffer]);
			gl.bufferData(gl.ARRAY_BUFFER, this.texcoordData.subarray(0, this.vertexPtr), gl.STREAM_DRAW);
			if (s && s.locATex >= 0 && s.name !== "<point>")
				gl.vertexAttribPointer(s.locATex, 2, gl.FLOAT, false, 0, 0);
		}
		var i, len, b;
		for (i = 0, len = this.batchPtr; i < len; i++)
		{
			b = this.batch[i];
			switch (b.type) {
			case BATCH_QUAD:
				b.doQuad();
				break;
			case BATCH_SETTEXTURE:
				b.doSetTexture();
				break;
			case BATCH_SETOPACITY:
				b.doSetOpacity();
				break;
			case BATCH_SETBLEND:
				b.doSetBlend();
				break;
			case BATCH_UPDATEMODELVIEW:
				b.doUpdateModelView();
				break;
			case BATCH_RENDERTOTEXTURE:
				b.doRenderToTexture();
				break;
			case BATCH_CLEAR:
				b.doClear();
				break;
			case BATCH_POINTS:
				b.doPoints();
				break;
			case BATCH_SETPROGRAM:
				b.doSetProgram();
				break;
			case BATCH_SETPROGRAMPARAMETERS:
				b.doSetProgramParameters();
				break;
			}
		}
		this.batchPtr = 0;
		this.vertexPtr = 0;
		this.pointPtr = 0;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
		this.curBuffer++;
		if (this.curBuffer >= MULTI_BUFFERS)
			this.curBuffer = 0;
	};
	GLWrap_.prototype.setOpacity = function (op)
	{
		if (op === this.lastOpacity)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETOPACITY;
		b.opacityParam = op;
		this.lastOpacity = op;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setTexture = function (tex)
	{
		if (tex === this.lastTexture)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETTEXTURE;
		b.texParam = tex;
		this.lastTexture = tex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setBlend = function (s, d)
	{
		if (s === this.lastSrcBlend && d === this.lastDestBlend)
			return;
		var b = this.pushBatch();
		b.type = BATCH_SETBLEND;
		b.startIndex = s;		// recycle params to save memory
		b.indexCount = d;
		this.lastSrcBlend = s;
		this.lastDestBlend = d;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.setAlphaBlend = function ()
	{
		this.setBlend(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);
	};
	var LAST_VERTEX = MAX_VERTICES * 2 - 8;
	GLWrap_.prototype.quad = function(tlx, tly, trx, try_, brx, bry, blx, bly)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		vd[v] = tlx;
		td[v++] = 0;
		vd[v] = tly;
		td[v++] = 0;
		vd[v] = trx;
		td[v++] = 1;
		vd[v] = try_;
		td[v++] = 0;
		vd[v] = brx;
		td[v++] = 1;
		vd[v] = bry;
		td[v++] = 1;
		vd[v] = blx;
		td[v++] = 0;
		vd[v] = bly;
		td[v++] = 1;
		this.vertexPtr = v;
	};
	GLWrap_.prototype.quadTex = function(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex)
	{
		if (this.vertexPtr >= LAST_VERTEX)
			this.endBatch();
		var v = this.vertexPtr;			// vertex cursor
		var vd = this.vertexData;		// vertex data array
		var td = this.texcoordData;		// texture coord data array
		if (this.hasQuadBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount += 6;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_QUAD;
			b.startIndex = (v / 4) * 3;
			b.indexCount = 6;
			this.hasQuadBatchTop = true;
			this.hasPointBatchTop = false;
		}
		vd[v] = tlx;
		td[v++] = rcTex.left;
		vd[v] = tly;
		td[v++] = rcTex.top;
		vd[v] = trx;
		td[v++] = rcTex.right;
		vd[v] = try_;
		td[v++] = rcTex.top;
		vd[v] = brx;
		td[v++] = rcTex.right;
		vd[v] = bry;
		td[v++] = rcTex.bottom;
		vd[v] = blx;
		td[v++] = rcTex.left;
		vd[v] = bly;
		td[v++] = rcTex.bottom;
		this.vertexPtr = v;
	};
	var LAST_POINT = MAX_POINTS - 4;
	GLWrap_.prototype.point = function(x_, y_, size_, opacity_)
	{
		if (this.pointPtr >= LAST_POINT)
			this.endBatch();
		var p = this.pointPtr;			// point cursor
		var pd = this.pointData;		// point data array
		if (this.hasPointBatchTop)
		{
			this.batch[this.batchPtr - 1].indexCount++;
		}
		else
		{
			var b = this.pushBatch();
			b.type = BATCH_POINTS;
			b.startIndex = p;
			b.indexCount = 1;
			this.hasPointBatchTop = true;
			this.hasQuadBatchTop = false;
		}
		pd[p++] = x_;
		pd[p++] = y_;
		pd[p++] = size_;
		pd[p++] = opacity_;
		this.pointPtr = p;
	};
	GLWrap_.prototype.switchProgram = function (progIndex)
	{
		if (this.lastProgram === progIndex)
			return;			// no change
		var shaderProg = this.shaderPrograms[progIndex];
		if (!shaderProg)
		{
			if (this.lastProgram === 0)
				return;								// already on default shader
			progIndex = 0;
			shaderProg = this.shaderPrograms[0];
		}
		var b = this.pushBatch();
		b.type = BATCH_SETPROGRAM;
		b.startIndex = progIndex;
		this.lastProgram = progIndex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.programUsesDest = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return !!(s.locDestStart || s.locDestEnd);
	};
	GLWrap_.prototype.programUsesCrossSampling = function (progIndex)
	{
		return this.shaderPrograms[progIndex].crossSampling;
	};
	GLWrap_.prototype.programExtendsBox = function (progIndex)
	{
		var s = this.shaderPrograms[progIndex];
		return s.extendBoxHorizontal !== 0 || s.extendBoxVertical !== 0;
	};
	GLWrap_.prototype.getProgramBoxExtendHorizontal = function (progIndex)
	{
		return this.shaderPrograms[progIndex].extendBoxHorizontal;
	};
	GLWrap_.prototype.getProgramBoxExtendVertical = function (progIndex)
	{
		return this.shaderPrograms[progIndex].extendBoxVertical;
	};
	GLWrap_.prototype.getProgramParameterType = function (progIndex, paramIndex)
	{
		return this.shaderPrograms[progIndex].parameters[paramIndex][2];
	};
	GLWrap_.prototype.programIsAnimated = function (progIndex)
	{
		return this.shaderPrograms[progIndex].animated;
	};
	GLWrap_.prototype.setProgramParameters = function (backTex, pixelWidth, pixelHeight, destStartX, destStartY, destEndX, destEndY, layerScale, params)
	{
		var i, len, s = this.shaderPrograms[this.lastProgram];
		if (s.locPixelWidth || s.locPixelHeight || s.locSeconds || s.locSamplerBack ||
			s.locDestStart || s.locDestEnd || s.locLayerScale || params.length)
		{
			var b = this.pushBatch();
			b.type = BATCH_SETPROGRAMPARAMETERS;
			if (b.mat4param)
				mat4.set(this.matMV, b.mat4param);
			else
				b.mat4param = mat4.create();
			b.mat4param[0] = pixelWidth;
			b.mat4param[1] = pixelHeight;
			b.mat4param[2] = destStartX;
			b.mat4param[3] = destStartY;
			b.mat4param[4] = destEndX;
			b.mat4param[5] = destEndY;
			b.mat4param[6] = layerScale;
			b.texParam = backTex;
			if (params.length)
			{
				b.shaderParams.length = params.length;
				for (i = 0, len = params.length; i < len; i++)
					b.shaderParams[i] = params[i];
			}
			this.hasQuadBatchTop = false;
			this.hasPointBatchTop = false;
		}
	};
	GLWrap_.prototype.clear = function (r, g, b_, a)
	{
		var b = this.pushBatch();
		b.type = BATCH_CLEAR;
		b.startIndex = 0;					// clear all mode
		if (!b.mat4param)
			b.mat4param = mat4.create();
		b.mat4param[0] = r;
		b.mat4param[1] = g;
		b.mat4param[2] = b_;
		b.mat4param[3] = a;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.clearRect = function (x, y, w, h)
	{
		var b = this.pushBatch();
		b.type = BATCH_CLEAR;
		b.startIndex = 1;					// clear rect mode
		if (!b.mat4param)
			b.mat4param = mat4.create();
		b.mat4param[0] = x;
		b.mat4param[1] = y;
		b.mat4param[2] = w;
		b.mat4param[3] = h;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	GLWrap_.prototype.present = function ()
	{
		this.endBatch();
		this.gl.flush();
		/*
		if (debugBatch)
		{
;
			debugBatch = false;
		}
		*/
	};
	function nextHighestPowerOfTwo(x) {
		--x;
		for (var i = 1; i < 32; i <<= 1) {
			x = x | x >> i;
		}
		return x + 1;
	}
	var all_textures = [];
	var BF_RGBA8 = 0;
	var BF_RGB8 = 1;
	var BF_RGBA4 = 2;
	var BF_RGB5_A1 = 3;
	var BF_RGB565 = 4;
	GLWrap_.prototype.loadTexture = function (img, tiling, linearsampling, pixelformat, tiletype)
	{
		this.endBatch();
;
		var gl = this.gl;
		var isPOT = (cr.isPOT(img.width) && cr.isPOT(img.height));
		var webGL_texture = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, webGL_texture);
		gl.pixelStorei(gl["UNPACK_PREMULTIPLY_ALPHA_WEBGL"], true);
		var internalformat = gl.RGBA;
		var format = gl.RGBA;
		var type = gl.UNSIGNED_BYTE;
		if (pixelformat)
		{
			switch (pixelformat) {
			case BF_RGB8:
				internalformat = gl.RGB;
				format = gl.RGB;
				break;
			case BF_RGBA4:
				type = gl.UNSIGNED_SHORT_4_4_4_4;
				break;
			case BF_RGB5_A1:
				type = gl.UNSIGNED_SHORT_5_5_5_1;
				break;
			case BF_RGB565:
				internalformat = gl.RGB;
				format = gl.RGB;
				type = gl.UNSIGNED_SHORT_5_6_5;
				break;
			}
		}
		if (!isPOT && tiling)
		{
			var canvas = document.createElement("canvas");
			canvas.width = nextHighestPowerOfTwo(img.width);
			canvas.height = nextHighestPowerOfTwo(img.height);
			var ctx = canvas.getContext("2d");
			ctx.drawImage(img,
						  0, 0, img.width, img.height,
						  0, 0, canvas.width, canvas.height);
			gl.texImage2D(gl.TEXTURE_2D, 0, internalformat, format, type, canvas);
		}
		else
			gl.texImage2D(gl.TEXTURE_2D, 0, internalformat, format, type, img);
		if (tiling)
		{
			if (tiletype === "repeat-x")
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
			}
			else if (tiletype === "repeat-y")
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
			}
			else
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);
			}
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		}
		if (linearsampling)
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
			if (isPOT)
			{
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);
				gl.generateMipmap(gl.TEXTURE_2D);
			}
			else
				gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
		}
		else
		{
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
			gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
		}
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture = null;
		webGL_texture.c2width = img.width;
		webGL_texture.c2height = img.height;
		all_textures.push(webGL_texture);
		return webGL_texture;
	};
	GLWrap_.prototype.createEmptyTexture = function (w, h, linearsampling, _16bit)
	{
		this.endBatch();
		var gl = this.gl;
		var webGL_texture = gl.createTexture();
		gl.bindTexture(gl.TEXTURE_2D, webGL_texture);
		gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, _16bit ? gl.UNSIGNED_SHORT_4_4_4_4 : gl.UNSIGNED_BYTE, null);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, linearsampling ? gl.LINEAR : gl.NEAREST);
		gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, linearsampling ? gl.LINEAR : gl.NEAREST);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture = null;
		webGL_texture.c2width = w;
		webGL_texture.c2height = h;
		all_textures.push(webGL_texture);
		return webGL_texture;
	};
	GLWrap_.prototype.videoToTexture = function (video_, texture_, _16bit)
	{
		this.endBatch();
		var gl = this.gl;
		gl.bindTexture(gl.TEXTURE_2D, texture_);
		gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, _16bit ? gl.UNSIGNED_SHORT_4_4_4_4 : gl.UNSIGNED_BYTE, video_);
		gl.bindTexture(gl.TEXTURE_2D, null);
		this.lastTexture = null;
	};
	GLWrap_.prototype.deleteTexture = function (tex)
	{
		if (!tex)
			return;
		this.endBatch();
		this.gl.bindTexture(this.gl.TEXTURE_2D, null);
		this.lastTexture = null;
		this.gl.deleteTexture(tex);
		cr.arrayFindRemove(all_textures, tex);
	};
	GLWrap_.prototype.estimateVRAM = function ()
	{
		var total = 0;
		var i, len, t;
		for (i = 0, len = all_textures.length; i < len; i++)
		{
			t = all_textures[i];
			total += (t.c2width * t.c2height * 4);
		}
		return total;
	};
	GLWrap_.prototype.textureCount = function ()
	{
		return all_textures.length;
	};
	GLWrap_.prototype.setRenderingToTexture = function (tex)
	{
		if (tex === this.renderToTex)
			return;
		var b = this.pushBatch();
		b.type = BATCH_RENDERTOTEXTURE;
		b.texParam = tex;
		this.renderToTex = tex;
		this.hasQuadBatchTop = false;
		this.hasPointBatchTop = false;
	};
	cr.GLWrap = GLWrap_;
}());
;
(function()
{
	function Runtime(canvas)
	{
		if (!canvas || (!canvas.getContext && !canvas["dc"]))
			return;
		if (canvas["c2runtime"])
			return;
		else
			canvas["c2runtime"] = this;
		var self = this;
		this.isPhoneGap = (typeof window["device"] !== "undefined" && (typeof window["device"]["cordova"] !== "undefined" || typeof window["device"]["phonegap"] !== "undefined"));
		this.isDirectCanvas = !!canvas["dc"];
		this.isAppMobi = (typeof window["AppMobi"] !== "undefined" || this.isDirectCanvas);
		this.isCocoonJs = !!window["c2cocoonjs"];
		if (this.isCocoonJs)
		{
			CocoonJS["App"]["onSuspended"].addEventListener(function() {
				self["setSuspended"](true);
			});
			CocoonJS["App"]["onActivated"].addEventListener(function () {
				self["setSuspended"](false);
			});
		}
		this.isDomFree = this.isDirectCanvas || this.isCocoonJs;
		this.isAndroid = /android/i.test(navigator.userAgent);
		this.isIE = /msie/i.test(navigator.userAgent);
		this.isiPhone = /iphone/i.test(navigator.userAgent) || /ipod/i.test(navigator.userAgent);	// treat ipod as an iphone
		this.isiPad = /ipad/i.test(navigator.userAgent);
		this.isiOS = this.isiPhone || this.isiPad;
		this.isChrome = /chrome/i.test(navigator.userAgent) || /chromium/i.test(navigator.userAgent);
		this.isSafari = !this.isChrome && /safari/i.test(navigator.userAgent);		// Chrome includes Safari in UA
		this.isWindows = /windows/i.test(navigator.userAgent);
		this.isNodeWebkit = (typeof window["c2nodewebkit"] !== "undefined");
		this.isArcade = (typeof window["is_scirra_arcade"] !== "undefined");
		this.devicePixelRatio = 1;
		this.isMobile = (this.isPhoneGap || this.isAppMobi || this.isCocoonJs || this.isAndroid || this.isiOS);
		if (!this.isMobile)
			this.isMobile = /(blackberry|bb10|playbook|palm|symbian|nokia|windows\s+ce|phone|mobile|tablet)/i.test(navigator.userAgent);
		this.canvas = canvas;
		this.canvasdiv = document.getElementById("c2canvasdiv");
		this.gl = null;
		this.glwrap = null;
		this.ctx = null;
		this.canvas.oncontextmenu = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		this.canvas.onselectstart = function (e) { if (e.preventDefault) e.preventDefault(); return false; };
		if (this.isDirectCanvas)
			window["c2runtime"] = this;
		this.width = canvas.width;
		this.height = canvas.height;
		this.lastwidth = this.width;
		this.lastheight = this.height;
		this.redraw = true;
		this.isSuspended = false;
		if (!Date.now) {
		  Date.now = function now() {
			return +new Date();
		  };
		}
		this.plugins = [];
		this.types = {};
		this.types_by_index = [];
		this.behaviors = [];
		this.layouts = {};
		this.layouts_by_index = [];
		this.eventsheets = {};
		this.eventsheets_by_index = [];
		this.wait_for_textures = [];        // for blocking until textures loaded
		this.triggers_to_postinit = [];
		this.all_global_vars = [];
		this.deathRow = new cr.ObjectSet();
		this.isInClearDeathRow = false;
		this.isInOnDestroy = 0;					// needs to support recursion so increments and decrements and is true if > 0
		this.isRunningEvents = false;
		this.createRow = [];
		this.isLoadingState = false;
		this.saveToSlot = "";
		this.loadFromSlot = "";
		this.loadFromJson = "";
		this.lastSaveJson = "";
		this.signalledContinuousPreview = false;
		this.suspendDrawing = false;		// for hiding display until continuous preview loads
		this.dt = 0;
        this.dt1 = 0;
		this.logictime = 0;			// used to calculate CPUUtilisation
		this.cpuutilisation = 0;
		this.zeroDtCount = 0;
        this.timescale = 1.0;
        this.kahanTime = new cr.KahanAdder();
		this.last_tick_time = 0;
		this.measuring_dt = true;
		this.fps = 0;
		this.last_fps_time = 0;
		this.tickcount = 0;
		this.execcount = 0;
		this.framecount = 0;        // for fps
		this.objectcount = 0;
		this.changelayout = null;
		this.destroycallbacks = [];
		this.event_stack = [];
		this.event_stack_index = -1;
		this.localvar_stack = [[]];
		this.localvar_stack_index = 0;
		this.trigger_depth = 0;		// recursion depth for triggers
		this.pushEventStack(null);
		this.loop_stack = [];
		this.loop_stack_index = -1;
		this.next_uid = 0;
		this.next_puid = 0;		// permanent unique ids
		this.layout_first_tick = true;
		this.family_count = 0;
		this.suspend_events = [];
		this.raf_id = 0;
		this.timeout_id = 0;
		this.isloading = true;
		this.loadingprogress = 0;
		this.isNodeFullscreen = false;
		this.stackLocalCount = 0;	// number of stack-based local vars for recursion
		this.had_a_click = false;
        this.objects_to_tick = new cr.ObjectSet();
		this.objects_to_tick2 = new cr.ObjectSet();
		this.registered_collisions = [];
		this.temp_poly = new cr.CollisionPoly([]);
		this.temp_poly2 = new cr.CollisionPoly([]);
		this.allGroups = [];				// array of all event groups
        this.activeGroups = {};				// event group activation states
		this.cndsBySid = {};
		this.actsBySid = {};
		this.varsBySid = {};
		this.blocksBySid = {};
		this.running_layout = null;			// currently running layout
		this.layer_canvas = null;			// for layers "render-to-texture"
		this.layer_ctx = null;
		this.layer_tex = null;
		this.layout_tex = null;
		this.is_WebGL_context_lost = false;
		this.uses_background_blending = false;	// if any shader uses background blending, so entire layout renders to texture
		this.fx_tex = [null, null];
		this.fullscreen_scaling = 0;
		this.files_subfolder = "";			// path with project files
		this.objectsByUid = {};				// maps every in-use UID (as a string) to its instance
		this.loaderlogo = null;
		this.snapshotCanvas = null;
		this.snapshotData = "";
		this.load();
		var isiOSRetina = (!this.isDomFree && this.useiOSRetina && this.isiOS);
		this.devicePixelRatio = (isiOSRetina ? (window["devicePixelRatio"] || 1) : 1);
		this.ClearDeathRow();
		var attribs;
		if (typeof jQuery !== "undefined" && this.fullscreen_mode > 0)
			this["setSize"](jQuery(window).width(), jQuery(window).height());
		try {
			if (this.enableWebGL && !this.isDomFree)
			{
				attribs = { "depth": false, "antialias": !this.isMobile };
				var use_webgl = true;
				if (this.isChrome && this.isWindows)
				{
					var tempcanvas = document.createElement("canvas");
					var tempgl = (tempcanvas.getContext("webgl", attribs) || tempcanvas.getContext("experimental-webgl", attribs));
					if (tempgl.getSupportedExtensions().toString() === "OES_texture_float,OES_standard_derivatives,WEBKIT_WEBGL_lose_context")
					{
;
						use_webgl = false;
					}
				}
				if (use_webgl)
					this.gl = (canvas.getContext("webgl", attribs) || canvas.getContext("experimental-webgl", attribs));
			}
		}
		catch (e) {
		}
		if (this.gl)
		{
;
			this.overlay_canvas = document.createElement("canvas");
			jQuery(this.overlay_canvas).appendTo(this.canvas.parentNode);
			this.overlay_canvas.oncontextmenu = function (e) { return false; };
			this.overlay_canvas.onselectstart = function (e) { return false; };
			this.overlay_canvas.width = canvas.width;
			this.overlay_canvas.height = canvas.height;
			this.positionOverlayCanvas();
			this.overlay_ctx = this.overlay_canvas.getContext("2d");
			this.glwrap = new cr.GLWrap(this.gl, this.isMobile);
			this.glwrap.setSize(canvas.width, canvas.height);
			this.ctx = null;
			this.canvas.addEventListener("webglcontextlost", function (ev) {
				ev.preventDefault();
				self.onContextLost();
				window["cr_setSuspended"](true);		// stop rendering
			}, false);
			this.canvas.addEventListener("webglcontextrestored", function (ev) {
				self.glwrap.initState();
				self.glwrap.setSize(self.glwrap.width, self.glwrap.height, true);
				self.layer_tex = null;
				self.layout_tex = null;
				self.fx_tex[0] = null;
				self.fx_tex[1] = null;
				self.onContextRestored();
				self.redraw = true;
				window["cr_setSuspended"](false);		// resume rendering
			}, false);
			var i, len, j, lenj, k, lenk, t, s, l, y;
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
				{
					s = t.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
					this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
				}
			}
			for (i = 0, len = this.layouts_by_index.length; i < len; i++)
			{
				l = this.layouts_by_index[i];
				for (j = 0, lenj = l.effect_types.length; j < lenj; j++)
				{
					s = l.effect_types[j];
					s.shaderindex = this.glwrap.getShaderIndex(s.id);
				}
				for (j = 0, lenj = l.layers.length; j < lenj; j++)
				{
					y = l.layers[j];
					for (k = 0, lenk = y.effect_types.length; k < lenk; k++)
					{
						s = y.effect_types[k];
						s.shaderindex = this.glwrap.getShaderIndex(s.id);
						this.uses_background_blending = this.uses_background_blending || this.glwrap.programUsesDest(s.shaderindex);
					}
				}
			}
		}
		else
		{
			if (this.fullscreen_mode > 0 && this.isDirectCanvas)
			{
;
				this.canvas = null;
				document.oncontextmenu = function (e) { return false; };
				document.onselectstart = function (e) { return false; };
				this.ctx = AppMobi["canvas"]["getContext"]("2d");
				try {
					this.ctx["samplingMode"] = this.linearSampling ? "smooth" : "sharp";
					this.ctx["globalScale"] = 1;
					this.ctx["HTML5CompatibilityMode"] = true;
				} catch(e){}
				if (this.width !== 0 && this.height !== 0)
				{
					this.ctx.width = this.width;
					this.ctx.height = this.height;
				}
			}
			if (!this.ctx)
			{
;
				if (this.isCocoonJs)
				{
					attribs = { "antialias" : !!this.linearSampling };
					this.ctx = canvas.getContext("2d", attribs);
				}
				else
					this.ctx = canvas.getContext("2d");
				this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
				this.ctx["imageSmoothingEnabled"] = this.linearSampling;
			}
			this.overlay_canvas = null;
			this.overlay_ctx = null;
		}
		this.tickFunc = function () { self.tick(); };
		if (!this.isDomFree)
		{
			document.addEventListener("mousedown", function () {
				window.focus();
			}, true);
			document.addEventListener("touchstart", function () {
				window.focus();
			}, true);
		}
		if (typeof cr_is_preview !== "undefined")
		{
			if (window.location.search === "?continuous")
			{
				cr.logexport("Reloading for continuous preview");
				this.loadFromSlot = "__c2_continuouspreview";
				this.suspendDrawing = true;
			}
			if (this.pauseOnBlur && !this.isMobile)
			{
				jQuery(window).focus(function ()
				{
					self["setSuspended"](false);
				});
				jQuery(window).blur(function ()
				{
					self["setSuspended"](true);
				});
			}
		}
		this.go();			// run loading screen
		this.extra = {};
		cr.seal(this);
	};
	var webkitRepaintFlag = false;
	Runtime.prototype["setSize"] = function (w, h)
	{
		var tryHideAddressBar = this.hideAddressBar && this.isiPhone && !navigator["standalone"] && !this.isDomFree && !this.isPhoneGap;
		var addressBarHeight = 0;
		if (tryHideAddressBar)
		{
			if (this.isiPhone)
				addressBarHeight = 60;
			else if (this.isAndroid)
				addressBarHeight = 56;
			h += addressBarHeight;
		}
		var offx = 0, offy = 0;
		var neww = 0, newh = 0, intscale = 0;
		var mode = this.fullscreen_mode;
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || this.isNodeFullscreen);
		if (isfullscreen && this.fullscreen_scaling > 0)
			mode = this.fullscreen_scaling;
		if (mode >= 3)
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = w / h;
			if (cur_aspect > orig_aspect)
			{
				neww = h * orig_aspect;
				if (mode === 4)	// integer scaling
				{
					intscale = neww / this.original_width;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale;
					newh = this.original_height * intscale;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offx = (w - neww) / 2;
					w = neww;
				}
			}
			else
			{
				newh = w / orig_aspect;
				if (mode === 4)	// integer scaling
				{
					intscale = newh / this.original_height;
					if (intscale > 1)
						intscale = Math.floor(intscale);
					else if (intscale < 1)
						intscale = 1 / Math.ceil(1 / intscale);
					neww = this.original_width * intscale;
					newh = this.original_height * intscale;
					offx = (w - neww) / 2;
					offy = (h - newh) / 2;
					w = neww;
					h = newh;
				}
				else
				{
					offy = (h - newh) / 2;
					h = newh;
				}
			}
			if (isfullscreen && !this.isNodeWebkit)
			{
				offx = 0;
				offy = 0;
			}
			offx = Math.floor(offx);
			offy = Math.floor(offy);
			w = Math.floor(w);
			h = Math.floor(h);
		}
		else if (this.isNodeWebkit && this.isNodeFullscreen && this.fullscreen_mode_set === 0)
		{
			offx = Math.floor((w - this.original_width) / 2);
			offy = Math.floor((h - this.original_height) / 2);
			w = this.original_width;
			h = this.original_height;
		}
		var isiOSRetina = (!this.isDomFree && this.useiOSRetina && this.isiOS);
		if (isiOSRetina && this.isiPad && this.devicePixelRatio > 1)	// don't apply to iPad 1-2
		{
			if (w >= 1024)
				w = 1023;		// 2046 retina pixels
			if (h >= 1024)
				h = 1023;
		}
		var multiplier = this.devicePixelRatio;
		this.width = w * multiplier;
		this.height = h * multiplier;
		this.redraw = true;
		if (this.canvasdiv && !this.isDomFree)
		{
			jQuery(this.canvasdiv).css({"width": w + "px",
										"height": h + "px",
										"margin-left": offx,
										"margin-top": offy});
			if (typeof cr_is_preview !== "undefined")
			{
				jQuery("#borderwrap").css({"width": w + "px",
											"height": h + "px"});
			}
		}
		if (this.canvas)
		{
			this.canvas.width = w * multiplier;
			this.canvas.height = h * multiplier;
			if (isiOSRetina)
			{
				jQuery(this.canvas).css({"width": w + "px",
										"height": h + "px"});
			}
		}
		if (this.overlay_canvas)
		{
			this.overlay_canvas.width = w;
			this.overlay_canvas.height = h;
		}
		if (this.glwrap)
			this.glwrap.setSize(w, h);
		if (this.isDirectCanvas && this.ctx)
		{
			this.ctx.width = w;
			this.ctx.height = h;
		}
		if (this.ctx)
		{
			this.ctx["webkitImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["mozImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["msImageSmoothingEnabled"] = this.linearSampling;
			this.ctx["imageSmoothingEnabled"] = this.linearSampling;
		}
		if (tryHideAddressBar && addressBarHeight > 0)
		{
			window.setTimeout(function () {
				window.scrollTo(0, 1);
			}, 100);
		}
	};
	Runtime.prototype.onContextLost = function ()
	{
		this.is_WebGL_context_lost = true;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onLostWebGLContext)
				t.onLostWebGLContext();
		}
	};
	Runtime.prototype.onContextRestored = function ()
	{
		this.is_WebGL_context_lost = false;
		var i, len, t;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			t = this.types_by_index[i];
			if (t.onRestoreWebGLContext)
				t.onRestoreWebGLContext();
		}
	};
	Runtime.prototype.positionOverlayCanvas = function()
	{
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || this.isNodeFullscreen);
		var overlay_position = isfullscreen ? jQuery(this.canvas).offset() : jQuery(this.canvas).position();
		overlay_position.position = "absolute";
		jQuery(this.overlay_canvas).css(overlay_position);
	};
	var caf = window["cancelAnimationFrame"] ||
	  window["mozCancelAnimationFrame"]    ||
	  window["webkitCancelAnimationFrame"] ||
	  window["msCancelAnimationFrame"]     ||
	  window["oCancelAnimationFrame"];
	Runtime.prototype["setSuspended"] = function (s)
	{
		var i, len;
		if (s && !this.isSuspended)
		{
			this.isSuspended = true;			// next tick will be last
			if (this.raf_id !== 0 && caf)		// note: CocoonJS does not implement cancelAnimationFrame
				caf(this.raf_id);
			if (this.timeout_id !== 0)
				clearTimeout(this.timeout_id);
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](true);
		}
		else if (!s && this.isSuspended)
		{
			this.isSuspended = false;
			this.last_tick_time = cr.performance_now();	// ensure first tick is a zero-dt one
			this.last_fps_time = cr.performance_now();	// reset FPS counter
			this.framecount = 0;
			for (i = 0, len = this.suspend_events.length; i < len; i++)
				this.suspend_events[i](false);
			this.tick();						// kick off runtime again
		}
	};
	Runtime.prototype.addSuspendCallback = function (f)
	{
		this.suspend_events.push(f);
	};
	Runtime.prototype.load = function ()
	{
;
		var pm = cr.getProjectModel();
		this.name = pm[0];
		this.first_layout = pm[1];
		this.fullscreen_mode = pm[11];	// 0 = off, 1 = crop, 2 = scale, 3 = letterbox scale, 4 = integer letterbox scale
		this.fullscreen_mode_set = pm[11];
		if (this.isDomFree && pm[11] >= 3)
		{
			cr.logexport("[Construct 2] Letterbox scale fullscreen modes are not supported on this platform - falling back to 'Scale'");
			this.fullscreen_mode = 2;
			this.fullscreen_mode_set = 2;
		}
		this.uses_loader_layout = pm[17];
		this.loaderstyle = pm[18];
		if (this.loaderstyle === 0)
		{
			this.loaderlogo = new Image();
			this.loaderlogo.src = "logo.png";
		}
		this.next_uid = pm[20];
		this.system = new cr.system_object(this);
		var i, len, j, lenj, k, lenk, idstr, m, b, t, f;
		var plugin, plugin_ctor;
		for (i = 0, len = pm[2].length; i < len; i++)
		{
			m = pm[2][i];
;
			cr.add_common_aces(m);
			plugin = new m[0](this);
			plugin.singleglobal = m[1];
			plugin.is_world = m[2];
			plugin.must_predraw = m[9];
			if (plugin.onCreate)
				plugin.onCreate();  // opportunity to override default ACEs
			cr.seal(plugin);
			this.plugins.push(plugin);
		}
		pm = cr.getProjectModel();
		for (i = 0, len = pm[3].length; i < len; i++)
		{
			m = pm[3][i];
			plugin_ctor = m[1];
;
			plugin = null;
			for (j = 0, lenj = this.plugins.length; j < lenj; j++)
			{
				if (this.plugins[j] instanceof plugin_ctor)
				{
					plugin = this.plugins[j];
					break;
				}
			}
;
;
			var type_inst = new plugin.Type(plugin);
;
			type_inst.name = m[0];
			type_inst.is_family = m[2];
			type_inst.instvar_sids = m[3].slice(0);
			type_inst.vars_count = m[3].length;
			type_inst.behs_count = m[4];
			type_inst.fx_count = m[5];
			type_inst.sid = m[11];
			if (type_inst.is_family)
			{
				type_inst.members = [];				// types in this family
				type_inst.family_index = this.family_count++;
				type_inst.families = null;
			}
			else
			{
				type_inst.members = null;
				type_inst.family_index = -1;
				type_inst.families = [];			// families this type belongs to
			}
			type_inst.family_var_map = null;
			type_inst.family_beh_map = null;
			type_inst.family_fx_map = null;
			type_inst.is_contained = false;
			type_inst.container = null;
			if (m[6])
			{
				type_inst.texture_file = m[6][0];
				type_inst.texture_filesize = m[6][1];
				type_inst.texture_pixelformat = m[6][2];
			}
			else
			{
				type_inst.texture_file = null;
				type_inst.texture_filesize = 0;
				type_inst.texture_pixelformat = 0;		// rgba8
			}
			if (m[7])
			{
				type_inst.animations = m[7];
			}
			else
			{
				type_inst.animations = null;
			}
			type_inst.index = i;                                // save index in to types array in type
			type_inst.instances = [];                           // all instances of this type
			type_inst.deadCache = [];							// destroyed instances to recycle next create
			type_inst.solstack = [new cr.selection(type_inst)]; // initialise SOL stack with one empty SOL
			type_inst.cur_sol = 0;
			type_inst.default_instance = null;
			type_inst.stale_iids = true;
			type_inst.updateIIDs = cr.type_updateIIDs;
			type_inst.getFirstPicked = cr.type_getFirstPicked;
			type_inst.getPairedInstance = cr.type_getPairedInstance;
			type_inst.getCurrentSol = cr.type_getCurrentSol;
			type_inst.pushCleanSol = cr.type_pushCleanSol;
			type_inst.pushCopySol = cr.type_pushCopySol;
			type_inst.popSol = cr.type_popSol;
			type_inst.getBehaviorByName = cr.type_getBehaviorByName;
			type_inst.getBehaviorIndexByName = cr.type_getBehaviorIndexByName;
			type_inst.getEffectIndexByName = cr.type_getEffectIndexByName;
			type_inst.applySolToContainer = cr.type_applySolToContainer;
			type_inst.extra = {};
			type_inst.toString = cr.type_toString;
			type_inst.behaviors = [];
			for (j = 0, lenj = m[8].length; j < lenj; j++)
			{
				b = m[8][j];
				var behavior_ctor = b[1];
				var behavior_plugin = null;
				for (k = 0, lenk = this.behaviors.length; k < lenk; k++)
				{
					if (this.behaviors[k] instanceof behavior_ctor)
					{
						behavior_plugin = this.behaviors[k];
						break;
					}
				}
				if (!behavior_plugin)
				{
					behavior_plugin = new behavior_ctor(this);
					behavior_plugin.my_instances = new cr.ObjectSet(); 	// instances of this behavior
					if (behavior_plugin.onCreate)
						behavior_plugin.onCreate();
					cr.seal(behavior_plugin);
					this.behaviors.push(behavior_plugin);
				}
				var behavior_type = new behavior_plugin.Type(behavior_plugin, type_inst);
				behavior_type.name = b[0];
				behavior_type.sid = b[2];
				behavior_type.onCreate();
				cr.seal(behavior_type);
				type_inst.behaviors.push(behavior_type);
			}
			type_inst.global = m[9];
			type_inst.isOnLoaderLayout = m[10];
			type_inst.effect_types = [];
			for (j = 0, lenj = m[12].length; j < lenj; j++)
			{
				type_inst.effect_types.push({
					id: m[12][j][0],
					name: m[12][j][1],
					shaderindex: -1,
					active: true,
					index: j
				});
			}
			if (!this.uses_loader_layout || type_inst.is_family || type_inst.isOnLoaderLayout || !plugin.is_world)
			{
				type_inst.onCreate();
				cr.seal(type_inst);
			}
			if (type_inst.name)
				this.types[type_inst.name] = type_inst;
			this.types_by_index.push(type_inst);
			if (plugin.singleglobal)
			{
				var instance = new plugin.Instance(type_inst);
				instance.uid = this.next_uid++;
				instance.puid = this.next_puid++;
				instance.iid = 0;
				instance.get_iid = cr.inst_get_iid;
				instance.toString = cr.inst_toString;
				instance.properties = m[13];
				instance.onCreate();
				cr.seal(instance);
				type_inst.instances.push(instance);
			}
		}
		for (i = 0, len = pm[4].length; i < len; i++)
		{
			var familydata = pm[4][i];
			var familytype = this.types_by_index[familydata[0]];
			var familymember;
			for (j = 1, lenj = familydata.length; j < lenj; j++)
			{
				familymember = this.types_by_index[familydata[j]];
				familymember.families.push(familytype);
				familytype.members.push(familymember);
			}
		}
		for (i = 0, len = pm[22].length; i < len; i++)
		{
			var containerdata = pm[22][i];
			var containertypes = [];
			for (j = 0, lenj = containerdata.length; j < lenj; j++)
				containertypes.push(this.types_by_index[containerdata[j]]);
			for (j = 0, lenj = containertypes.length; j < lenj; j++)
			{
				containertypes[j].is_contained = true;
				containertypes[j].container = containertypes;
			}
		}
		if (this.family_count > 0)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (t.is_family || !t.families.length)
					continue;
				t.family_var_map = new Array(this.family_count);
				t.family_beh_map = new Array(this.family_count);
				t.family_fx_map = new Array(this.family_count);
				var all_fx = [];
				var varsum = 0;
				var behsum = 0;
				var fxsum = 0;
				for (j = 0, lenj = t.families.length; j < lenj; j++)
				{
					f = t.families[j];
					t.family_var_map[f.family_index] = varsum;
					varsum += f.vars_count;
					t.family_beh_map[f.family_index] = behsum;
					behsum += f.behs_count;
					t.family_fx_map[f.family_index] = fxsum;
					fxsum += f.fx_count;
					for (k = 0, lenk = f.effect_types.length; k < lenk; k++)
						all_fx.push(cr.shallowCopy({}, f.effect_types[k]));
				}
				t.effect_types = all_fx.concat(t.effect_types);
				for (j = 0, lenj = t.effect_types.length; j < lenj; j++)
					t.effect_types[j].index = j;
			}
		}
		for (i = 0, len = pm[5].length; i < len; i++)
		{
			m = pm[5][i];
			var layout = new cr.layout(this, m);
			cr.seal(layout);
			this.layouts[layout.name] = layout;
			this.layouts_by_index.push(layout);
		}
		for (i = 0, len = pm[6].length; i < len; i++)
		{
			m = pm[6][i];
			var sheet = new cr.eventsheet(this, m);
			cr.seal(sheet);
			this.eventsheets[sheet.name] = sheet;
			this.eventsheets_by_index.push(sheet);
		}
		for (i = 0, len = this.eventsheets_by_index.length; i < len; i++)
			this.eventsheets_by_index[i].postInit();
		for (i = 0, len = this.triggers_to_postinit.length; i < len; i++)
			this.triggers_to_postinit[i].postInit();
		this.triggers_to_postinit.length = 0;
		this.files_subfolder = pm[7];
		this.pixel_rounding = pm[8];
		this.original_width = pm[9];
		this.original_height = pm[10];
		this.aspect_scale = 1.0;
		this.enableWebGL = pm[12];
		this.linearSampling = pm[13];
		this.clearBackground = pm[14];
		this.versionstr = pm[15];
		var iOSretina = pm[16];
		if (iOSretina === 2)
			iOSretina = (this.isiPhone ? 1 : 0);
		this.useiOSRetina = (iOSretina !== 0);
		this.hideAddressBar = pm[19];
		this.pauseOnBlur = pm[21];
		this.start_time = Date.now();
	};
	Runtime.prototype.findWaitingTexture = function (src_)
	{
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			if (this.wait_for_textures[i].cr_src === src_)
				return this.wait_for_textures[i];
		}
		return null;
	};
	Runtime.prototype.areAllTexturesLoaded = function ()
	{
		var totalsize = 0;
		var completedsize = 0;
		var ret = true;
		var i, len;
		for (i = 0, len = this.wait_for_textures.length; i < len; i++)
		{
			var filesize = this.wait_for_textures[i].cr_filesize;
			if (!filesize || filesize <= 0)
				filesize = 50000;
			totalsize += filesize;
			if (this.wait_for_textures[i].complete || this.wait_for_textures[i]["loaded"])
				completedsize += filesize;
			else
				ret = false;    // not all textures loaded
		}
		if (totalsize == 0)
			this.progress = 0;
		else
			this.progress = (completedsize / totalsize);
		return ret;
	};
	Runtime.prototype.go = function ()
	{
		if (!this.ctx && !this.glwrap)
			return;
		var ctx = this.ctx || this.overlay_ctx;
		if (this.overlay_canvas)
			this.positionOverlayCanvas();
		this.progress = 0;
		this.last_progress = -1;
		if (this.areAllTexturesLoaded())
			this.go_textures_done();
		else
		{
			var ms_elapsed = Date.now() - this.start_time;
			if (this.loaderstyle !== 3 && ms_elapsed >= 500 && this.last_progress != this.progress)
			{
				ctx.clearRect(0, 0, this.width, this.height);
				var mx = this.width / 2;
				var my = this.height / 2;
				var haslogo = (this.loaderstyle === 0 && this.loaderlogo.complete);
				var hlw = 40;
				var hlh = 0;
				var logowidth = 80;
				if (haslogo)
				{
					logowidth = this.loaderlogo.width;
					hlw = logowidth / 2;
					hlh = this.loaderlogo.height / 2;
					ctx.drawImage(this.loaderlogo, cr.floor(mx - hlw), cr.floor(my - hlh));
				}
				if (this.loaderstyle <= 1)
				{
					my += hlh + (haslogo ? 12 : 0);
					mx -= hlw;
					mx = cr.floor(mx) + 0.5;
					my = cr.floor(my) + 0.5;
					ctx.fillStyle = "DodgerBlue";
					ctx.fillRect(mx, my, Math.floor(logowidth * this.progress), 6);
					ctx.strokeStyle = "black";
					ctx.strokeRect(mx, my, logowidth, 6);
					ctx.strokeStyle = "white";
					ctx.strokeRect(mx - 1, my - 1, logowidth + 2, 8);
				}
				else if (this.loaderstyle === 2)
				{
					ctx.font = "12pt Arial";
					ctx.fillStyle = "#999";
					ctx.textBaseLine = "middle";
					var percent_text = Math.round(this.progress * 100) + "%";
					var text_dim = ctx.measureText ? ctx.measureText(percent_text) : null;
					var text_width = text_dim ? text_dim.width : 0;
					ctx.fillText(percent_text, mx - (text_width / 2), my);
				}
				this.last_progress = this.progress;
			}
			setTimeout((function (self) { return function () { self.go(); }; })(this), 100);
		}
	};
	Runtime.prototype.go_textures_done = function ()
	{
		if (this.overlay_canvas)
		{
			this.canvas.parentNode.removeChild(this.overlay_canvas);
			this.overlay_ctx = null;
			this.overlay_canvas = null;
		}
		this.start_time = Date.now();
		this.last_fps_time = cr.performance_now();       // for counting framerate
		var i, len, t;
		if (this.uses_loader_layout)
		{
			for (i = 0, len = this.types_by_index.length; i < len; i++)
			{
				t = this.types_by_index[i];
				if (!t.is_family && !t.isOnLoaderLayout && t.plugin.is_world)
				{
					t.onCreate();
					cr.seal(t);
				}
			}
		}
		else
			this.isloading = false;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			this.layouts_by_index[i].createGlobalNonWorlds();
		}
		if (this.fullscreen_mode >= 2)
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			if (cur_aspect > orig_aspect)
				this.aspect_scale = this.height / this.original_height;
			else
				this.aspect_scale = this.width / this.original_width;
		}
		if (this.first_layout)
			this.layouts[this.first_layout].startRunning();
		else
			this.layouts_by_index[0].startRunning();
;
		if (!this.uses_loader_layout)
		{
			this.loadingprogress = 1;
			this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
		}
		this.tick();
		if (this.isDirectCanvas)
			AppMobi["webview"]["execute"]("onGameReady();");
	};
	var raf = window["requestAnimationFrame"] ||
	  window["mozRequestAnimationFrame"]    ||
	  window["webkitRequestAnimationFrame"] ||
	  window["msRequestAnimationFrame"]     ||
	  window["oRequestAnimationFrame"];
	Runtime.prototype.tick = function ()
	{
		if (this.isArcade)
		{
			var curwidth = jQuery(window).width();
			var curheight = jQuery(window).height();
			if (this.lastwidth !== curwidth || this.lastheight !== curheight)
			{
				this.lastwidth = curwidth;
				this.lastheight = curheight;
				this["setSize"](curwidth, curheight);
			}
		}
;
		var logic_start = cr.performance_now();
		if (this.isloading)
		{
			var done = this.areAllTexturesLoaded();		// updates this.progress
			this.loadingprogress = this.progress;
			if (done)
			{
				this.isloading = false;
				this.progress = 1;
				this.trigger(cr.system_object.prototype.cnds.OnLoadFinished, null);
			}
		}
		this.logic();
		if ((this.redraw || this.isCocoonJs) && !this.is_WebGL_context_lost && !this.suspendDrawing)
		{
			this.redraw = false;
			if (this.glwrap)
				this.drawGL();
			else
				this.draw();
			if (this.snapshotCanvas)
			{
				if (this.canvas && this.canvas.toDataURL)
				{
					this.snapshotData = this.canvas.toDataURL(this.snapshotCanvas[0], this.snapshotCanvas[1]);
					this.trigger(cr.system_object.prototype.cnds.OnCanvasSnapshot, null);
				}
				this.snapshotCanvas = null;
			}
		}
		this.tickcount++;
		this.execcount++;
		this.framecount++;
		this.logictime += cr.performance_now() - logic_start;
		if (this.isSuspended)
			return;
		if (raf)
			this.raf_id = raf(this.tickFunc, this.canvas);
		else
		{
			this.timeout_id = setTimeout(this.tickFunc, this.isMobile ? 1 : 16);
		}
	};
	Runtime.prototype.logic = function ()
	{
		var i, leni, j, lenj, k, lenk, type, inst, binst;
		var cur_time = cr.performance_now();
		if (cur_time - this.last_fps_time >= 1000)  // every 1 second
		{
			this.last_fps_time += 1000;
			this.fps = this.framecount;
			this.framecount = 0;
			this.cpuutilisation = this.logictime;
			this.logictime = 0;
		}
		if (this.measuring_dt)
		{
			if (this.last_tick_time !== 0)
			{
				var ms_diff = cur_time - this.last_tick_time;
				if (ms_diff === 0)
				{
					this.zeroDtCount++;
					if (this.zeroDtCout >= 10)
						this.measuring_dt = false;
					this.dt1 = 1.0 / 60.0;            // 60fps assumed (0.01666...)
				}
				else
				{
					this.dt1 = ms_diff / 1000.0; // dt measured in seconds
					if (this.dt1 > 0.5)
						this.dt1 = 0;
					else if (this.dt1 > 0.1)
						this.dt1 = 0.1;
				}
			}
			this.last_tick_time = cur_time;
		}
        this.dt = this.dt1 * this.timescale;
        this.kahanTime.add(this.dt);
		var isfullscreen = (document["mozFullScreen"] || document["webkitIsFullScreen"] || document["fullScreen"] || this.isNodeFullscreen);
		if (this.fullscreen_mode >= 2 /* scale */ || (isfullscreen && this.fullscreen_scaling > 0))
		{
			var orig_aspect = this.original_width / this.original_height;
			var cur_aspect = this.width / this.height;
			if (cur_aspect > orig_aspect)
				this.aspect_scale = this.height / this.original_height;
			else
			{
				this.aspect_scale = this.width / this.original_width;
			}
			if (this.running_layout)
			{
				this.running_layout.scrollToX(this.running_layout.scrollX);
				this.running_layout.scrollToY(this.running_layout.scrollY);
			}
		}
		else
			this.aspect_scale = 1;
		this.ClearDeathRow();
		this.isInOnDestroy++;
		this.system.runWaits();		// prevent instance list changing
		this.isInOnDestroy--;
		this.ClearDeathRow();		// allow instance list changing
		this.isInOnDestroy++;
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					inst.behavior_insts[k].tick();
				}
			}
		}
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.posttick)
						binst.posttick();
				}
			}
		}
        var tickarr = this.objects_to_tick.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
		this.handleSaveLoad();		// save/load now if queued
		i = 0;
		while (this.changelayout && i++ < 10)
		{
			this.doChangeLayout(this.changelayout);
		}
        for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
            this.eventsheets_by_index[i].hasRun = false;
		if (this.running_layout.event_sheet)
			this.running_layout.event_sheet.run();
		this.registered_collisions.length = 0;
		this.layout_first_tick = false;
		this.isInOnDestroy++;		// prevent instance lists from being changed
		for (i = 0, leni = this.types_by_index.length; i < leni; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || (!type.behaviors.length && !type.families.length))
				continue;	// type doesn't have any behaviors
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				var inst = type.instances[j];
				for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
				{
					binst = inst.behavior_insts[k];
					if (binst.tick2)
						binst.tick2();
				}
			}
		}
        tickarr = this.objects_to_tick2.valuesRef();
        for (i = 0, leni = tickarr.length; i < leni; i++)
            tickarr[i].tick2();
		this.isInOnDestroy--;		// end preventing instance lists from being changed
	};
	Runtime.prototype.doChangeLayout = function (changeToLayout)
	{
;
		this.running_layout.stopRunning();
		var i, len, j, lenj, type, inst;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.unloadTextures && changeToLayout.initial_types.indexOf(type) === -1)
				type.unloadTextures();
		}
		changeToLayout.startRunning();
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (!type.global && !type.plugin.singleglobal)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (inst.onLayoutChange)
					inst.onLayoutChange();
			}
		}
		this.redraw = true;
		this.layout_first_tick = true;
		this.ClearDeathRow();
	};
    Runtime.prototype.tickMe = function (inst)
    {
        this.objects_to_tick.add(inst);
    };
	Runtime.prototype.untickMe = function (inst)
	{
		this.objects_to_tick.remove(inst);
	};
	Runtime.prototype.tick2Me = function (inst)
    {
        this.objects_to_tick2.add(inst);
    };
	Runtime.prototype.untick2Me = function (inst)
	{
		this.objects_to_tick2.remove(inst);
	};
    Runtime.prototype.getDt = function (inst)
    {
        if (!inst || inst.my_timescale === -1.0)
            return this.dt;
        return this.dt1 * inst.my_timescale;
    };
	Runtime.prototype.draw = function ()
	{
		this.running_layout.draw(this.ctx);
		if (this.isDirectCanvas)
			this.ctx["present"]();
	};
	Runtime.prototype.drawGL = function ()
	{
		this.running_layout.drawGL(this.glwrap);
	};
	Runtime.prototype.addDestroyCallback = function (f)
	{
		if (f)
			this.destroycallbacks.push(f);
	};
	Runtime.prototype.removeDestroyCallback = function (f)
	{
		cr.arrayFindRemove(this.destroycallbacks, f);
	};
	Runtime.prototype.getObjectByUID = function (uid_)
	{
;
		return this.objectsByUid[uid_.toString()];
	};
	Runtime.prototype.DestroyInstance = function (inst)
	{
		var i, len;
		if (!this.deathRow.contains(inst))
		{
			this.deathRow.add(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					this.DestroyInstance(inst.siblings[i]);
				}
			}
			if (this.isInClearDeathRow)
				this.deathRow.values_cache.push(inst);
			this.isInOnDestroy++;		// support recursion
			this.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnDestroyed, inst);
			this.isInOnDestroy--;
		}
	};
	Runtime.prototype.ClearDeathRow = function ()
	{
		var inst, index, type, instances, binst;
		var i, j, k, leni, lenj, lenk;
		var w, f;
		this.isInClearDeathRow = true;
		for (i = 0, leni = this.createRow.length; i < leni; i++)
		{
			inst = this.createRow[i];
			type = inst.type;
			type.instances.push(inst);
			type.stale_iids = true;
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				type.families[j].instances.push(inst);
				type.families[j].stale_iids = true;
			}
		}
		this.createRow.length = 0;
		var arr = this.deathRow.valuesRef();	// get array of items from set
		for (i = 0; i < arr.length; i++)		// check array length every time in case it changes
		{
			inst = arr[i];
			type = inst.type;
			instances = type.instances;
			for (j = 0, lenj = this.destroycallbacks.length; j < lenj; j++)
				this.destroycallbacks[j](inst);
			cr.arrayFindRemove(instances, inst);
			if (inst.layer)
			{
				cr.arrayRemove(inst.layer.instances, inst.get_zindex());
				inst.layer.zindices_stale = true;
			}
			for (j = 0, lenj = type.families.length; j < lenj; j++)
			{
				cr.arrayFindRemove(type.families[j].instances, inst);
				type.families[j].stale_iids = true;
			}
			if (inst.behavior_insts)
			{
				for (j = 0, lenj = inst.behavior_insts.length; j < lenj; j++)
				{
					binst = inst.behavior_insts[j];
					if (binst.onDestroy)
						binst.onDestroy();
					binst.behavior.my_instances.remove(inst);
				}
			}
            this.objects_to_tick.remove(inst);
			this.objects_to_tick2.remove(inst);
			for (j = 0, lenj = this.system.waits.length; j < lenj; j++)
			{
				w = this.system.waits[j];
				if (w.sols.hasOwnProperty(type.index))
					cr.arrayFindRemove(w.sols[type.index].insts, inst);
				if (!type.is_family)
				{
					for (k = 0, lenk = type.families.length; k < lenk; k++)
					{
						f = type.families[k];
						if (w.sols.hasOwnProperty(f.index))
							cr.arrayFindRemove(w.sols[f.index].insts, inst);
					}
				}
			}
			if (inst.onDestroy)
				inst.onDestroy();
			if (this.objectsByUid.hasOwnProperty(inst.uid.toString()))
				delete this.objectsByUid[inst.uid.toString()];
			this.objectcount--;
			if (type.deadCache.length < 64)
				type.deadCache.push(inst);
			type.stale_iids = true;
		}
		if (!this.deathRow.isEmpty())
			this.redraw = true;
		this.deathRow.clear();
		this.isInClearDeathRow = false;
	};
	Runtime.prototype.createInstance = function (type, layer, sx, sy)
	{
		if (type.is_family)
		{
			var i = cr.floor(Math.random() * type.members.length);
			return this.createInstance(type.members[i], layer, sx, sy);
		}
		if (!type.default_instance)
		{
			return null;
		}
		return this.createInstanceFromInit(type.default_instance, layer, false, sx, sy, false);
	};
	var all_behaviors = [];
	Runtime.prototype.createInstanceFromInit = function (initial_inst, layer, is_startup_instance, sx, sy, skip_siblings)
	{
		var i, len, j, lenj, p, effect_fallback, x, y;
		if (!initial_inst)
			return null;
		var type = this.types_by_index[initial_inst[1]];
;
;
		var is_world = type.plugin.is_world;
;
		if (this.isloading && is_world && !type.isOnLoaderLayout)
			return null;
		if (is_world && !this.glwrap && initial_inst[0][11] === 11)
			return null;
		if (!is_world)
			layer = null;
		var inst;
		if (type.deadCache.length)
		{
			inst = type.deadCache.pop();
			inst.recycled = true;
			type.plugin.Instance.call(inst, type);
		}
		else
		{
			inst = new type.plugin.Instance(type);
			inst.recycled = false;
		}
		if (is_startup_instance && !skip_siblings)
			inst.uid = initial_inst[2];
		else
			inst.uid = this.next_uid++;
		this.objectsByUid[inst.uid.toString()] = inst;
		inst.puid = this.next_puid++;
		inst.iid = 0;
		inst.get_iid = cr.inst_get_iid;
		type.stale_iids = true;
		var initial_vars = initial_inst[3];
		if (inst.recycled)
		{
			for (i = 0, len = initial_vars.length; i < len; i++)
				inst.instance_vars[i] = initial_vars[i];
			cr.wipe(inst.extra);
		}
		else
		{
			inst.instance_vars = initial_vars.slice(0);
			inst.extra = {};
		}
		if (is_world)
		{
			var wm = initial_inst[0];
;
			inst.x = cr.is_undefined(sx) ? wm[0] : sx;
			inst.y = cr.is_undefined(sy) ? wm[1] : sy;
			inst.z = wm[2];
			inst.width = wm[3];
			inst.height = wm[4];
			inst.depth = wm[5];
			inst.angle = wm[6];
			inst.opacity = wm[7];
			inst.hotspotX = wm[8];
			inst.hotspotY = wm[9];
			inst.blend_mode = wm[10];
			effect_fallback = wm[11];
			if (!this.glwrap && type.effect_types.length)	// no WebGL renderer and shaders used
				inst.blend_mode = effect_fallback;			// use fallback blend mode - destroy mode was handled above
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			if (inst.recycled)
			{
				for (i = 0, len = wm[12].length; i < len; i++)
				{
					for (j = 0, lenj = wm[12][i].length; j < lenj; j++)
						inst.effect_params[i][j] = wm[12][i][j];
				}
				inst.bbox.set(0, 0, 0, 0);
				inst.bquad.set_from_rect(inst.bbox);
				inst.bbox_changed_callbacks.length = 0;
			}
			else
			{
				inst.effect_params = wm[12].slice(0);
				for (i = 0, len = inst.effect_params.length; i < len; i++)
					inst.effect_params[i] = wm[12][i].slice(0);
				inst.active_effect_types = [];
				inst.active_effect_flags = [];
				inst.active_effect_flags.length = type.effect_types.length;
				inst.bbox = new cr.rect(0, 0, 0, 0);
				inst.bquad = new cr.quad();
				inst.bbox_changed_callbacks = [];
				inst.set_bbox_changed = cr.set_bbox_changed;
				inst.add_bbox_changed_callback = cr.add_bbox_changed_callback;
				inst.contains_pt = cr.inst_contains_pt;
				inst.update_bbox = cr.update_bbox;
				inst.get_zindex = cr.inst_get_zindex;
			}
			for (i = 0, len = type.effect_types.length; i < len; i++)
				inst.active_effect_flags[i] = true;
			inst.updateActiveEffects = cr.inst_updateActiveEffects;
			inst.updateActiveEffects();
			inst.uses_shaders = !!inst.active_effect_types.length;
			inst.bbox_changed = true;
			inst.visible = true;
            inst.my_timescale = -1.0;
			inst.layer = layer;
			inst.zindex = layer.instances.length;	// will be placed at top of current layer
			if (typeof inst.collision_poly === "undefined")
				inst.collision_poly = null;
			inst.collisionsEnabled = true;
			this.redraw = true;
		}
		inst.toString = cr.inst_toString;
		var initial_props, binst;
		all_behaviors.length = 0;
		for (i = 0, len = type.families.length; i < len; i++)
		{
			all_behaviors.push.apply(all_behaviors, type.families[i].behaviors);
		}
		all_behaviors.push.apply(all_behaviors, type.behaviors);
		if (inst.recycled)
		{
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				binst = inst.behavior_insts[i];
				binst.recycled = true;
				btype.behavior.Instance.call(binst, btype, inst);
				initial_props = initial_inst[4][i];
				for (j = 0, lenj = initial_props.length; j < lenj; j++)
					binst.properties[j] = initial_props[j];
				binst.onCreate();
				btype.behavior.my_instances.add(inst);
			}
		}
		else
		{
			inst.behavior_insts = [];
			for (i = 0, len = all_behaviors.length; i < len; i++)
			{
				var btype = all_behaviors[i];
				var binst = new btype.behavior.Instance(btype, inst);
				binst.recycled = false;
				binst.properties = initial_inst[4][i].slice(0);
				binst.onCreate();
				cr.seal(binst);
				inst.behavior_insts.push(binst);
				btype.behavior.my_instances.add(inst);
			}
		}
		initial_props = initial_inst[5];
		if (inst.recycled)
		{
			for (i = 0, len = initial_props.length; i < len; i++)
				inst.properties[i] = initial_props[i];
		}
		else
			inst.properties = initial_props.slice(0);
		this.createRow.push(inst);
		if (layer)
		{
;
			layer.instances.push(inst);
		}
		this.objectcount++;
		if (type.is_contained)
		{
			inst.is_contained = true;
			if (inst.recycled)
				inst.siblings.length = 0;
			else
				inst.siblings = [];			// note: should not include self in siblings
			if (!is_startup_instance && !skip_siblings)	// layout links initial instances
			{
				for (i = 0, len = type.container.length; i < len; i++)
				{
					if (type.container[i] === type)
						continue;
					if (!type.container[i].default_instance)
					{
						return null;
					}
					inst.siblings.push(this.createInstanceFromInit(type.container[i].default_instance, layer, false, is_world ? inst.x : sx, is_world ? inst.y : sy, true));
				}
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					inst.siblings[i].siblings.push(inst);
					for (j = 0; j < len; j++)
					{
						if (i !== j)
							inst.siblings[i].siblings.push(inst.siblings[j]);
					}
				}
			}
		}
		else
		{
			inst.is_contained = false;
			inst.siblings = null;
		}
		inst.onCreate();
		if (!inst.recycled)
			cr.seal(inst);
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].postCreate)
				inst.behavior_insts[i].postCreate();
		}
		return inst;
	};
	Runtime.prototype.getLayerByName = function (layer_name)
	{
		var i, len;
		for (i = 0, len = this.running_layout.layers.length; i < len; i++)
		{
			var layer = this.running_layout.layers[i];
			if (layer.name.toLowerCase() === layer_name.toLowerCase())
				return layer;
		}
		return null;
	};
	Runtime.prototype.getLayerByNumber = function (index)
	{
		index = cr.floor(index);
		if (index < 0)
			index = 0;
		if (index >= this.running_layout.layers.length)
			index = this.running_layout.layers.length - 1;
		return this.running_layout.layers[index];
	};
	Runtime.prototype.getLayer = function (l)
	{
		if (cr.is_number(l))
			return this.getLayerByNumber(l);
		else
			return this.getLayerByName(l.toString());
	};
	Runtime.prototype.clearSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].getCurrentSol().select_all = true;
		}
	};
	Runtime.prototype.pushCleanSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCleanSol();
		}
	};
	Runtime.prototype.pushCopySol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].pushCopySol();
		}
	};
	Runtime.prototype.popSol = function (solModifiers)
	{
		var i, len;
		for (i = 0, len = solModifiers.length; i < len; i++)
		{
			solModifiers[i].popSol();
		}
	};
	Runtime.prototype.testAndSelectCanvasPointOverlap = function (type, ptx, pty, inverted)
	{
		var sol = type.getCurrentSol();
		var i, j, inst, len;
		var lx, ly;
		if (sol.select_all)
		{
			if (!inverted)
			{
				sol.select_all = false;
				sol.instances.length = 0;   // clear contents
			}
			for (i = 0, len = type.instances.length; i < len; i++)
			{
				inst = type.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
						sol.instances.push(inst);
				}
			}
		}
		else
		{
			j = 0;
			for (i = 0, len = sol.instances.length; i < len; i++)
			{
				inst = sol.instances[i];
				inst.update_bbox();
				lx = inst.layer.canvasToLayer(ptx, pty, true);
				ly = inst.layer.canvasToLayer(ptx, pty, false);
				if (inst.contains_pt(lx, ly))
				{
					if (inverted)
						return false;
					else
					{
						sol.instances[j] = sol.instances[i];
						j++;
					}
				}
			}
			if (!inverted)
				sol.instances.length = j;
		}
		type.applySolToContainer();
		if (inverted)
			return true;		// did not find anything overlapping
		else
			return sol.hasObjects();
	};
	Runtime.prototype.testOverlap = function (a, b)
	{
		if (!a || !b || a === b || !a.collisionsEnabled || !b.collisionsEnabled)
			return false;
		a.update_bbox();
		b.update_bbox();
		var layera = a.layer;
		var layerb = b.layer;
		var different_layers = (layera !== layerb && (layera.parallaxX !== layerb.parallaxX || layerb.parallaxY !== layerb.parallaxY || layera.scale !== layerb.scale || layera.angle !== layerb.angle || layera.zoomRate !== layerb.zoomRate));
		var i, len, x, y, haspolya, haspolyb, polya, polyb;
		if (!different_layers)	// same layers: easy check
		{
			if (!a.bbox.intersects_rect(b.bbox))
				return false;
			if (!a.bquad.intersects_quad(b.bquad))
				return false;
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (!haspolya && !haspolyb)
				return true;
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				polya = a.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
				polya = this.temp_poly;
			}
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				polyb = b.collision_poly;
			}
			else
			{
				this.temp_poly.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
				polyb = this.temp_poly;
			}
			return polya.intersects_poly(polyb, b.x - a.x, b.y - a.y);
		}
		else	// different layers: need to do full translated check
		{
			haspolya = (a.collision_poly && !a.collision_poly.is_empty());
			haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
			if (haspolya)
			{
				a.collision_poly.cache_poly(a.width, a.height, a.angle);
				this.temp_poly.set_from_poly(a.collision_poly);
			}
			else
			{
				this.temp_poly.set_from_quad(a.bquad, a.x, a.y, a.width, a.height);
			}
			polya = this.temp_poly;
			if (haspolyb)
			{
				b.collision_poly.cache_poly(b.width, b.height, b.angle);
				this.temp_poly2.set_from_poly(b.collision_poly);
			}
			else
			{
				this.temp_poly2.set_from_quad(b.bquad, b.x, b.y, b.width, b.height);
			}
			polyb = this.temp_poly2;
			for (i = 0, len = polya.pts_count; i < len; i++)
			{
				x = polya.pts_cache[i*2];
				y = polya.pts_cache[i*2+1];
				polya.pts_cache[i*2] = layera.layerToCanvas(x + a.x, y + a.y, true);
				polya.pts_cache[i*2+1] = layera.layerToCanvas(x + a.x, y + a.y, false);
			}
			for (i = 0, len = polyb.pts_count; i < len; i++)
			{
				x = polyb.pts_cache[i*2];
				y = polyb.pts_cache[i*2+1];
				polyb.pts_cache[i*2] = layerb.layerToCanvas(x + b.x, y + b.y, true);
				polyb.pts_cache[i*2+1] = layerb.layerToCanvas(x + b.x, y + b.y, false);
			}
			return polya.intersects_poly(polyb, 0, 0);
		}
	};
	var tmpQuad = new cr.quad();
	Runtime.prototype.testRectOverlap = function (r, b)
	{
		if (!b || !b.collisionsEnabled)
			return false;
		b.update_bbox();
		var layerb = b.layer;
		var i, len, x, y, haspolya, haspolyb, polya, polyb;
		if (!b.bbox.intersects_rect(r))
			return false;
		tmpQuad.set_from_rect(r);
		if (!b.bquad.intersects_quad(tmpQuad))
			return false;
		haspolyb = (b.collision_poly && !b.collision_poly.is_empty());
		if (!haspolyb)
			return true;
		b.collision_poly.cache_poly(b.width, b.height, b.angle);
		tmpQuad.offset(-r.left, -r.top);
		this.temp_poly.set_from_quad(tmpQuad, 0, 0, 1, 1);
		return b.collision_poly.intersects_poly(this.temp_poly, r.left - b.x, r.top - b.y);
	};
	Runtime.prototype.typeHasBehavior = function (t, b)
	{
		if (!b)
			return false;
		var i, len, j, lenj, f;
		for (i = 0, len = t.behaviors.length; i < len; i++)
		{
			if (t.behaviors[i].behavior instanceof b)
				return true;
		}
		if (!t.is_family)
		{
			for (i = 0, len = t.families.length; i < len; i++)
			{
				f = t.families[i];
				for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
				{
					if (f.behaviors[j].behavior instanceof b)
						return true;
				}
			}
		}
		return false;
	};
	Runtime.prototype.typeHasNoSaveBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.NoSave);
	};
	Runtime.prototype.typeHasPersistBehavior = function (t)
	{
		return this.typeHasBehavior(t, cr.behaviors.Persist);
	};
	Runtime.prototype.getSolidBehavior = function ()
	{
		if (!cr.behaviors.solid)
			return null;
		var i, len;
		for (i = 0, len = this.behaviors.length; i < len; i++)
		{
			if (this.behaviors[i] instanceof cr.behaviors.solid)
				return this.behaviors[i];
		}
		return null;
	};
	Runtime.prototype.testOverlapSolid = function (inst)
	{
		var solid = this.getSolidBehavior();
		if (!solid)
			return null;
		var i, len, s;
		var solids = solid.my_instances.valuesRef();
		for (i = 0, len = solids.length; i < len; ++i)
		{
			s = solids[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testOverlap(inst, s))
				return s;
		}
		return null;
	};
	Runtime.prototype.testRectOverlapSolid = function (r)
	{
		var solid = this.getSolidBehavior();
		if (!solid)
			return null;
		var i, len, s;
		var solids = solid.my_instances.valuesRef();
		for (i = 0, len = solids.length; i < len; ++i)
		{
			s = solids[i];
			if (!s.extra.solidEnabled)
				continue;
			if (this.testRectOverlap(r, s))
				return s;
		}
		return null;
	};
	var jumpthru_array_ret = [];
	Runtime.prototype.testOverlapJumpThru = function (inst, all)
	{
		var jumpthru = null;
		var i, len, s;
		if (!cr.behaviors.jumpthru)
			return null;
		for (i = 0, len = this.behaviors.length; i < len; i++)
		{
			if (this.behaviors[i] instanceof cr.behaviors.jumpthru)
			{
				jumpthru = this.behaviors[i];
				break;
			}
		}
		if (!jumpthru)
			return null;
		var ret = null;
		if (all)
		{
			ret = jumpthru_array_ret;
			ret.length = 0;
		}
		var jumpthrus = jumpthru.my_instances.valuesRef();
		for (i = 0, len = jumpthrus.length; i < len; ++i)
		{
			s = jumpthrus[i];
			if (!s.extra.jumpthruEnabled)
				continue;
			if (this.testOverlap(inst, s))
			{
				if (all)
					ret.push(s);
				else
					return s;
			}
		}
		return ret;
	};
	Runtime.prototype.pushOutSolid = function (inst, xdir, ydir, dist, include_jumpthrus, specific_jumpthru)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		var last_overlapped = null, secondlast_overlapped = null;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (last_overlapped)
					secondlast_overlapped = last_overlapped;
				if (!last_overlapped)
				{
					if (include_jumpthrus)
					{
						if (specific_jumpthru)
							last_overlapped = (this.testOverlap(inst, specific_jumpthru) ? specific_jumpthru : null);
						else
							last_overlapped = this.testOverlapJumpThru(inst);
						if (last_overlapped)
							secondlast_overlapped = last_overlapped;
					}
					if (!last_overlapped)
					{
						if (secondlast_overlapped)
							this.pushInFractional(inst, xdir, ydir, secondlast_overlapped, 16);
						return true;
					}
				}
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushOut = function (inst, xdir, ydir, dist, otherinst)
	{
		var push_dist = dist || 50;
		var oldx = inst.x
		var oldy = inst.y;
		var i;
		for (i = 0; i < push_dist; i++)
		{
			inst.x = (oldx + (xdir * i));
			inst.y = (oldy + (ydir * i));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, otherinst))
				return true;
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.pushInFractional = function (inst, xdir, ydir, obj, limit)
	{
		var divisor = 2;
		var frac;
		var forward = false;
		var overlapping = false;
		var bestx = inst.x;
		var besty = inst.y;
		while (divisor <= limit)
		{
			frac = 1 / divisor;
			divisor *= 2;
			inst.x += xdir * frac * (forward ? 1 : -1);
			inst.y += ydir * frac * (forward ? 1 : -1);
			inst.set_bbox_changed();
			if (this.testOverlap(inst, obj))
			{
				forward = true;
				overlapping = true;
			}
			else
			{
				forward = false;
				overlapping = false;
				bestx = inst.x;
				besty = inst.y;
			}
		}
		if (overlapping)
		{
			inst.x = bestx;
			inst.y = besty;
			inst.set_bbox_changed();
		}
	};
	Runtime.prototype.pushOutSolidNearest = function (inst, max_dist_)
	{
		var max_dist = (cr.is_undefined(max_dist_) ? 100 : max_dist_);
		var dist = 0;
		var oldx = inst.x
		var oldy = inst.y;
		var dir = 0;
		var dx = 0, dy = 0;
		var last_overlapped = null;
		while (dist <= max_dist)
		{
			switch (dir) {
			case 0:		dx = 0; dy = -1; dist++; break;
			case 1:		dx = 1; dy = -1; break;
			case 2:		dx = 1; dy = 0; break;
			case 3:		dx = 1; dy = 1; break;
			case 4:		dx = 0; dy = 1; break;
			case 5:		dx = -1; dy = 1; break;
			case 6:		dx = -1; dy = 0; break;
			case 7:		dx = -1; dy = -1; break;
			}
			dir = (dir + 1) % 8;
			inst.x = cr.floor(oldx + (dx * dist));
			inst.y = cr.floor(oldy + (dy * dist));
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, last_overlapped))
			{
				last_overlapped = this.testOverlapSolid(inst);
				if (!last_overlapped)
					return true;
			}
		}
		inst.x = oldx;
		inst.y = oldy;
		inst.set_bbox_changed();
		return false;
	};
	Runtime.prototype.registerCollision = function (a, b)
	{
		if (!a.collisionsEnabled || !b.collisionsEnabled)
			return;
		this.registered_collisions.push([a, b]);
	};
	Runtime.prototype.checkRegisteredCollision = function (a, b)
	{
		var i, len, x;
		for (i = 0, len = this.registered_collisions.length; i < len; i++)
		{
			x = this.registered_collisions[i];
			if ((x[0] == a && x[1] == b) || (x[0] == b && x[1] == a))
				return true;
		}
		return false;
	};
	Runtime.prototype.calculateSolidBounceAngle = function(inst, startx, starty, obj)
	{
		var objx = inst.x;
		var objy = inst.y;
		var radius = cr.max(10, cr.distanceTo(startx, starty, objx, objy));
		var startangle = cr.angleTo(startx, starty, objx, objy);
		var firstsolid = obj || this.testOverlapSolid(inst);
		if (!firstsolid)
			return cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		var i, curangle, anticlockwise_free_angle, clockwise_free_angle;
		var increment = cr.to_radians(5);	// 5 degree increments
		for (i = 1; i < 36; i++)
		{
			curangle = startangle - i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					anticlockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			anticlockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		var cursolid = firstsolid;
		for (i = 1; i < 36; i++)
		{
			curangle = startangle + i * increment;
			inst.x = startx + Math.cos(curangle) * radius;
			inst.y = starty + Math.sin(curangle) * radius;
			inst.set_bbox_changed();
			if (!this.testOverlap(inst, cursolid))
			{
				cursolid = obj ? null : this.testOverlapSolid(inst);
				if (!cursolid)
				{
					clockwise_free_angle = curangle;
					break;
				}
			}
		}
		if (i === 36)
			clockwise_free_angle = cr.clamp_angle(startangle + cr.PI);
		inst.x = objx;
		inst.y = objy;
		inst.set_bbox_changed();
		if (clockwise_free_angle === anticlockwise_free_angle)
			return clockwise_free_angle;
		var half_diff = cr.angleDiff(clockwise_free_angle, anticlockwise_free_angle) / 2;
		var normal;
		if (cr.angleClockwise(clockwise_free_angle, anticlockwise_free_angle))
		{
			normal = cr.clamp_angle(anticlockwise_free_angle + half_diff + cr.PI);
		}
		else
		{
			normal = cr.clamp_angle(clockwise_free_angle + half_diff);
		}
;
		var vx = Math.cos(startangle);
		var vy = Math.sin(startangle);
		var nx = Math.cos(normal);
		var ny = Math.sin(normal);
		var v_dot_n = vx * nx + vy * ny;
		var rx = vx - 2 * v_dot_n * nx;
		var ry = vy - 2 * v_dot_n * ny;
		return cr.angleTo(0, 0, rx, ry);
	};
	var triggerSheetStack = [];
	var triggerSheetIndex = -1;
	Runtime.prototype.trigger = function (method, inst, value /* for fast triggers */)
	{
;
		if (!this.running_layout)
			return false;
		var sheet = this.running_layout.event_sheet;
		if (!sheet)
			return false;     // no event sheet active; nothing to trigger
		triggerSheetIndex++;
		if (triggerSheetIndex === triggerSheetStack.length)
			triggerSheetStack.push(new cr.ObjectSet());
		else
			triggerSheetStack[triggerSheetIndex].clear();
        var ret = this.triggerOnSheet(method, inst, sheet, value);
		triggerSheetIndex--;
		return ret;
    };
    Runtime.prototype.triggerOnSheet = function (method, inst, sheet, value)
    {
		var alreadyTriggeredSheets = triggerSheetStack[triggerSheetIndex];
        if (alreadyTriggeredSheets.contains(sheet))
            return false;
        alreadyTriggeredSheets.add(sheet);
        var includes = sheet.includes.valuesRef();
        var ret = false;
		var i, leni, r;
        for (i = 0, leni = includes.length; i < leni; i++)
        {
            r = this.triggerOnSheet(method, inst, includes[i], value);
            ret = ret || r;
        }
		if (!inst)
		{
			r = this.triggerOnSheetForTypeName(method, inst, "system", sheet, value);
			ret = ret || r;
		}
		else
		{
			r = this.triggerOnSheetForTypeName(method, inst, inst.type.name, sheet, value);
			ret = ret || r;
			for (i = 0, leni = inst.type.families.length; i < leni; i++)
			{
				r = this.triggerOnSheetForTypeName(method, inst, inst.type.families[i].name, sheet, value);
				ret = ret || r;
			}
		}
		return ret;             // true if anything got triggered
	};
	Runtime.prototype.triggerOnSheetForTypeName = function (method, inst, type_name, sheet, value)
	{
		var i, leni;
		var ret = false, ret2 = false;
		var trig, index;
		var fasttrigger = (typeof value !== "undefined");
		var triggers = (fasttrigger ? sheet.fasttriggers : sheet.triggers);
		var obj_entry = triggers[type_name];
		if (!obj_entry)
			return ret;
		var triggers_list = null;
		for (i = 0, leni = obj_entry.length; i < leni; i++)
		{
			if (obj_entry[i].method == method)
			{
				triggers_list = obj_entry[i].evs;
				break;
			}
		}
		if (!triggers_list)
			return ret;
		var triggers_to_fire;
		if (fasttrigger)
		{
			triggers_to_fire = triggers_list[value];
		}
		else
		{
			triggers_to_fire = triggers_list;
		}
		if (!triggers_to_fire)
			return null;
		for (i = 0, leni = triggers_to_fire.length; i < leni; i++)
		{
			trig = triggers_to_fire[i][0];
			index = triggers_to_fire[i][1];
			ret2 = this.executeSingleTrigger(inst, type_name, trig, index);
			ret = ret || ret2;
		}
		return ret;
	};
	Runtime.prototype.executeSingleTrigger = function (inst, type_name, trig, index)
	{
		var i, leni;
		var ret = false;
		this.trigger_depth++;
		var current_event = this.getCurrentEventStack().current_event;
		if (current_event)
			this.pushCleanSol(current_event.solModifiersIncludingParents);
		var isrecursive = (this.trigger_depth > 1);		// calling trigger from inside another trigger
		this.pushCleanSol(trig.solModifiersIncludingParents);
		if (isrecursive)
			this.pushLocalVarStack();
		var event_stack = this.pushEventStack(trig);
		event_stack.current_event = trig;
		if (inst)
		{
			var sol = this.types[type_name].getCurrentSol();
			sol.select_all = false;
			sol.instances.length = 1;
			sol.instances[0] = inst;
			this.types[type_name].applySolToContainer();
		}
		var ok_to_run = true;
		if (trig.parent)
		{
			var temp_parents_arr = event_stack.temp_parents_arr;
			var cur_parent = trig.parent;
			while (cur_parent)
			{
				temp_parents_arr.push(cur_parent);
				cur_parent = cur_parent.parent;
			}
			temp_parents_arr.reverse();
			for (i = 0, leni = temp_parents_arr.length; i < leni; i++)
			{
				if (!temp_parents_arr[i].run_pretrigger())   // parent event failed
				{
					ok_to_run = false;
					break;
				}
			}
		}
		if (ok_to_run)
		{
			this.execcount++;
			if (trig.orblock)
				trig.run_orblocktrigger(index);
			else
				trig.run();
			ret = ret || event_stack.last_event_true;
		}
		this.popEventStack();
		if (isrecursive)
			this.popLocalVarStack();
		this.popSol(trig.solModifiersIncludingParents);
		if (current_event)
			this.popSol(current_event.solModifiersIncludingParents);
		if (this.isInOnDestroy === 0 && triggerSheetIndex === 0 && !this.isRunningEvents && (!this.deathRow.isEmpty() || this.createRow.length))
		{
			this.ClearDeathRow();
		}
		this.trigger_depth--;
		return ret;
	};
	Runtime.prototype.getCurrentCondition = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.conditions[evinfo.cndindex];
	};
	Runtime.prototype.getCurrentAction = function ()
	{
		var evinfo = this.getCurrentEventStack();
		return evinfo.current_event.actions[evinfo.actindex];
	};
	Runtime.prototype.pushLocalVarStack = function ()
	{
		this.localvar_stack_index++;
		if (this.localvar_stack_index >= this.localvar_stack.length)
			this.localvar_stack.push([]);
	};
	Runtime.prototype.popLocalVarStack = function ()
	{
;
		this.localvar_stack_index--;
	};
	Runtime.prototype.getCurrentLocalVarStack = function ()
	{
		return this.localvar_stack[this.localvar_stack_index];
	};
	Runtime.prototype.pushEventStack = function (cur_event)
	{
		this.event_stack_index++;
		if (this.event_stack_index >= this.event_stack.length)
			this.event_stack.push(new cr.eventStackFrame());
		var ret = this.getCurrentEventStack();
		ret.reset(cur_event);
		return ret;
	};
	Runtime.prototype.popEventStack = function ()
	{
;
		this.event_stack_index--;
	};
	Runtime.prototype.getCurrentEventStack = function ()
	{
		return this.event_stack[this.event_stack_index];
	};
	Runtime.prototype.pushLoopStack = function (name_)
	{
		this.loop_stack_index++;
		if (this.loop_stack_index >= this.loop_stack.length)
		{
			this.loop_stack.push(cr.seal({ name: name_, index: 0, stopped: false }));
		}
		var ret = this.getCurrentLoop();
		ret.name = name_;
		ret.index = 0;
		ret.stopped = false;
		return ret;
	};
	Runtime.prototype.popLoopStack = function ()
	{
;
		this.loop_stack_index--;
	};
	Runtime.prototype.getCurrentLoop = function ()
	{
		return this.loop_stack[this.loop_stack_index];
	};
	Runtime.prototype.getEventVariableByName = function (name, scope)
	{
		var i, leni, j, lenj, sheet, e;
		while (scope)
		{
			for (i = 0, leni = scope.subevents.length; i < leni; i++)
			{
				e = scope.subevents[i];
				if (e instanceof cr.eventvariable && name.toLowerCase() === e.name.toLowerCase())
					return e;
			}
			scope = scope.parent;
		}
		for (i = 0, leni = this.eventsheets_by_index.length; i < leni; i++)
		{
			sheet = this.eventsheets_by_index[i];
			for (j = 0, lenj = sheet.events.length; j < lenj; j++)
			{
				e = sheet.events[j];
				if (e instanceof cr.eventvariable && name.toLowerCase() === e.name.toLowerCase())
					return e;
			}
		}
		return null;
	};
	Runtime.prototype.getLayoutBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			if (this.layouts_by_index[i].sid === sid_)
				return this.layouts_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getObjectTypeBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			if (this.types_by_index[i].sid === sid_)
				return this.types_by_index[i];
		}
		return null;
	};
	Runtime.prototype.getGroupBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			if (this.allGroups[i].sid === sid_)
				return this.allGroups[i];
		}
		return null;
	};
	function makeSaveDb(e)
	{
		var db = e.target.result;
		db.createObjectStore("saves", { keyPath: "slot" });
	};
	function IndexedDB_WriteSlot(slot_, data_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"], "readwrite");
			var objectStore = transaction.objectStore("saves");
			var putReq = objectStore.put({"slot": slot_, "data": data_ });
			putReq.onsuccess = oncomplete_;
		};
	};
	function IndexedDB_ReadSlot(slot_, oncomplete_, onerror_)
	{
		var request = indexedDB.open("_C2SaveStates");
		request.onupgradeneeded = makeSaveDb;
		request.onerror = onerror_;
		request.onsuccess = function (e)
		{
			var db = e.target.result;
			db.onerror = onerror_;
			var transaction = db.transaction(["saves"]);
			var objectStore = transaction.objectStore("saves");
			var readReq = objectStore.get(slot_);
			readReq.onsuccess = function (e)
			{
				if (readReq.result)
					oncomplete_(readReq.result["data"]);
				else
					oncomplete_(null);
			};
		};
	};
	Runtime.prototype.signalContinuousPreview = function ()
	{
		this.signalledContinuousPreview = true;
	};
	function doContinuousPreviewReload()
	{
		cr.logexport("Reloading for continuous preview");
		if (window.location.search === "?continuous")
			window.location.reload(true);
		else
			window.location = window.location + "?continuous";
	};
	Runtime.prototype.handleSaveLoad = function ()
	{
		var self = this;
		var savingToSlot = this.saveToSlot;
		var savingJson = this.lastSaveJson;
		var loadingFromSlot = this.loadFromSlot;
		var continuous = false;
		if (this.signalledContinuousPreview)
		{
			continuous = true;
			savingToSlot = "__c2_continuouspreview";
			this.signalledContinuousPreview = false;
		}
		if (savingToSlot.length)
		{
			this.ClearDeathRow();
			savingJson = this.saveToJSONString();
			if (window.indexedDB)
			{
				IndexedDB_WriteSlot(savingToSlot, savingJson, function ()
				{
					cr.logexport("Saved state to IndexedDB storage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}, function (e)
				{
					try {
						localStorage.setItem("__c2save_" + self.saveToSlot, self.lastSaveJson);
						cr.logexport("Saved state to WebStorage (" + savingJson.length + " bytes)");
						self.lastSaveJson = savingJson;
						self.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
						self.lastSaveJson = "";
						if (continuous)
							doContinuousPreviewReload();
					}
					catch (f)
					{
						cr.logexport("Failed to save game state: " + e + "; " + f);
					}
				});
			}
			else
			{
				try {
					localStorage.setItem("__c2save_" + this.saveToSlot, this.lastSaveJson);
					cr.logexport("Saved state to IndexedDB storage (" + savingJson.length + " bytes)");
					self.lastSaveJson = savingJson;
					this.trigger(cr.system_object.prototype.cnds.OnSaveComplete, null);
					self.lastSaveJson = "";
					if (continuous)
						doContinuousPreviewReload();
				}
				catch (e)
				{
					cr.logexport("Error saving to WebStorage: " + e);
				}
			}
			this.saveToSlot = "";
			this.loadFromSlot = "";
			this.loadFromJson = "";
		}
		if (loadingFromSlot.length)
		{
			if (window.indexedDB)
			{
				IndexedDB_ReadSlot(loadingFromSlot, function (result_)
				{
					if (result_)
					{
						self.loadFromJson = result_;
						cr.logexport("Loaded state from IndexedDB storage (" + self.loadFromJson.length + " bytes)");
					}
					else
					{
						self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
						cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					}
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				}, function (e)
				{
					self.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
					cr.logexport("Loaded state from WebStorage (" + self.loadFromJson.length + " bytes)");
					self.suspendDrawing = false;
					if (!self.loadFromJson.length)
						self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
				});
			}
			else
			{
				this.loadFromJson = localStorage.getItem("__c2save_" + loadingFromSlot) || "";
				cr.logexport("Loaded state from WebStorage (" + this.loadFromJson.length + " bytes)");
				this.suspendDrawing = false;
				if (!self.loadFromJson.length)
					self.trigger(cr.system_object.prototype.cnds.OnLoadFailed, null);
			}
			this.loadFromSlot = "";
			this.saveToSlot = "";
		}
		if (this.loadFromJson.length)
		{
			this.ClearDeathRow();
			this.loadFromJSONString(this.loadFromJson);
			this.lastSaveJson = this.loadFromJson;
			this.trigger(cr.system_object.prototype.cnds.OnLoadComplete, null);
			this.lastSaveJson = "";
			this.loadFromJson = "";
		}
	};
	function CopyExtraObject(extra)
	{
		var p, ret = {};
		for (p in extra)
		{
			if (extra.hasOwnProperty(p))
			{
				if (extra[p] instanceof cr.ObjectSet)
					continue;
				if (typeof extra[p].c2userdata !== "undefined")
					continue;
				ret[p] = extra[p];
			}
		}
		return ret;
	};
	Runtime.prototype.saveToJSONString = function()
	{
		var i, len, j, lenj, type, layout, typeobj, g, c, a, v, p;
		var o = {
			"c2save":				true,
			"version":				1,
			"rt": {
				"time":				this.kahanTime.sum,
				"timescale":		this.timescale,
				"tickcount":		this.tickcount,
				"execcount":		this.execcount,
				"next_uid":			this.next_uid,
				"running_layout":	this.running_layout.sid,
				"start_time_offset": (Date.now() - this.start_time)
			},
			"types": {},
			"layouts": {},
			"events": {
				"groups": {},
				"cnds": {},
				"acts": {},
				"vars": {}
			}
		};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family || this.typeHasNoSaveBehavior(type))
				continue;
			typeobj = {
				"instances": []
			};
			if (cr.hasAnyOwnProperty(type.extra))
				typeobj["ex"] = CopyExtraObject(type.extra);
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				typeobj["instances"].push(this.saveInstanceToJSON(type.instances[j]));
			}
			o["types"][type.sid.toString()] = typeobj;
		}
		for (i = 0, len = this.layouts_by_index.length; i < len; i++)
		{
			layout = this.layouts_by_index[i];
			o["layouts"][layout.sid.toString()] = layout.saveToJSON();
		}
		var ogroups = o["events"]["groups"];
		for (i = 0, len = this.allGroups.length; i < len; i++)
		{
			g = this.allGroups[i];
			ogroups[g.sid.toString()] = !!this.activeGroups[g.group_name];
		}
		var ocnds = o["events"]["cnds"];
		for (p in this.cndsBySid)
		{
			if (this.cndsBySid.hasOwnProperty(p))
			{
				c = this.cndsBySid[p];
				if (cr.hasAnyOwnProperty(c.extra))
					ocnds[p] = { "ex": c.extra };
			}
		}
		var oacts = o["events"]["acts"];
		for (p in this.actsBySid)
		{
			if (this.actsBySid.hasOwnProperty(p))
			{
				a = this.actsBySid[p];
				if (cr.hasAnyOwnProperty(a.extra))
					oacts[p] = { "ex": a.extra };
			}
		}
		var ovars = o["events"]["vars"];
		for (p in this.varsBySid)
		{
			if (this.varsBySid.hasOwnProperty(p))
			{
				v = this.varsBySid[p];
				if (!v.is_constant && (!v.parent || v.is_static))
					ovars[p] = v.data;
			}
		}
		o["system"] = this.system.saveToJSON();
		return JSON.stringify(o);
	};
	Runtime.prototype.loadFromJSONString = function (str)
	{
		var o = JSON.parse(str);
		if (!o["c2save"])
			return;		// probably not a c2 save state
		if (o["version"] > 1)
			return;		// from future version of c2; assume not compatible
		var rt = o["rt"];
		this.kahanTime.reset();
		this.kahanTime.sum = rt["time"];
		this.timescale = rt["timescale"];
		this.tickcount = rt["tickcount"];
		this.execcount = rt["execcount"];
		this.start_time = Date.now() - rt["start_time_offset"];
		var layout_sid = rt["running_layout"];
		if (layout_sid !== this.running_layout.sid)
		{
			var changeToLayout = this.getLayoutBySid(layout_sid);
			if (changeToLayout)
				this.doChangeLayout(changeToLayout);
			else
				return;		// layout that was saved on has gone missing (deleted?)
		}
		this.isLoadingState = true;
		var i, len, j, lenj, k, lenk, p, type, existing_insts, load_insts, inst, binst, layout, layer, g, iid, t;
		var otypes = o["types"];
		for (p in otypes)
		{
			if (otypes.hasOwnProperty(p))
			{
				type = this.getObjectTypeBySid(parseInt(p, 10));
				if (!type || type.is_family || this.typeHasNoSaveBehavior(type))
					continue;
				if (otypes[p]["ex"])
					type.extra = otypes[p]["ex"];
				else
					cr.wipe(type.extra);
				existing_insts = type.instances;
				load_insts = otypes[p]["instances"];
				for (i = 0, len = cr.min(existing_insts.length, load_insts.length); i < len; i++)
				{
					this.loadInstanceFromJSON(existing_insts[i], load_insts[i]);
				}
				for (i = load_insts.length, len = existing_insts.length; i < len; i++)
					this.DestroyInstance(existing_insts[i]);
				for (i = existing_insts.length, len = load_insts.length; i < len; i++)
				{
					layer = null;
					if (type.plugin.is_world)
					{
						layer = this.running_layout.getLayerBySid(load_insts[i]["w"]["l"]);
						if (!layer)
							continue;
					}
					inst = this.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
					this.loadInstanceFromJSON(inst, load_insts[i]);
				}
				type.stale_iids = true;
			}
		}
		this.ClearDeathRow();
		this.objectsByUid = {};
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				this.objectsByUid[inst.uid.toString()] = inst;
			}
		}
		var olayouts = o["layouts"];
		for (p in olayouts)
		{
			if (olayouts.hasOwnProperty(p))
			{
				layout = this.getLayoutBySid(parseInt(p, 10));
				if (!layout)
					continue;		// must've gone missing
				layout.loadFromJSON(olayouts[p]);
			}
		}
		var ogroups = o["events"]["groups"];
		for (p in ogroups)
		{
			if (ogroups.hasOwnProperty(p))
			{
				g = this.getGroupBySid(parseInt(p, 10));
				if (g)
					this.activeGroups[g.group_name] = ogroups[p];
			}
		}
		var ocnds = o["events"]["cnds"];
		for (p in ocnds)
		{
			if (ocnds.hasOwnProperty(p) && this.cndsBySid.hasOwnProperty(p))
			{
				this.cndsBySid[p].extra = ocnds[p]["ex"];
			}
		}
		var oacts = o["events"]["acts"];
		for (p in oacts)
		{
			if (oacts.hasOwnProperty(p) && this.actsBySid.hasOwnProperty(p))
			{
				this.actsBySid[p].extra = oacts[p]["ex"];
			}
		}
		var ovars = o["events"]["vars"];
		for (p in ovars)
		{
			if (ovars.hasOwnProperty(p) && this.varsBySid.hasOwnProperty(p))
			{
				this.varsBySid[p].data = ovars[p];
			}
		}
		this.next_uid = rt["next_uid"];
		this.isLoadingState = false;
		this.system.loadFromJSON(o["system"]);
		for (i = 0, len = this.types_by_index.length; i < len; i++)
		{
			type = this.types_by_index[i];
			if (type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
			{
				inst = type.instances[j];
				if (type.is_contained)
				{
					iid = inst.get_iid();
					inst.siblings.length = 0;
					for (k = 0, lenk = type.container.length; k < lenk; k++)
					{
						t = type.container[k];
						if (type === t)
							continue;
;
						inst.siblings.push(t.instances[iid]);
					}
				}
				if (inst.afterLoad)
					inst.afterLoad();
				if (inst.behavior_insts)
				{
					for (k = 0, lenk = inst.behavior_insts.length; k < lenk; k++)
					{
						binst = inst.behavior_insts[k];
						if (binst.afterLoad)
							binst.afterLoad();
					}
				}
			}
		}
		this.redraw = true;
	};
	Runtime.prototype.saveInstanceToJSON = function(inst)
	{
		var i, len, world, behinst, et;
		var type = inst.type;
		var plugin = type.plugin;
		var o = {
			"uid": inst.uid
		};
		if (cr.hasAnyOwnProperty(inst.extra))
			o["ex"] = CopyExtraObject(inst.extra);
		if (inst.instance_vars && inst.instance_vars.length)
		{
			o["ivs"] = {};
			for (i = 0, len = inst.instance_vars.length; i < len; i++)
			{
				o["ivs"][inst.type.instvar_sids[i].toString()] = inst.instance_vars[i];
			}
		}
		if (plugin.is_world)
		{
			world = {
				"x": inst.x,
				"y": inst.y,
				"w": inst.width,
				"h": inst.height,
				"l": inst.layer.sid,
				"zi": inst.get_zindex()
			};
			if (inst.angle !== 0)
				world["a"] = inst.angle;
			if (inst.opacity !== 1)
				world["o"] = inst.opacity;
			if (inst.hotspotX !== 0.5)
				world["hX"] = inst.hotspotX;
			if (inst.hotspotY !== 0.5)
				world["hY"] = inst.hotspotY;
			if (inst.blend_mode !== 0)
				world["bm"] = inst.blend_mode;
			if (!inst.visible)
				world["v"] = inst.visible;
			if (!inst.collisionsEnabled)
				world["ce"] = inst.collisionsEnabled;
			if (inst.my_timescale !== -1)
				world["mts"] = inst.my_timescale;
			if (type.effect_types.length)
			{
				world["fx"] = [];
				for (i = 0, len = type.effect_types.length; i < len; i++)
				{
					et = type.effect_types[i];
					world["fx"].push({"name": et.name,
									  "active": inst.active_effect_flags[et.index],
									  "params": inst.effect_params[et.index] });
				}
			}
			o["w"] = world;
		}
		if (inst.behavior_insts && inst.behavior_insts.length)
		{
			o["behs"] = {};
			for (i = 0, len = inst.behavior_insts.length; i < len; i++)
			{
				behinst = inst.behavior_insts[i];
				if (behinst.saveToJSON)
					o["behs"][behinst.type.sid.toString()] = behinst.saveToJSON();
			}
		}
		if (inst.saveToJSON)
			o["data"] = inst.saveToJSON();
		return o;
	};
	Runtime.prototype.getInstanceVarIndexBySid = function (type, sid_)
	{
		var i, len;
		for (i = 0, len = type.instvar_sids.length; i < len; i++)
		{
			if (type.instvar_sids[i] === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.getBehaviorIndexBySid = function (inst, sid_)
	{
		var i, len;
		for (i = 0, len = inst.behavior_insts.length; i < len; i++)
		{
			if (inst.behavior_insts[i].type.sid === sid_)
				return i;
		}
		return -1;
	};
	Runtime.prototype.loadInstanceFromJSON = function(inst, o)
	{
		var p, i, len, iv, oivs, world, fxindex, obehs, behindex;
		var oldlayer;
		var type = inst.type;
		var plugin = type.plugin;
		inst.uid = o["uid"];
		if (o["ex"])
			inst.extra = o["ex"];
		else
			cr.wipe(inst.extra);
		oivs = o["ivs"];
		if (oivs)
		{
			for (p in oivs)
			{
				if (oivs.hasOwnProperty(p))
				{
					iv = this.getInstanceVarIndexBySid(type, parseInt(p, 10));
					if (iv < 0 || iv >= inst.instance_vars.length)
						continue;		// must've gone missing
					inst.instance_vars[iv] = oivs[p];
				}
			}
		}
		if (plugin.is_world)
		{
			world = o["w"];
			if (inst.layer.sid !== world["l"])
			{
				oldlayer = inst.layer;
				inst.layer = this.running_layout.getLayerBySid(world["l"]);
				if (inst.layer)
				{
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
					cr.arrayFindRemove(oldlayer.instances, inst);
					oldlayer.zindices_stale = true;
				}
				else
				{
					inst.layer = oldlayer;
					this.DestroyInstance(inst);
				}
			}
			inst.x = world["x"];
			inst.y = world["y"];
			inst.width = world["w"];
			inst.height = world["h"];
			inst.zindex = world["zi"];
			inst.angle = world.hasOwnProperty("a") ? world["a"] : 0;
			inst.opacity = world.hasOwnProperty("o") ? world["o"] : 1;
			inst.hotspotX = world.hasOwnProperty("hX") ? world["hX"] : 0.5;
			inst.hotspotY = world.hasOwnProperty("hY") ? world["hY"] : 0.5;
			inst.visible = world.hasOwnProperty("v") ? world["v"] : true;
			inst.collisionsEnabled = world.hasOwnProperty("ce") ? world["ce"] : true;
			inst.my_timescale = world.hasOwnProperty("mts") ? world["mts"] : -1;
			inst.blend_mode = world.hasOwnProperty("bm") ? world["bm"] : 0;;
			inst.compositeOp = cr.effectToCompositeOp(inst.blend_mode);
			if (this.gl)
				cr.setGLBlend(inst, inst.blend_mode, this.gl);
			inst.set_bbox_changed();
			if (world.hasOwnProperty("fx"))
			{
				for (i = 0, len = world["fx"].length; i < len; i++)
				{
					fxindex = type.getEffectIndexByName(world["fx"][i]["name"]);
					if (fxindex < 0)
						continue;		// must've gone missing
					inst.active_effect_flags[fxindex] = world["fx"][i]["active"];
					inst.effect_params[fxindex] = world["fx"][i]["params"];
				}
			}
			inst.updateActiveEffects();
		}
		obehs = o["behs"];
		if (obehs)
		{
			for (p in obehs)
			{
				if (obehs.hasOwnProperty(p))
				{
					behindex = this.getBehaviorIndexBySid(inst, parseInt(p, 10));
					if (behindex < 0)
						continue;		// must've gone missing
					inst.behavior_insts[behindex].loadFromJSON(obehs[p]);
				}
			}
		}
		if (o["data"])
			inst.loadFromJSON(o["data"]);
	};
	cr.runtime = Runtime;
	cr.createRuntime = function (canvasid)
	{
		return new Runtime(document.getElementById(canvasid));
	};
	cr.createDCRuntime = function (w, h)
	{
		return new Runtime({ "dc": true, "width": w, "height": h });
	};
	window["cr_createRuntime"] = cr.createRuntime;
	window["cr_createDCRuntime"] = cr.createDCRuntime;
	window["createCocoonJSRuntime"] = function ()
	{
		window["c2cocoonjs"] = true;
		var canvas = document.createElement("screencanvas");
		document.body.appendChild(canvas);
		var rt = new Runtime(canvas);
		window["c2runtime"] = rt;
		window.addEventListener("orientationchange", function () {
			window["c2runtime"]["setSize"](window.innerWidth, window.innerHeight);
		});
		return rt;
	};
}());
window["cr_getC2Runtime"] = function()
{
	var canvas = document.getElementById("c2canvas");
	if (canvas)
		return canvas["c2runtime"];
	else if (window["c2runtime"])
		return window["c2runtime"];
	else
		return null;
}
window["cr_sizeCanvas"] = function(w, h)
{
	if (w === 0 || h === 0)
		return;
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSize"](w, h);
}
window["cr_setSuspended"] = function(s)
{
	var runtime = window["cr_getC2Runtime"]();
	if (runtime)
		runtime["setSuspended"](s);
}
;
(function()
{
	function Layout(runtime, m)
	{
		this.runtime = runtime;
		this.event_sheet = null;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		this.scale = 1.0;
		this.angle = 0;
		this.first_visit = true;
		this.name = m[0];
		this.width = m[1];
		this.height = m[2];
		this.unbounded_scrolling = m[3];
		this.sheetname = m[4];
		this.sid = m[5];
		var lm = m[6];
		var i, len;
		this.layers = [];
		this.initial_types = [];
		for (i = 0, len = lm.length; i < len; i++)
		{
			var layer = new cr.layer(this, lm[i]);
			layer.number = i;
			cr.seal(layer);
			this.layers.push(layer);
		}
		var im = m[7];
		this.initial_nonworld = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_nonworld.push(inst);
			if (this.initial_types.indexOf(type) === -1)
				this.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[8].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[8][i][0],
				name: m[8][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[8][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
		this.persist_data = {};
	};
	Layout.prototype.saveObjectToPersist = function (inst)
	{
		var sidStr = inst.type.sid.toString();
		if (!this.persist_data.hasOwnProperty(sidStr))
			this.persist_data[sidStr] = [];
		var type_persist = this.persist_data[sidStr];
		type_persist.push(this.runtime.saveInstanceToJSON(inst));
	};
	Layout.prototype.hasOpaqueBottomLayer = function ()
	{
		var layer = this.layers[0];
		return !layer.transparent && layer.opacity === 1.0 && !layer.forceOwnTexture && layer.visible;
	};
	Layout.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layout.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	var created_instances = [];
	Layout.prototype.startRunning = function ()
	{
		if (this.sheetname)
		{
			this.event_sheet = this.runtime.eventsheets[this.sheetname];
;
		}
		this.runtime.running_layout = this;
		this.scrollX = (this.runtime.original_width / 2);
		this.scrollY = (this.runtime.original_height / 2);
		var i, k, len, lenk, type, type_instances, inst, iid, t, s, p, q, type_data, layer;
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.is_family)
				continue;		// instances are only transferred for their real type
			type_instances = type.instances;
			for (k = 0, lenk = type_instances.length; k < lenk; k++)
			{
				inst = type_instances[k];
				if (inst.layer)
				{
					var num = inst.layer.number;
					if (num >= this.layers.length)
						num = this.layers.length - 1;
					inst.layer = this.layers[num];
					inst.layer.instances.push(inst);
					inst.layer.zindices_stale = true;
				}
			}
		}
		var layer;
		created_instances.length = 0;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			layer.createInitialInstances();		// fills created_instances
			layer.disableAngle = true;
			var px = layer.canvasToLayer(0, 0, true);
			var py = layer.canvasToLayer(0, 0, false);
			layer.disableAngle = false;
			if (this.runtime.pixel_rounding)
			{
				px = (px + 0.5) | 0;
				py = (py + 0.5) | 0;
			}
			layer.rotateViewport(px, py, null);
		}
		if (!this.first_visit)
		{
			for (p in this.persist_data)
			{
				if (this.persist_data.hasOwnProperty(p))
				{
					type = this.runtime.getObjectTypeBySid(parseInt(p, 10));
					if (!type || type.is_family || !this.runtime.typeHasPersistBehavior(type))
						continue;
					type_data = this.persist_data[p];
					for (i = 0, len = type_data.length; i < len; i++)
					{
						layer = null;
						if (type.plugin.is_world)
						{
							layer = this.getLayerBySid(type_data[i]["w"]["l"]);
							if (!layer)
								continue;
						}
						inst = this.runtime.createInstanceFromInit(type.default_instance, layer, false, 0, 0, true);
						this.runtime.loadInstanceFromJSON(inst, type_data[i]);
						created_instances.push(inst);
					}
					type_data.length = 0;
				}
			}
			for (i = 0, len = this.layers.length; i < len; i++)
			{
				this.layers[i].instances.sort(sortInstanceByZIndex);
				this.layers[i].zindices_stale = true;		// in case of duplicates/holes
			}
		}
		for (i = 0; i < created_instances.length; i++)
		{
			inst = created_instances[i];
			if (!inst.type.is_contained)
				continue;
			iid = inst.get_iid();
			for (k = 0, lenk = inst.type.container.length; k < lenk; k++)
			{
				t = inst.type.container[k];
				if (inst.type === t)
					continue;
				if (t.instances.length > iid)
					inst.siblings.push(t.instances[iid]);
				else
				{
					if (!t.default_instance)
					{
					}
					else
					{
						s = this.runtime.createInstanceFromInit(t.default_instance, inst.layer, true, inst.x, inst.y, true);
						this.runtime.ClearDeathRow();
						t.updateIIDs();
						inst.siblings.push(s);
						created_instances.push(s);		// come back around and link up its own instances too
					}
				}
			}
		}
		for (i = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			inst = this.runtime.createInstanceFromInit(this.initial_nonworld[i], null, true);
;
		}
		this.runtime.changelayout = null;
		this.runtime.ClearDeathRow();
		if (this.runtime.ctx && !this.runtime.isDomFree)
		{
			for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
			{
				t = this.runtime.types_by_index[i];
				if (t.is_family || !t.instances.length || !t.preloadCanvas2D)
					continue;
				t.preloadCanvas2D(this.runtime.ctx);
			}
		}
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout start: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		for (i = 0, len = created_instances.length; i < len; i++)
		{
			inst = created_instances[i];
			this.runtime.trigger(Object.getPrototypeOf(inst.type.plugin).cnds.OnCreated, inst);
		}
		created_instances.length = 0;
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutStart, null);
		this.first_visit = false;
	};
	Layout.prototype.createGlobalNonWorlds = function ()
	{
		var i, k, len, initial_inst, inst, type;
		for (i = 0, k = 0, len = this.initial_nonworld.length; i < len; i++)
		{
			initial_inst = this.initial_nonworld[i];
			type = this.runtime.types_by_index[initial_inst[1]];
			if (type.global)
				inst = this.runtime.createInstanceFromInit(initial_inst, null, true);
			else
			{
				this.initial_nonworld[k] = initial_inst;
				k++;
			}
		}
		this.initial_nonworld.length = k;
	};
	Layout.prototype.stopRunning = function ()
	{
;
		/*
		if (this.runtime.glwrap)
		{
			console.log("Estimated VRAM at layout end: " + this.runtime.glwrap.textureCount() + " textures, approx. " + Math.round(this.runtime.glwrap.estimateVRAM() / 1024) + " kb");
		}
		*/
		this.runtime.trigger(cr.system_object.prototype.cnds.OnLayoutEnd, null);
		this.runtime.system.waits.length = 0;
		var i, leni, j, lenj;
		var layer_instances, inst, type;
		for (i = 0, leni = this.layers.length; i < leni; i++)
		{
			layer_instances = this.layers[i].instances;
			for (j = 0, lenj = layer_instances.length; j < lenj; j++)
			{
				inst = layer_instances[j];
				if (!inst.type.global)
				{
					if (this.runtime.typeHasPersistBehavior(inst.type))
						this.saveObjectToPersist(inst);
					this.runtime.DestroyInstance(inst);
				}
			}
			this.runtime.ClearDeathRow();
			layer_instances.length = 0;
			this.layers[i].zindices_stale = true;
		}
		for (i = 0, leni = this.runtime.types_by_index.length; i < leni; i++)
		{
			type = this.runtime.types_by_index[i];
			if (type.global || type.plugin.is_world || type.plugin.singleglobal || type.is_family)
				continue;
			for (j = 0, lenj = type.instances.length; j < lenj; j++)
				this.runtime.DestroyInstance(type.instances[j]);
			this.runtime.ClearDeathRow();
		}
	};
	Layout.prototype.draw = function (ctx)
	{
		ctx.globalAlpha = 1;
		ctx.globalCompositeOperation = "source-over";
		if (this.runtime.clearBackground && !this.hasOpaqueBottomLayer())
			ctx.clearRect(0, 0, this.runtime.width, this.runtime.height);
		var i, len, l;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.visible && l.opacity > 0 && l.blend_mode !== 11)
				l.draw(ctx);
		}
	};
	Layout.prototype.drawGL = function (glw)
	{
		var render_to_texture = (this.active_effect_types.length > 0 || this.runtime.uses_background_blending);
		if (render_to_texture)
		{
			if (!this.runtime.layout_tex)
			{
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.width, this.runtime.height, this.runtime.linearSampling);
			}
			if (this.runtime.layout_tex.c2width !== this.runtime.width || this.runtime.layout_tex.c2height !== this.runtime.height)
			{
				glw.deleteTexture(this.runtime.layout_tex);
				this.runtime.layout_tex = glw.createEmptyTexture(this.runtime.width, this.runtime.height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layout_tex);
		}
		if (this.runtime.clearBackground && !this.hasOpaqueBottomLayer())
			glw.clear(0, 0, 0, 0);
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].visible && this.layers[i].opacity > 0)
				this.layers[i].drawGL(glw);
		}
		if (render_to_texture)
		{
			if (this.active_effect_types.length <= 1)
			{
				if (this.active_effect_types.length === 1)
				{
					var etindex = this.active_effect_types[0].index;
					glw.switchProgram(this.active_effect_types[0].shaderindex);
					glw.setProgramParameters(null,								// backTex
											 1.0 / this.runtime.width,			// pixelWidth
											 1.0 / this.runtime.height,			// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.scale,						// layerScale
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(this.active_effect_types[0].shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				glw.setRenderingToTexture(null);				// to backbuffer
				glw.setOpacity(1);
				glw.setTexture(this.runtime.layout_tex);
				glw.setAlphaBlend();
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.width / 2;
				var halfh = this.runtime.height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.renderEffectChain(glw, null, null, null);
			}
		}
		glw.present();
	};
	Layout.prototype.getRenderTarget = function()
	{
		return (this.active_effect_types.length > 0 || this.runtime.uses_background_blending) ? this.runtime.layout_tex : null;
	};
	Layout.prototype.getMinLayerScale = function ()
	{
		var m = this.layers[0].getScale();
		var i, len, l;
		for (i = 1, len = this.layers.length; i < len; i++)
		{
			l = this.layers[i];
			if (l.parallaxX === 0 && l.parallaxY === 0)
				continue;
			if (l.getScale() < m)
				m = l.getScale();
		}
		return m;
	};
	Layout.prototype.scrollToX = function (x)
	{
		if (!this.unbounded_scrolling)
		{
			var widthBoundary = (this.runtime.width * (1 / this.getMinLayerScale()) / 2);
			if (x > this.width - widthBoundary)
				x = this.width - widthBoundary;
			if (x < widthBoundary)
				x = widthBoundary;
		}
		if (this.scrollX !== x)
		{
			this.scrollX = x;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.scrollToY = function (y)
	{
		if (!this.unbounded_scrolling)
		{
			var heightBoundary = (this.runtime.height * (1 / this.getMinLayerScale()) / 2);
			if (y > this.height - heightBoundary)
				y = this.height - heightBoundary;
			if (y < heightBoundary)
				y = heightBoundary;
		}
		if (this.scrollY !== y)
		{
			this.scrollY = y;
			this.runtime.redraw = true;
		}
	};
	Layout.prototype.renderEffectChain = function (glw, layer, inst, rendertarget)
	{
		var active_effect_types = inst ?
							inst.active_effect_types :
							layer ?
								layer.active_effect_types :
								this.active_effect_types;
		var layerScale = inst ? inst.layer.getScale() :
							layer ? layer.getScale() : 1;
		var fx_tex = this.runtime.fx_tex;
		var i, len, last, temp, fx_index = 0, other_fx_index = 1;
		var y, h;
		var windowWidth = this.runtime.width;
		var windowHeight = this.runtime.height;
		var halfw = windowWidth / 2;
		var halfh = windowHeight / 2;
		var rcTex = layer ? layer.rcTex : this.rcTex;
		var rcTex2 = layer ? layer.rcTex2 : this.rcTex2;
		var screenleft = 0, clearleft = 0;
		var screentop = 0, cleartop = 0;
		var screenright = windowWidth, clearright = windowWidth;
		var screenbottom = windowHeight, clearbottom = windowHeight;
		var boxExtendHorizontal = 0;
		var boxExtendVertical = 0;
		var inst_layer_angle = inst ? inst.layer.getAngle() : 0;
		if (inst)
		{
			for (i = 0, len = active_effect_types.length; i < len; i++)
			{
				boxExtendHorizontal += glw.getProgramBoxExtendHorizontal(active_effect_types[i].shaderindex);
				boxExtendVertical += glw.getProgramBoxExtendVertical(active_effect_types[i].shaderindex);
			}
			var bbox = inst.bbox;
			screenleft = layer.layerToCanvas(bbox.left, bbox.top, true);
			screentop = layer.layerToCanvas(bbox.left, bbox.top, false);
			screenright = layer.layerToCanvas(bbox.right, bbox.bottom, true);
			screenbottom = layer.layerToCanvas(bbox.right, bbox.bottom, false);
			if (inst_layer_angle !== 0)
			{
				var screentrx = layer.layerToCanvas(bbox.right, bbox.top, true);
				var screentry = layer.layerToCanvas(bbox.right, bbox.top, false);
				var screenblx = layer.layerToCanvas(bbox.left, bbox.bottom, true);
				var screenbly = layer.layerToCanvas(bbox.left, bbox.bottom, false);
				temp = Math.min(screenleft, screenright, screentrx, screenblx);
				screenright = Math.max(screenleft, screenright, screentrx, screenblx);
				screenleft = temp;
				temp = Math.min(screentop, screenbottom, screentry, screenbly);
				screenbottom = Math.max(screentop, screenbottom, screentry, screenbly);
				screentop = temp;
			}
			screenleft -= boxExtendHorizontal;
			screentop -= boxExtendVertical;
			screenright += boxExtendHorizontal;
			screenbottom += boxExtendVertical;
			rcTex2.left = screenleft / windowWidth;
			rcTex2.top = 1 - screentop / windowHeight;
			rcTex2.right = screenright / windowWidth;
			rcTex2.bottom = 1 - screenbottom / windowHeight;
			clearleft = screenleft = Math.floor(screenleft);
			cleartop = screentop = Math.floor(screentop);
			clearright = screenright = Math.ceil(screenright);
			clearbottom = screenbottom = Math.ceil(screenbottom);
			clearleft -= boxExtendHorizontal;
			cleartop -= boxExtendVertical;
			clearright += boxExtendHorizontal;
			clearbottom += boxExtendVertical;
			if (screenleft < 0)					screenleft = 0;
			if (screentop < 0)					screentop = 0;
			if (screenright > windowWidth)		screenright = windowWidth;
			if (screenbottom > windowHeight)	screenbottom = windowHeight;
			if (clearleft < 0)					clearleft = 0;
			if (cleartop < 0)					cleartop = 0;
			if (clearright > windowWidth)		clearright = windowWidth;
			if (clearbottom > windowHeight)		clearbottom = windowHeight;
			rcTex.left = screenleft / windowWidth;
			rcTex.top = 1 - screentop / windowHeight;
			rcTex.right = screenright / windowWidth;
			rcTex.bottom = 1 - screenbottom / windowHeight;
		}
		else
		{
			rcTex.left = rcTex2.left = 0;
			rcTex.top = rcTex2.top = 0;
			rcTex.right = rcTex2.right = 1;
			rcTex.bottom = rcTex2.bottom = 1;
		}
		var pre_draw = (inst && (((inst.angle || inst_layer_angle) && glw.programUsesDest(active_effect_types[0].shaderindex)) || boxExtendHorizontal !== 0 || boxExtendVertical !== 0 || inst.opacity !== 1 || inst.type.plugin.must_predraw)) || (layer && !inst && layer.opacity !== 1);
		glw.setAlphaBlend();
		if (pre_draw)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(0);
			glw.setRenderingToTexture(fx_tex[fx_index]);
			h = clearbottom - cleartop;
			y = (windowHeight - cleartop) - h;
			glw.clearRect(clearleft, y, clearright - clearleft, h);
			if (inst)
			{
				inst.drawGL(glw);
			}
			else
			{
				glw.setTexture(this.runtime.layer_tex);
				glw.setOpacity(layer.opacity);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			}
			rcTex2.left = rcTex2.top = 0;
			rcTex2.right = rcTex2.bottom = 1;
			if (inst)
			{
				temp = rcTex.top;
				rcTex.top = rcTex.bottom;
				rcTex.bottom = temp;
			}
			fx_index = 1;
			other_fx_index = 0;
		}
		glw.setOpacity(1);
		var last = active_effect_types.length - 1;
		var post_draw = glw.programUsesCrossSampling(active_effect_types[last].shaderindex);
		var etindex = 0;
		for (i = 0, len = active_effect_types.length; i < len; i++)
		{
			if (!fx_tex[fx_index])
			{
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			if (fx_tex[fx_index].c2width !== windowWidth || fx_tex[fx_index].c2height !== windowHeight)
			{
				glw.deleteTexture(fx_tex[fx_index]);
				fx_tex[fx_index] = glw.createEmptyTexture(windowWidth, windowHeight, this.runtime.linearSampling);
			}
			glw.switchProgram(active_effect_types[i].shaderindex);
			etindex = active_effect_types[i].index;
			if (glw.programIsAnimated(active_effect_types[i].shaderindex))
				this.runtime.redraw = true;
			if (i == 0 && !pre_draw)
			{
				glw.setRenderingToTexture(fx_tex[fx_index]);
				h = clearbottom - cleartop;
				y = (windowHeight - cleartop) - h;
				glw.clearRect(clearleft, y, clearright - clearleft, h);
				if (inst)
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / inst.width,				// pixelWidth
											 1.0 / inst.height,				// pixelHeight
											 rcTex2.left, rcTex2.top,		// destStart
											 rcTex2.right, rcTex2.bottom,	// destEnd
											 layerScale,
											 inst.effect_params[etindex]);	// fx params
					inst.drawGL(glw);
				}
				else
				{
					glw.setProgramParameters(rendertarget,					// backTex
											 1.0 / windowWidth,				// pixelWidth
											 1.0 / windowHeight,			// pixelHeight
											 0.0, 0.0,						// destStart
											 1.0, 1.0,						// destEnd
											 layerScale,
											 layer ?						// fx params
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
					glw.setTexture(layer ? this.runtime.layer_tex : this.runtime.layout_tex);
					glw.resetModelView();
					glw.translate(-halfw, -halfh);
					glw.updateModelView();
					glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				}
				rcTex2.left = rcTex2.top = 0;
				rcTex2.right = rcTex2.bottom = 1;
				if (inst && !post_draw)
				{
					temp = screenbottom;
					screenbottom = screentop;
					screentop = temp;
				}
			}
			else
			{
				glw.setProgramParameters(rendertarget,						// backTex
										 1.0 / windowWidth,					// pixelWidth
										 1.0 / windowHeight,				// pixelHeight
										 rcTex2.left, rcTex2.top,			// destStart
										 rcTex2.right, rcTex2.bottom,		// destEnd
										 layerScale,
										 inst ?								// fx params
											inst.effect_params[etindex] :
											layer ?
												layer.effect_params[etindex] :
												this.effect_params[etindex]);
				if (i === last && !post_draw)
				{
					if (inst)
						glw.setBlend(inst.srcBlend, inst.destBlend);
					else if (layer)
						glw.setBlend(layer.srcBlend, layer.destBlend);
					glw.setRenderingToTexture(rendertarget);
				}
				else
				{
					glw.setRenderingToTexture(fx_tex[fx_index]);
					h = clearbottom - cleartop;
					y = (windowHeight - cleartop) - h;
					glw.clearRect(clearleft, y, clearright - clearleft, h);
				}
				glw.setTexture(fx_tex[other_fx_index]);
				glw.resetModelView();
				glw.translate(-halfw, -halfh);
				glw.updateModelView();
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
				if (i === last && !post_draw)
					glw.setTexture(null);
			}
			fx_index = (fx_index === 0 ? 1 : 0);
			other_fx_index = (fx_index === 0 ? 1 : 0);		// will be opposite to fx_index since it was just assigned
		}
		if (post_draw)
		{
			glw.switchProgram(0);
			if (inst)
				glw.setBlend(inst.srcBlend, inst.destBlend);
			else if (layer)
				glw.setBlend(layer.srcBlend, layer.destBlend);
			glw.setRenderingToTexture(rendertarget);
			glw.setTexture(fx_tex[other_fx_index]);
			glw.resetModelView();
			glw.translate(-halfw, -halfh);
			glw.updateModelView();
			if (inst && active_effect_types.length === 1 && !pre_draw)
				glw.quadTex(screenleft, screentop, screenright, screentop, screenright, screenbottom, screenleft, screenbottom, rcTex);
			else
				glw.quadTex(screenleft, screenbottom, screenright, screenbottom, screenright, screentop, screenleft, screentop, rcTex);
			glw.setTexture(null);
		}
	};
	Layout.prototype.getLayerBySid = function (sid_)
	{
		var i, len;
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			if (this.layers[i].sid === sid_)
				return this.layers[i];
		}
		return null;
	};
	Layout.prototype.saveToJSON = function ()
	{
		var i, len, layer, et;
		var o = {
			"sx": this.scrollX,
			"sy": this.scrollY,
			"s": this.scale,
			"a": this.angle,
			"w": this.width,
			"h": this.height,
			"persist": this.persist_data,
			"fx": [],
			"layers": {}
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		for (i = 0, len = this.layers.length; i < len; i++)
		{
			layer = this.layers[i];
			o["layers"][layer.sid.toString()] = layer.saveToJSON();
		}
		return o;
	};
	Layout.prototype.loadFromJSON = function (o)
	{
		var i, len, fx, p, layer;
		this.scrollX = o["sx"];
		this.scrollY = o["sy"];
		this.scale = o["s"];
		this.angle = o["a"];
		this.width = o["w"];
		this.height = o["h"];
		this.persist_data = o["persist"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		var olayers = o["layers"];
		for (p in olayers)
		{
			if (olayers.hasOwnProperty(p))
			{
				layer = this.getLayerBySid(parseInt(p, 10));
				if (!layer)
					continue;		// must've gone missing
				layer.loadFromJSON(olayers[p]);
			}
		}
	};
	cr.layout = Layout;
	function Layer(layout, m)
	{
		this.layout = layout;
		this.runtime = layout.runtime;
		this.instances = [];        // running instances
		this.scale = 1.0;
		this.angle = 0;
		this.disableAngle = false;
		this.tmprect = new cr.rect(0, 0, 0, 0);
		this.tmpquad = new cr.quad();
		this.viewLeft = 0;
		this.viewRight = 0;
		this.viewTop = 0;
		this.viewBottom = 0;
		this.zindices_stale = false;
		this.name = m[0];
		this.index = m[1];
		this.sid = m[2];
		this.visible = m[3];		// initially visible
		this.background_color = m[4];
		this.transparent = m[5];
		this.parallaxX = m[6];
		this.parallaxY = m[7];
		this.opacity = m[8];
		this.forceOwnTexture = m[9];
		this.zoomRate = m[10];
		this.blend_mode = m[11];
		this.effect_fallback = m[12];
		this.compositeOp = "source-over";
		this.srcBlend = 0;
		this.destBlend = 0;
		this.render_offscreen = false;
		var im = m[13];
		var i, len;
		this.initial_instances = [];
		for (i = 0, len = im.length; i < len; i++)
		{
			var inst = im[i];
			var type = this.runtime.types_by_index[inst[1]];
;
			if (!type.default_instance)
				type.default_instance = inst;
			this.initial_instances.push(inst);
			if (this.layout.initial_types.indexOf(type) === -1)
				this.layout.initial_types.push(type);
		}
		this.effect_types = [];
		this.active_effect_types = [];
		this.effect_params = [];
		for (i = 0, len = m[14].length; i < len; i++)
		{
			this.effect_types.push({
				id: m[14][i][0],
				name: m[14][i][1],
				shaderindex: -1,
				active: true,
				index: i
			});
			this.effect_params.push(m[14][i][2].slice(0));
		}
		this.updateActiveEffects();
		this.rcTex = new cr.rect(0, 0, 1, 1);
		this.rcTex2 = new cr.rect(0, 0, 1, 1);
	};
	Layer.prototype.updateActiveEffects = function ()
	{
		this.active_effect_types.length = 0;
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.active)
				this.active_effect_types.push(et);
		}
	};
	Layer.prototype.getEffectByName = function (name_)
	{
		var i, len, et;
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			if (et.name === name_)
				return et;
		}
		return null;
	};
	Layer.prototype.createInitialInstances = function ()
	{
		var i, k, len, inst;
		for (i = 0, k = 0, len = this.initial_instances.length; i < len; i++)
		{
			inst = this.runtime.createInstanceFromInit(this.initial_instances[i], this, true);
			created_instances.push(inst);
			if (inst && !inst.type.global && !this.runtime.typeHasPersistBehavior(inst.type))
			{
				this.initial_instances[k] = this.initial_instances[i];
				k++;
			}
		}
		this.initial_instances.length = k;
		this.runtime.ClearDeathRow();		// flushes creation row so IIDs will be correct
		if (!this.runtime.glwrap && this.effect_types.length)	// no WebGL renderer and shaders used
			this.blend_mode = this.effect_fallback;				// use fallback blend mode
		this.compositeOp = cr.effectToCompositeOp(this.blend_mode);
		if (this.runtime.gl)
			cr.setGLBlend(this, this.blend_mode, this.runtime.gl);
	};
	Layer.prototype.updateZIndices = function ()
	{
		if (!this.zindices_stale)
			return;
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
;
;
			this.instances[i].zindex = i;
		}
		this.zindices_stale = false;
	};
	Layer.prototype.getScale = function ()
	{
		return this.getNormalScale() * this.runtime.aspect_scale;
	};
	Layer.prototype.getNormalScale = function ()
	{
		return ((this.scale * this.layout.scale) - 1) * this.zoomRate + 1;
	};
	Layer.prototype.getAngle = function ()
	{
		if (this.disableAngle)
			return 0;
		return cr.clamp_angle(this.layout.angle + this.angle);
	};
	Layer.prototype.draw = function (ctx)
	{
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.blend_mode !== 0);
		var layer_canvas = this.runtime.canvas;
		var layer_ctx = ctx;
		ctx.globalAlpha = 1;
		ctx.globalCompositeOperation = "source-over";
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_canvas)
			{
				this.runtime.layer_canvas = document.createElement("canvas");
;
				layer_canvas = this.runtime.layer_canvas;
				layer_canvas.width = this.runtime.width;
				layer_canvas.height = this.runtime.height;
				this.runtime.layer_ctx = layer_canvas.getContext("2d");
;
			}
			layer_canvas = this.runtime.layer_canvas;
			layer_ctx = this.runtime.layer_ctx;
			if (layer_canvas.width !== this.runtime.width)
				layer_canvas.width = this.runtime.width;
			if (layer_canvas.height !== this.runtime.height)
				layer_canvas.height = this.runtime.height;
			if (this.transparent)
				layer_ctx.clearRect(0, 0, this.runtime.width, this.runtime.height);
		}
		if (!this.transparent)
		{
			layer_ctx.fillStyle = "rgb(" + this.background_color[0] + "," + this.background_color[1] + "," + this.background_color[2] + ")";
			layer_ctx.fillRect(0, 0, this.runtime.width, this.runtime.height);
		}
		layer_ctx.save();
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true);
		var py = this.canvasToLayer(0, 0, false);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, layer_ctx);
		var myscale = this.getScale();
		layer_ctx.scale(myscale, myscale);
		layer_ctx.translate(-px, -py);
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			layer_ctx.globalCompositeOperation = inst.compositeOp;
			inst.draw(layer_ctx);
		}
		layer_ctx.restore();
		if (this.render_offscreen)
		{
			ctx.globalCompositeOperation = this.compositeOp;
			ctx.globalAlpha = this.opacity;
			ctx.drawImage(layer_canvas, 0, 0);
		}
	};
	Layer.prototype.rotateViewport = function (px, py, ctx)
	{
		var myscale = this.getScale();
		this.viewLeft = px;
		this.viewTop = py;
		this.viewRight = px + (this.runtime.width * (1 / myscale));
		this.viewBottom = py + (this.runtime.height * (1 / myscale));
		var myAngle = this.getAngle();
		if (myAngle !== 0)
		{
			if (ctx)
			{
				ctx.translate(this.runtime.width / 2, this.runtime.height / 2);
				ctx.rotate(-myAngle);
				ctx.translate(this.runtime.width / -2, this.runtime.height / -2);
			}
			this.tmprect.set(this.viewLeft, this.viewTop, this.viewRight, this.viewBottom);
			this.tmprect.offset((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
			this.tmpquad.set_from_rotated_rect(this.tmprect, myAngle);
			this.tmpquad.bounding_box(this.tmprect);
			this.tmprect.offset((this.viewLeft + this.viewRight) / 2, (this.viewTop + this.viewBottom) / 2);
			this.viewLeft = this.tmprect.left;
			this.viewTop = this.tmprect.top;
			this.viewRight = this.tmprect.right;
			this.viewBottom = this.tmprect.bottom;
		}
	}
	Layer.prototype.drawGL = function (glw)
	{
		var windowWidth = this.runtime.width;
		var windowHeight = this.runtime.height;
		var shaderindex = 0;
		var etindex = 0;
		this.render_offscreen = (this.forceOwnTexture || this.opacity !== 1.0 || this.active_effect_types.length > 0 || this.blend_mode !== 0);
		if (this.render_offscreen)
		{
			if (!this.runtime.layer_tex)
			{
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.width, this.runtime.height, this.runtime.linearSampling);
			}
			if (this.runtime.layer_tex.c2width !== this.runtime.width || this.runtime.layer_tex.c2height !== this.runtime.height)
			{
				glw.deleteTexture(this.runtime.layer_tex);
				this.runtime.layer_tex = glw.createEmptyTexture(this.runtime.width, this.runtime.height, this.runtime.linearSampling);
			}
			glw.setRenderingToTexture(this.runtime.layer_tex);
			if (this.transparent)
				glw.clear(0, 0, 0, 0);
		}
		if (!this.transparent)
		{
			glw.clear(this.background_color[0] / 255, this.background_color[1] / 255, this.background_color[2] / 255, 1);
		}
		this.disableAngle = true;
		var px = this.canvasToLayer(0, 0, true);
		var py = this.canvasToLayer(0, 0, false);
		this.disableAngle = false;
		if (this.runtime.pixel_rounding)
		{
			px = (px + 0.5) | 0;
			py = (py + 0.5) | 0;
		}
		this.rotateViewport(px, py, null);
		var myscale = this.getScale();
		glw.resetModelView();
		glw.scale(myscale, myscale);
		glw.rotateZ(-this.getAngle());
		glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
		glw.updateModelView();
		var i, len, inst, bbox;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			if (!inst.visible || inst.width === 0 || inst.height === 0)
				continue;
			inst.update_bbox();
			bbox = inst.bbox;
			if (bbox.right < this.viewLeft || bbox.bottom < this.viewTop || bbox.left > this.viewRight || bbox.top > this.viewBottom)
				continue;
			if (inst.uses_shaders)
			{
				shaderindex = inst.active_effect_types[0].shaderindex;
				etindex = inst.active_effect_types[0].index;
				if (inst.active_effect_types.length === 1 && !glw.programUsesCrossSampling(shaderindex) &&
					!glw.programExtendsBox(shaderindex) && ((!inst.angle && !inst.layer.getAngle()) || !glw.programUsesDest(shaderindex)) &&
					inst.opacity === 1 && !inst.type.plugin.must_predraw)
				{
					glw.switchProgram(shaderindex);
					glw.setBlend(inst.srcBlend, inst.destBlend);
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
					var destStartX = 0, destStartY = 0, destEndX = 0, destEndY = 0;
					if (glw.programUsesDest(shaderindex))
					{
						var bbox = inst.bbox;
						var screenleft = this.layerToCanvas(bbox.left, bbox.top, true);
						var screentop = this.layerToCanvas(bbox.left, bbox.top, false);
						var screenright = this.layerToCanvas(bbox.right, bbox.bottom, true);
						var screenbottom = this.layerToCanvas(bbox.right, bbox.bottom, false);
						destStartX = screenleft / windowWidth;
						destStartY = 1 - screentop / windowHeight;
						destEndX = screenright / windowWidth;
						destEndY = 1 - screenbottom / windowHeight;
					}
					glw.setProgramParameters(this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget(), // backTex
											 1.0 / inst.width,			// pixelWidth
											 1.0 / inst.height,			// pixelHeight
											 destStartX, destStartY,
											 destEndX, destEndY,
											 this.getScale(),
											 inst.effect_params[etindex]);
					inst.drawGL(glw);
				}
				else
				{
					this.layout.renderEffectChain(glw, this, inst, this.render_offscreen ? this.runtime.layer_tex : this.layout.getRenderTarget());
					glw.resetModelView();
					glw.scale(myscale, myscale);
					glw.rotateZ(-this.getAngle());
					glw.translate((this.viewLeft + this.viewRight) / -2, (this.viewTop + this.viewBottom) / -2);
					glw.updateModelView();
				}
			}
			else
			{
				glw.switchProgram(0);		// un-set any previously set shader
				glw.setBlend(inst.srcBlend, inst.destBlend);
				inst.drawGL(glw);
			}
		}
		if (this.render_offscreen)
		{
			shaderindex = this.active_effect_types.length ? this.active_effect_types[0].shaderindex : 0;
			etindex = this.active_effect_types.length ? this.active_effect_types[0].index : 0;
			if (this.active_effect_types.length === 0 || (this.active_effect_types.length === 1 &&
				!glw.programUsesCrossSampling(shaderindex) && this.opacity === 1))
			{
				if (this.active_effect_types.length === 1)
				{
					glw.switchProgram(shaderindex);
					glw.setProgramParameters(this.layout.getRenderTarget(),		// backTex
											 1.0 / this.runtime.width,			// pixelWidth
											 1.0 / this.runtime.height,			// pixelHeight
											 0.0, 0.0,							// destStart
											 1.0, 1.0,							// destEnd
											 this.getScale(),					// layerScale
											 this.effect_params[etindex]);		// fx parameters
					if (glw.programIsAnimated(shaderindex))
						this.runtime.redraw = true;
				}
				else
					glw.switchProgram(0);
				glw.setRenderingToTexture(this.layout.getRenderTarget());
				glw.setOpacity(this.opacity);
				glw.setTexture(this.runtime.layer_tex);
				glw.setBlend(this.srcBlend, this.destBlend);
				glw.resetModelView();
				glw.updateModelView();
				var halfw = this.runtime.width / 2;
				var halfh = this.runtime.height / 2;
				glw.quad(-halfw, halfh, halfw, halfh, halfw, -halfh, -halfw, -halfh);
				glw.setTexture(null);
			}
			else
			{
				this.layout.renderEffectChain(glw, this, null, this.layout.getRenderTarget());
			}
		}
	};
	Layer.prototype.canvasToLayer = function (ptx, pty, getx)
	{
		var isiOSRetina = (!this.runtime.isDomFree && this.runtime.useiOSRetina && this.runtime.isiOS);
		var multiplier = this.runtime.devicePixelRatio;
		if (isiOSRetina && this.runtime.fullscreen_mode > 0)
		{
			ptx *= multiplier;
			pty *= multiplier;
		}
		var ox = (this.runtime.original_width / 2);
		var oy = (this.runtime.original_height / 2);
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale();
		x -= (this.runtime.width * invScale) / 2;
		y -= (this.runtime.height * invScale) / 2;
		x += ptx * invScale;
		y += pty * invScale;
		var a = this.getAngle();
		if (a !== 0)
		{
			x -= this.layout.scrollX;
			y -= this.layout.scrollY;
			var cosa = Math.cos(a);
			var sina = Math.sin(a);
			var x_temp = (x * cosa) - (y * sina);
			y = (y * cosa) + (x * sina);
			x = x_temp;
			x += this.layout.scrollX;
			y += this.layout.scrollY;
		}
		return getx ? x : y;
	};
	Layer.prototype.layerToCanvas = function (ptx, pty, getx)
	{
		var a = this.getAngle();
		if (a !== 0)
		{
			ptx -= this.layout.scrollX;
			pty -= this.layout.scrollY;
			var cosa = Math.cos(-a);
			var sina = Math.sin(-a);
			var x_temp = (ptx * cosa) - (pty * sina);
			pty = (pty * cosa) + (ptx * sina);
			ptx = x_temp;
			ptx += this.layout.scrollX;
			pty += this.layout.scrollY;
		}
		var ox = (this.runtime.original_width / 2);
		var oy = (this.runtime.original_height / 2);
		var x = ((this.layout.scrollX - ox) * this.parallaxX) + ox;
		var y = ((this.layout.scrollY - oy) * this.parallaxY) + oy;
		var invScale = 1 / this.getScale();
		x -= (this.runtime.width * invScale) / 2;
		y -= (this.runtime.height * invScale) / 2;
		x = (ptx - x) / invScale;
		y = (pty - y) / invScale;
		var isiOSRetina = (!this.runtime.isDomFree && this.runtime.useiOSRetina && this.runtime.isiOS);
		var multiplier = this.runtime.devicePixelRatio;
		if (isiOSRetina && this.runtime.fullscreen_mode > 0)
		{
			x /= multiplier;
			y /= multiplier;
		}
		return getx ? x : y;
	};
	Layer.prototype.saveToJSON = function ()
	{
		var i, len, et;
		var o = {
			"s": this.scale,
			"a": this.angle,
			"vl": this.viewLeft,
			"vt": this.viewTop,
			"vr": this.viewRight,
			"vb": this.viewBottom,
			"v": this.visible,
			"bc": this.background_color,
			"t": this.transparent,
			"px": this.parallaxX,
			"py": this.parallaxY,
			"o": this.opacity,
			"zr": this.zoomRate,
			"fx": [],
			"instances": []
		};
		for (i = 0, len = this.effect_types.length; i < len; i++)
		{
			et = this.effect_types[i];
			o["fx"].push({"name": et.name, "active": et.active, "params": this.effect_params[et.index] });
		}
		return o;
	};
	function sortInstanceByZIndex(a, b)
	{
		return a.zindex - b.zindex;
	};
	Layer.prototype.loadFromJSON = function (o)
	{
		var i, len, p, inst, fx;
		this.scale = o["s"];
		this.angle = o["a"];
		this.viewLeft = o["vl"];
		this.viewTop = o["vt"];
		this.viewRight = o["vr"];
		this.viewBottom = o["vb"];
		this.visible = o["v"];
		this.background_color = o["bc"];
		this.transparent = o["t"];
		this.parallaxX = o["px"];
		this.parallaxY = o["py"];
		this.opacity = o["o"];
		this.zoomRate = o["zr"];
		var ofx = o["fx"];
		for (i = 0, len = ofx.length; i < len; i++)
		{
			fx = this.getEffectByName(ofx[i]["name"]);
			if (!fx)
				continue;		// must've gone missing
			fx.active = ofx[i]["active"];
			this.effect_params[fx.index] = ofx[i]["params"];
		}
		this.updateActiveEffects();
		this.instances.sort(sortInstanceByZIndex);
		this.zindices_stale = true;
	};
	cr.layer = Layer;
}());
;
(function()
{
	var allUniqueSolModifiers = [];
	function testSolsMatch(arr1, arr2)
	{
		var i, len = arr1.length;
		switch (len) {
		case 0:
			return true;
		case 1:
			return arr1[0] === arr2[0];
		case 2:
			return arr1[0] === arr2[0] && arr1[1] === arr2[1];
		default:
			for (i = 0; i < len; i++)
			{
				if (arr1[i] !== arr2[i])
					return false;
			}
			return true;
		}
	};
	function solArraySorter(t1, t2)
	{
		return t1.index - t2.index;
	};
	function findMatchingSolModifier(arr)
	{
		var i, len, u, temp, subarr;
		if (arr.length === 2)
		{
			if (arr[0].index > arr[1].index)
			{
				temp = arr[0];
				arr[0] = arr[1];
				arr[1] = temp;
			}
		}
		else if (arr.length > 2)
			arr.sort(solArraySorter);		// so testSolsMatch compares in same order
		if (arr.length >= allUniqueSolModifiers.length)
			allUniqueSolModifiers.length = arr.length + 1;
		if (!allUniqueSolModifiers[arr.length])
			allUniqueSolModifiers[arr.length] = [];
		subarr = allUniqueSolModifiers[arr.length];
		for (i = 0, len = subarr.length; i < len; i++)
		{
			u = subarr[i];
			if (testSolsMatch(arr, u))
				return u;
		}
		subarr.push(arr);
		return arr;
	};
	function EventSheet(runtime, m)
	{
		this.runtime = runtime;
		this.triggers = {};
		this.fasttriggers = {};
        this.hasRun = false;
        this.includes = new cr.ObjectSet(); // all event sheets included by this sheet, at first-level indirection only
		this.name = m[0];
		var em = m[1];		// events model
		this.events = [];       // triggers won't make it to this array
		var i, len;
		for (i = 0, len = em.length; i < len; i++)
			this.init_event(em[i], null, this.events);
	};
    EventSheet.prototype.toString = function ()
    {
        return this.name;
    };
	EventSheet.prototype.init_event = function (m, parent, nontriggers)
	{
		switch (m[0]) {
		case 0:	// event block
		{
			var block = new cr.eventblock(this, parent, m);
			cr.seal(block);
			if (block.orblock)
			{
				nontriggers.push(block);
				var i, len;
				for (i = 0, len = block.conditions.length; i < len; i++)
				{
					if (block.conditions[i].trigger)
						this.init_trigger(block, i);
				}
			}
			else
			{
				if (block.is_trigger())
					this.init_trigger(block, 0);
				else
					nontriggers.push(block);
			}
			break;
		}
		case 1: // variable
		{
			var v = new cr.eventvariable(this, parent, m);
			cr.seal(v);
			nontriggers.push(v);
			break;
		}
        case 2:	// include
        {
            var inc = new cr.eventinclude(this, parent, m);
			cr.seal(inc);
            nontriggers.push(inc);
			break;
        }
		default:
;
		}
	};
	EventSheet.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			this.events[i].postInit(i < len - 1 && this.events[i + 1].is_else_block);
		}
	};
	EventSheet.prototype.run = function ()
	{
        this.hasRun = true;
		this.runtime.isRunningEvents = true;
		var i, len;
		for (i = 0, len = this.events.length; i < len; i++)
		{
			var ev = this.events[i];
			ev.run();
			this.runtime.clearSol(ev.solModifiers);
			if (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length)
				this.runtime.ClearDeathRow();
		}
		this.runtime.isRunningEvents = false;
	};
	EventSheet.prototype.init_trigger = function (trig, index)
	{
		if (!trig.orblock)
			this.runtime.triggers_to_postinit.push(trig);	// needs to be postInit'd later
		var i, len;
		var cnd = trig.conditions[index];
		var type_name;
		if (cnd.type)
			type_name = cnd.type.name;
		else
			type_name = "system";
		var fasttrigger = cnd.fasttrigger;
		var triggers = (fasttrigger ? this.fasttriggers : this.triggers);
		if (!triggers[type_name])
			triggers[type_name] = [];
		var obj_entry = triggers[type_name];
		var method = cnd.func;
		if (fasttrigger)
		{
			if (!cnd.parameters.length)				// no parameters
				return;
			var firstparam = cnd.parameters[0];
			if (firstparam.type !== 1 ||			// not a string param
				firstparam.expression.type !== 2)	// not a string literal node
			{
				return;
			}
			var fastevs;
			var firstvalue = firstparam.expression.value.toLowerCase();
			var i, len;
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					fastevs = obj_entry[i].evs;
					if (!fastevs[firstvalue])
						fastevs[firstvalue] = [[trig, index]];
					else
						fastevs[firstvalue].push([trig, index]);
					return;
				}
			}
			fastevs = {};
			fastevs[firstvalue] = [[trig, index]];
			obj_entry.push({ method: method, evs: fastevs });
		}
		else
		{
			for (i = 0, len = obj_entry.length; i < len; i++)
			{
				if (obj_entry[i].method == method)
				{
					obj_entry[i].evs.push([trig, index]);
					return;
				}
			}
			obj_entry.push({ method: method, evs: [[trig, index]]});
		}
	};
	cr.eventsheet = EventSheet;
	function Selection(type)
	{
		this.type = type;
		this.instances = [];        // subset of picked instances
		this.else_instances = [];	// subset of unpicked instances
		this.select_all = true;
	};
	Selection.prototype.hasObjects = function ()
	{
		if (this.select_all)
			return this.type.instances.length;
		else
			return this.instances.length;
	};
	Selection.prototype.getObjects = function ()
	{
		if (this.select_all)
			return this.type.instances;
		else
			return this.instances;
	};
	/*
	Selection.prototype.ensure_picked = function (inst, skip_siblings)
	{
		var i, len;
		var orblock = inst.runtime.getCurrentEventStack().current_event.orblock;
		if (this.select_all)
		{
			this.select_all = false;
			if (orblock)
			{
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				cr.arrayFindRemove(this.else_instances, inst);
			}
			this.instances.length = 1;
			this.instances[0] = inst;
		}
		else
		{
			if (orblock)
			{
				i = this.else_instances.indexOf(inst);
				if (i !== -1)
				{
					this.instances.push(this.else_instances[i]);
					this.else_instances.splice(i, 1);
				}
			}
			else
			{
				if (this.instances.indexOf(inst) === -1)
					this.instances.push(inst);
			}
		}
		if (!skip_siblings)
		{
		}
	};
	*/
	Selection.prototype.pick_one = function (inst)
	{
		if (!inst)
			return;
		if (inst.runtime.getCurrentEventStack().current_event.orblock)
		{
			if (this.select_all)
			{
				this.instances.length = 0;
				cr.shallowAssignArray(this.else_instances, inst.type.instances);
				this.select_all = false;
			}
			var i = this.else_instances.indexOf(inst);
			if (i !== -1)
			{
				this.instances.push(this.else_instances[i]);
				this.else_instances.splice(i, 1);
			}
		}
		else
		{
			this.select_all = false;
			this.instances.length = 1;
			this.instances[0] = inst;
		}
	};
	cr.selection = Selection;
	function EventBlock(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.solModifiersIncludingParents = [];
		this.solWriterAfterCnds = false;	// block does not change SOL after running its conditions
		this.group = false;					// is group of events
		this.initially_activated = false;	// if a group, is active on startup
		this.toplevelevent = false;			// is an event block parented only by a top-level group
		this.toplevelgroup = false;			// is parented only by other groups or is top-level (i.e. not in a subevent)
		this.has_else_block = false;		// is followed by else
;
		this.conditions = [];
		this.actions = [];
		this.subevents = [];
        if (m[1])
        {
			this.group_name = m[1][1].toLowerCase();
			this.group = true;
			this.initially_activated = !!m[1][0];
			this.runtime.allGroups.push(this);
            this.runtime.activeGroups[(/*this.sheet.name + "|" + */this.group_name).toLowerCase()] = this.initially_activated;
        }
		else
		{
			this.group_name = "";
			this.group = false;
			this.initially_activated = false;
		}
		this.orblock = m[2];
		this.sid = m[3];
		if (!this.group)
			this.runtime.blocksBySid[this.sid.toString()] = this;
		var i, len;
		var cm = m[4];
		for (i = 0, len = cm.length; i < len; i++)
		{
			var cnd = new cr.condition(this, cm[i]);
			cr.seal(cnd);
			this.conditions.push(cnd);
			/*
			if (cnd.is_logical())
				this.is_logical = true;
			if (cnd.type && !cnd.type.plugin.singleglobal && this.cndReferences.indexOf(cnd.type) === -1)
				this.cndReferences.push(cnd.type);
			*/
			this.addSolModifier(cnd.type);
		}
		var am = m[5];
		for (i = 0, len = am.length; i < len; i++)
		{
			var act = new cr.action(this, am[i]);
			cr.seal(act);
			this.actions.push(act);
		}
		if (m.length === 7)
		{
			var em = m[6];
			for (i = 0, len = em.length; i < len; i++)
				this.sheet.init_event(em[i], this, this.subevents);
		}
		this.is_else_block = false;
		if (this.conditions.length)
			this.is_else_block = (this.conditions[0].type == null && this.conditions[0].func == cr.system_object.prototype.cnds.Else);
	};
	EventBlock.prototype.postInit = function (hasElse/*, prevBlock_*/)
	{
		var i, len;
		var p = this.parent;
		if (this.group)
		{
			this.toplevelgroup = true;
			while (p)
			{
				if (!p.group)
				{
					this.toplevelgroup = false;
					break;
				}
				p = p.parent;
			}
		}
		this.toplevelevent = !this.is_trigger() && (!this.parent || (this.parent.group && this.parent.toplevelgroup));
		this.has_else_block = !!hasElse;
		this.solModifiersIncludingParents = this.solModifiers.slice(0);
		p = this.parent;
		while (p)
		{
			for (i = 0, len = p.solModifiers.length; i < len; i++)
				this.addParentSolModifier(p.solModifiers[i]);
			p = p.parent;
		}
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
		this.solModifiersIncludingParents = findMatchingSolModifier(this.solModifiersIncludingParents);
		var i, len/*, s*/;
		for (i = 0, len = this.conditions.length; i < len; i++)
			this.conditions[i].postInit();
		for (i = 0, len = this.actions.length; i < len; i++)
			this.actions[i].postInit();
		for (i = 0, len = this.subevents.length; i < len; i++)
		{
			this.subevents[i].postInit(i < len - 1 && this.subevents[i + 1].is_else_block);
		}
		/*
		if (this.is_else_block && this.prev_block)
		{
			for (i = 0, len = this.prev_block.solModifiers.length; i < len; i++)
			{
				s = this.prev_block.solModifiers[i];
				if (this.solModifiers.indexOf(s) === -1)
					this.solModifiers.push(s);
			}
		}
		*/
	}
	function addSolModifierToList(type, arr)
	{
		var i, len, t;
		if (!type)
			return;
		if (arr.indexOf(type) === -1)
			arr.push(type);
		if (type.is_contained)
		{
			for (i = 0, len = type.container.length; i < len; i++)
			{
				t = type.container[i];
				if (type === t)
					continue;		// already handled
				if (arr.indexOf(t) === -1)
					arr.push(t);
			}
		}
	};
	EventBlock.prototype.addSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiers);
	};
	EventBlock.prototype.addParentSolModifier = function (type)
	{
		addSolModifierToList(type, this.solModifiersIncludingParents);
	};
	EventBlock.prototype.setSolWriterAfterCnds = function ()
	{
		this.solWriterAfterCnds = true;
		if (this.parent)
			this.parent.setSolWriterAfterCnds();
	};
	EventBlock.prototype.is_trigger = function ()
	{
		if (!this.conditions.length)    // no conditions
			return false;
		else
			return this.conditions[0].trigger;
	};
	EventBlock.prototype.run = function ()
	{
		var i, len, any_true = false/*, bail = false*/;
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		if (!this.is_else_block)
			evinfo.else_branch_ran = false;
		if (this.orblock)
		{
			if (this.conditions.length === 0)
				any_true = true;		// be sure to run if empty block
			for (evinfo.cndindex = 0, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (this.conditions[evinfo.cndindex].trigger)		// skip triggers when running OR block
					continue;
				if (this.conditions[evinfo.cndindex].run())			// make sure all conditions run and run if any were true
					any_true = true;
			}
			evinfo.last_event_true = any_true;
			if (any_true)
				this.run_actions_and_subevents();
		}
		else
		{
			for (evinfo.cndindex = 0, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (!this.conditions[evinfo.cndindex].run())    // condition failed
				{
					evinfo.last_event_true = false;
					if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
						this.runtime.ClearDeathRow();
					return;										// bail out now
				}
			}
			evinfo.last_event_true = true;
			this.run_actions_and_subevents();
		}
		if (evinfo.last_event_true && this.has_else_block)
			evinfo.else_branch_ran = true;
		if (this.toplevelevent && (!this.runtime.deathRow.isEmpty() || this.runtime.createRow.length))
			this.runtime.ClearDeathRow();
	};
	EventBlock.prototype.run_orblocktrigger = function (index)
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		if (this.conditions[index].run())
		{
			this.run_actions_and_subevents();
		}
	};
	EventBlock.prototype.run_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (evinfo.actindex = 0, len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.resume_actions_and_subevents = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		var len;
		for (len = this.actions.length; evinfo.actindex < len; evinfo.actindex++)
		{
			if (this.actions[evinfo.actindex].run())
				return;
		}
		this.run_subevents();
	};
	EventBlock.prototype.run_subevents = function ()
	{
		if (!this.subevents.length)
			return;
		var i, len, subev, pushpop/*, skipped_pop = false, pop_modifiers = null*/;
		var last = this.subevents.length - 1;
		this.runtime.pushEventStack(this);
		if (this.solWriterAfterCnds)
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				subev = this.subevents[i];
				pushpop = (!this.toplevelgroup || (!this.group && i < last));
				if (pushpop)
					this.runtime.pushCopySol(subev.solModifiers);
				subev.run();
				if (pushpop)
					this.runtime.popSol(subev.solModifiers);
				else
					this.runtime.clearSol(subev.solModifiers);
			}
		}
		else
		{
			for (i = 0, len = this.subevents.length; i < len; i++)
			{
				this.subevents[i].run();
			}
		}
		this.runtime.popEventStack();
	};
	EventBlock.prototype.run_pretrigger = function ()
	{
		var evinfo = this.runtime.getCurrentEventStack();
		evinfo.current_event = this;
		var any_true = false;
		var i, len;
		for (evinfo.cndindex = 0, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
		{
;
			if (this.conditions[evinfo.cndindex].run())
				any_true = true;
			else if (!this.orblock)			// condition failed (let OR blocks run all conditions anyway)
				return false;               // bail out
		}
		return this.orblock ? any_true : true;
	};
	EventBlock.prototype.retrigger = function ()
	{
		this.runtime.execcount++;
		var prevcndindex = this.runtime.getCurrentEventStack().cndindex;
		var len;
		var evinfo = this.runtime.pushEventStack(this);
		if (!this.orblock)
		{
			for (evinfo.cndindex = prevcndindex + 1, len = this.conditions.length; evinfo.cndindex < len; evinfo.cndindex++)
			{
				if (!this.conditions[evinfo.cndindex].run())    // condition failed
				{
					this.runtime.popEventStack();               // moving up level of recursion
					return false;                               // bail out
				}
			}
		}
		this.run_actions_and_subevents();
		this.runtime.popEventStack();
		return true;		// ran an iteration
	};
	cr.eventblock = EventBlock;
	function Condition(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.func = m[1];
;
		this.trigger = (m[3] > 0);
		this.fasttrigger = (m[3] === 2);
		this.looping = m[4];
		this.inverted = m[5];
		this.isstatic = m[6];
		this.sid = m[7];
		this.runtime.cndsBySid[this.sid.toString()] = this;
		if (m[0] === -1)		// system object
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			if (this.isstatic)
				this.run = this.run_static;
			else
				this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
			if (this.block.parent)
				this.block.parent.setSolWriterAfterCnds();
		}
		if (this.fasttrigger)
			this.run = this.run_true;
		if (m.length === 9)
		{
			var i, len;
			var em = m[8];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Condition.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.parameters[i].postInit();
	};
	/*
	Condition.prototype.is_logical = function ()
	{
		return !this.type || this.type.plugin.singleglobal;
	};
	*/
	Condition.prototype.run_true = function ()
	{
		return true;
	};
	Condition.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return cr.xor(this.func.apply(this.runtime.system, this.results), this.inverted);
	};
	Condition.prototype.run_static = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		var ret = this.func.apply(this.type, this.results);
		this.type.applySolToContainer();
		return ret;
	};
	Condition.prototype.run_object = function ()
	{
		var i, j, leni, lenj, ret, met, inst, s, sol2;
		var sol = this.type.getCurrentSol();
		var is_orblock = this.block.orblock && !this.trigger;		// triggers in OR blocks need to work normally
		var offset = 0;
		var is_contained = this.type.is_contained;
		if (sol.select_all) {
			sol.instances.length = 0;       // clear contents
			sol.else_instances.length = 0;
			for (i = 0, leni = this.type.instances.length; i < leni; i++)
			{
				inst = this.type.instances[i];
;
				for (j = 0, lenj = this.parameters.length; j < lenj; j++)
					this.results[j] = this.parameters[j].get(i);        // default SOL index is current object
				if (this.beh_index > -1)
				{
					if (this.type.is_family)
					{
						offset = inst.type.family_beh_map[this.type.family_index];
					}
					ret = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
				}
				else
					ret = this.func.apply(inst, this.results);
				met = cr.xor(ret, this.inverted);
				if (met)
					sol.instances.push(inst);
				else if (is_orblock)					// in OR blocks, keep the instances not meeting the condition for subsequent testing
					sol.else_instances.push(inst);
			}
			if (this.type.finish)
				this.type.finish(true);
			sol.select_all = false;
			this.type.applySolToContainer();
			return sol.hasObjects();
		}
		else {
			var k = 0;
			var arr = (is_orblock ? sol.else_instances : sol.instances);
			var any_true = false;
			for (i = 0, leni = arr.length; i < leni; i++)
			{
				inst = arr[i];
;
				for (j = 0, lenj = this.parameters.length; j < lenj; j++)
					this.results[j] = this.parameters[j].get(i);        // default SOL index is current object
				if (this.beh_index > -1)
				{
					if (this.type.is_family)
					{
						offset = inst.type.family_beh_map[this.type.family_index];
					}
					ret = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
				}
				else
					ret = this.func.apply(inst, this.results);
				if (cr.xor(ret, this.inverted))
				{
					any_true = true;
					if (is_orblock)
					{
						sol.instances.push(inst);
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances.push(s);
							}
						}
					}
					else
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().instances[k] = s;
							}
						}
						k++;
					}
				}
				else
				{
					if (is_orblock)
					{
						arr[k] = inst;
						if (is_contained)
						{
							for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
							{
								s = inst.siblings[j];
								s.type.getCurrentSol().else_instances[k] = s;
							}
						}
						k++;
					}
				}
			}
			arr.length = k;
			if (is_contained)
			{
				for (i = 0, leni = this.type.container.length; i < leni; i++)
				{
					sol2 = this.type.container[i].getCurrentSol();
					if (is_orblock)
						sol2.else_instances.length = k;
					else
						sol2.instances.length = k;
				}
			}
			var pick_in_finish = any_true;		// don't pick in finish() if we're only doing the logic test below
			if (is_orblock && !any_true)
			{
				for (i = 0, leni = sol.instances.length; i < leni; i++)
				{
					inst = sol.instances[i];
					for (j = 0, lenj = this.parameters.length; j < lenj; j++)
						this.results[j] = this.parameters[j].get(i);
					if (this.beh_index > -1)
						ret = this.func.apply(inst.behavior_insts[this.beh_index], this.results);
					else
						ret = this.func.apply(inst, this.results);
					if (cr.xor(ret, this.inverted))
					{
						any_true = true;
						break;		// got our flag, don't need to test any more
					}
				}
			}
			if (this.type.finish)
				this.type.finish(pick_in_finish || is_orblock);
			return is_orblock ? any_true : sol.hasObjects();
		}
	};
	cr.condition = Condition;
	function Action(block, m)
	{
		this.block = block;
		this.sheet = block.sheet;
		this.runtime = block.runtime;
		this.parameters = [];
		this.results = [];
		this.extra = {};		// for plugins to stow away some custom info
		this.func = m[1];
;
		if (m[0] === -1)	// system
		{
			this.type = null;
			this.run = this.run_system;
			this.behaviortype = null;
			this.beh_index = -1;
		}
		else
		{
			this.type = this.runtime.types_by_index[m[0]];
;
			this.run = this.run_object;
			if (m[2])
			{
				this.behaviortype = this.type.getBehaviorByName(m[2]);
;
				this.beh_index = this.type.getBehaviorIndexByName(m[2]);
;
			}
			else
			{
				this.behaviortype = null;
				this.beh_index = -1;
			}
		}
		this.sid = m[3];
		this.runtime.actsBySid[this.sid.toString()] = this;
		if (m.length === 5)
		{
			var i, len;
			var em = m[4];
			for (i = 0, len = em.length; i < len; i++)
			{
				var param = new cr.parameter(this, em[i]);
				cr.seal(param);
				this.parameters.push(param);
			}
			this.results.length = em.length;
		}
	};
	Action.prototype.postInit = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.parameters[i].postInit();
	};
	Action.prototype.run_system = function ()
	{
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
			this.results[i] = this.parameters[i].get();
		return this.func.apply(this.runtime.system, this.results);
	};
	Action.prototype.run_object = function ()
	{
		var instances = this.type.getCurrentSol().getObjects();
		var i, j, leni, lenj, inst;
		for (i = 0, leni = instances.length; i < leni; i++)
		{
			inst = instances[i];
			for (j = 0, lenj = this.parameters.length; j < lenj; j++)
				this.results[j] = this.parameters[j].get(i);    // pass i to use as default SOL index
			if (this.beh_index > -1)
			{
				var offset = 0;
				if (this.type.is_family)
				{
					offset = inst.type.family_beh_map[this.type.family_index];
				}
				this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
			}
			else
				this.func.apply(inst, this.results);
		}
		return false;
	};
	cr.action = Action;
	var tempValues = [];
	var tempValuesPtr = -1;
	function Parameter(owner, m)
	{
		this.owner = owner;
		this.block = owner.block;
		this.sheet = owner.sheet;
		this.runtime = owner.runtime;
		this.type = m[0];
		this.expression = null;
		this.solindex = 0;
		this.combosel = 0;
		this.layout = null;
		this.key = 0;
		this.object = null;
		this.index = 0;
		this.varname = null;
		this.eventvar = null;
		this.fileinfo = null;
		this.subparams = null;
		this.variadicret = null;
		var i, len, param;
		switch (m[0])
		{
			case 0:		// number
			case 7:		// any
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp;
				break;
			case 1:		// string
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_exp_str;
				break;
			case 5:		// layer
				this.expression = new cr.expNode(this, m[1]);
				this.solindex = 0;
				this.get = this.get_layer;
				break;
			case 3:		// combo
			case 8:		// cmp
				this.combosel = m[1];
				this.get = this.get_combosel;
				break;
			case 6:		// layout
				this.layout = this.runtime.layouts[m[1]];
;
				this.get = this.get_layout;
				break;
			case 9:		// keyb
				this.key = m[1];
				this.get = this.get_key;
				break;
			case 4:		// object
				this.object = this.runtime.types_by_index[m[1]];
;
				this.get = this.get_object;
				this.block.addSolModifier(this.object);
				if (this.owner instanceof cr.action)
					this.block.setSolWriterAfterCnds();
				else if (this.block.parent)
					this.block.parent.setSolWriterAfterCnds();
				break;
			case 10:	// instvar
				this.index = m[1];
				if (owner.type.is_family)
					this.get = this.get_familyvar;
				else
					this.get = this.get_instvar;
				break;
			case 11:	// eventvar
				this.varname = m[1];
				this.eventvar = null;
				this.get = this.get_eventvar;
				break;
			case 2:		// audiofile	["name", ismusic]
			case 12:	// fileinfo		"name"
				this.fileinfo = m[1];
				this.get = this.get_audiofile;
				break;
			case 13:	// variadic
				this.get = this.get_variadic;
				this.subparams = [];
				this.variadicret = [];
				for (i = 1, len = m.length; i < len; i++)
				{
					param = new cr.parameter(this.owner, m[i]);
					cr.seal(param);
					this.subparams.push(param);
					this.variadicret.push(0);
				}
				break;
			default:
;
		}
	};
	Parameter.prototype.postInit = function ()
	{
		var i, len;
		if (this.type === 11)		// eventvar
		{
			this.eventvar = this.runtime.getEventVariableByName(this.varname, this.block.parent);
;
		}
		else if (this.type === 13)	// variadic, postInit all sub-params
		{
			for (i = 0, len = this.subparams.length; i < len; i++)
				this.subparams[i].postInit();
		}
		if (this.expression)
			this.expression.postInit();
	};
	Parameter.prototype.pushTempValue = function ()
	{
		tempValuesPtr++;
		if (tempValues.length === tempValuesPtr)
			tempValues.push(new cr.expvalue());
		return tempValues[tempValuesPtr];
	};
	Parameter.prototype.popTempValue = function ()
	{
		tempValuesPtr--;
	};
	Parameter.prototype.get_exp = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		return temp.data;      			// return actual JS value, not expvalue
	};
	Parameter.prototype.get_exp_str = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (cr.is_string(temp.data))
			return temp.data;
		else
			return "";
	};
	Parameter.prototype.get_object = function ()
	{
		return this.object;
	};
	Parameter.prototype.get_combosel = function ()
	{
		return this.combosel;
	};
	Parameter.prototype.get_layer = function (solindex)
	{
		this.solindex = solindex || 0;   // default SOL index to use
		var temp = this.pushTempValue();
		this.expression.get(temp);
		this.popTempValue();
		if (temp.is_number())
			return this.runtime.getLayerByNumber(temp.data);
		else
			return this.runtime.getLayerByName(temp.data);
	}
	Parameter.prototype.get_layout = function ()
	{
		return this.layout;
	};
	Parameter.prototype.get_key = function ()
	{
		return this.key;
	};
	Parameter.prototype.get_instvar = function ()
	{
		return this.index;
	};
	Parameter.prototype.get_familyvar = function (solindex)
	{
		var familytype = this.owner.type;
		var realtype = null;
		var sol = familytype.getCurrentSol();
		var objs = sol.getObjects();
		if (objs.length)
			realtype = objs[solindex % objs.length].type;
		else
		{
;
			realtype = sol.else_instances[solindex % sol.else_instances.length].type;
		}
		return this.index + realtype.family_var_map[familytype.family_index];
	};
	Parameter.prototype.get_eventvar = function ()
	{
		return this.eventvar;
	};
	Parameter.prototype.get_audiofile = function ()
	{
		return this.fileinfo;
	};
	Parameter.prototype.get_variadic = function ()
	{
		var i, len;
		for (i = 0, len = this.subparams.length; i < len; i++)
		{
			this.variadicret[i] = this.subparams[i].get();
		}
		return this.variadicret;
	};
	cr.parameter = Parameter;
	function EventVariable(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.name = m[1];
		this.vartype = m[2];
		this.initial = m[3];
		this.is_static = !!m[4];
		this.is_constant = !!m[5];
		this.sid = m[6];
		this.runtime.varsBySid[this.sid.toString()] = this;
		this.data = this.initial;	// note: also stored in event stack frame for local nonstatic nonconst vars
		if (this.parent)			// local var
		{
			if (this.is_static || this.is_constant)
				this.localIndex = -1;
			else
				this.localIndex = this.runtime.stackLocalCount++;
		}
		else						// global var
		{
			this.localIndex = -1;
			this.runtime.all_global_vars.push(this);
		}
	};
	EventVariable.prototype.postInit = function ()
	{
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventVariable.prototype.setValue = function (x)
	{
;
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs)
			this.data = x;
		else	// local nonstatic variable: use event stack to keep value at this level of recursion
		{
			if (this.localIndex >= lvs.length)
				lvs.length = this.localIndex + 1;
			lvs[this.localIndex] = x;
		}
	};
	EventVariable.prototype.getValue = function ()
	{
		var lvs = this.runtime.getCurrentLocalVarStack();
		if (!this.parent || this.is_static || !lvs || this.is_constant)
			return this.data;
		else	// local nonstatic variable
		{
			if (this.localIndex >= lvs.length)
			{
;
				return this.initial;
			}
			if (typeof lvs[this.localIndex] === "undefined")
			{
;
				return this.initial;
			}
			return lvs[this.localIndex];
		}
	};
	EventVariable.prototype.run = function ()
	{
		if (this.parent && !this.is_static && !this.is_constant)
			this.setValue(this.initial);
	};
	cr.eventvariable = EventVariable;
	function EventInclude(sheet, parent, m)
	{
		this.sheet = sheet;
		this.parent = parent;
		this.runtime = sheet.runtime;
		this.solModifiers = [];
		this.include_sheet = null;		// determined in postInit
		this.include_sheet_name = m[1];
	};
	EventInclude.prototype.postInit = function ()
	{
        this.include_sheet = this.runtime.eventsheets[this.include_sheet_name];
;
;
        this.sheet.includes.add(this.include_sheet);
		this.solModifiers = findMatchingSolModifier(this.solModifiers);
	};
	EventInclude.prototype.run = function ()
	{
		if (this.parent)
			this.runtime.pushCleanSol(this.runtime.types_by_index);
        if (!this.include_sheet.hasRun)
            this.include_sheet.run();
        if (this.parent)
            this.runtime.popSol(this.runtime.types_by_index);
	};
	cr.eventinclude = EventInclude;
	function EventStackFrame()
	{
		this.temp_parents_arr = [];
		this.reset(null);
		cr.seal(this);
	};
	EventStackFrame.prototype.reset = function (cur_event)
	{
		this.current_event = cur_event;
		this.cndindex = 0;
		this.actindex = 0;
		this.temp_parents_arr.length = 0;
		this.last_event_true = false;
		this.else_branch_ran = false;
	};
	EventStackFrame.prototype.isModifierAfterCnds = function ()
	{
		if (this.current_event.solWriterAfterCnds)
			return true;
		if (this.cndindex < this.current_event.conditions.length - 1)
			return !!this.current_event.solModifiers.length;
		return false;
	};
	cr.eventStackFrame = EventStackFrame;
}());
(function()
{
	function ExpNode(owner_, m)
	{
		this.owner = owner_;
		this.runtime = owner_.runtime;
		this.type = m[0];
;
		this.get = [this.eval_int,
					this.eval_float,
					this.eval_string,
					this.eval_unaryminus,
					this.eval_add,
					this.eval_subtract,
					this.eval_multiply,
					this.eval_divide,
					this.eval_mod,
					this.eval_power,
					this.eval_and,
					this.eval_or,
					this.eval_equal,
					this.eval_notequal,
					this.eval_less,
					this.eval_lessequal,
					this.eval_greater,
					this.eval_greaterequal,
					this.eval_conditional,
					this.eval_system_exp,
					this.eval_object_behavior_exp,
					this.eval_instvar_exp,
					this.eval_object_behavior_exp,
					this.eval_eventvar_exp][this.type];
		var paramsModel = null;
		this.value = null;
		this.first = null;
		this.second = null;
		this.third = null;
		this.func = null;
		this.results = null;
		this.parameters = null;
		this.object_type = null;
		this.beh_index = -1;
		this.instance_expr = null;
		this.varindex = -1;
		this.behavior_type = null;
		this.varname = null;
		this.eventvar = null;
		this.return_string = false;
		switch (this.type) {
		case 0:		// int
		case 1:		// float
		case 2:		// string
			this.value = m[1];
			break;
		case 3:		// unaryminus
			this.first = new cr.expNode(owner_, m[1]);
			break;
		case 18:	// conditional
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
			this.third = new cr.expNode(owner_, m[3]);
			break;
		case 19:	// system_exp
			this.func = m[1];
;
			this.results = [];
			this.parameters = [];
			if (m.length === 3)
			{
				paramsModel = m[2];
				this.results.length = paramsModel.length + 1;	// must also fit 'ret'
			}
			else
				this.results.length = 1;      // to fit 'ret'
			break;
		case 20:	// object_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.beh_index = -1;
			this.func = m[2];
			this.return_string = m[3];
			if (m[4])
				this.instance_expr = new cr.expNode(owner_, m[4]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 6)
			{
				paramsModel = m[5];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 21:		// instvar_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.return_string = m[2];
			if (m[3])
				this.instance_expr = new cr.expNode(owner_, m[3]);
			else
				this.instance_expr = null;
			this.varindex = m[4];
			break;
		case 22:		// behavior_exp
			this.object_type = this.runtime.types_by_index[m[1]];
;
			this.behavior_type = this.object_type.getBehaviorByName(m[2]);
;
			this.beh_index = this.object_type.getBehaviorIndexByName(m[2]);
			this.func = m[3];
			this.return_string = m[4];
			if (m[5])
				this.instance_expr = new cr.expNode(owner_, m[5]);
			else
				this.instance_expr = null;
			this.results = [];
			this.parameters = [];
			if (m.length === 7)
			{
				paramsModel = m[6];
				this.results.length = paramsModel.length + 1;
			}
			else
				this.results.length = 1;	// to fit 'ret'
			break;
		case 23:		// eventvar_exp
			this.varname = m[1];
			this.eventvar = null;	// assigned in postInit
			break;
		}
		if (this.type >= 4 && this.type <= 17)
		{
			this.first = new cr.expNode(owner_, m[1]);
			this.second = new cr.expNode(owner_, m[2]);
		}
		if (paramsModel)
		{
			var i, len;
			for (i = 0, len = paramsModel.length; i < len; i++)
				this.parameters.push(new cr.expNode(owner_, paramsModel[i]));
		}
		cr.seal(this);
	};
	ExpNode.prototype.postInit = function ()
	{
		if (this.type === 23)	// eventvar_exp
		{
			this.eventvar = this.owner.runtime.getEventVariableByName(this.varname, this.owner.block.parent);
;
		}
		if (this.first)
			this.first.postInit();
		if (this.second)
			this.second.postInit();
		if (this.third)
			this.third.postInit();
		if (this.instance_expr)
			this.instance_expr.postInit();
		if (this.parameters)
		{
			var i, len;
			for (i = 0, len = this.parameters.length; i < len; i++)
				this.parameters[i].postInit();
		}
	};
	ExpNode.prototype.eval_system_exp = function (ret)
	{
		this.results[0] = ret;
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++)
		{
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		this.owner.popTempValue();
		this.func.apply(this.runtime.system, this.results);
	};
	ExpNode.prototype.eval_object_behavior_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		this.results[0] = ret;
		ret.object_class = this.object_type;		// so expression can access family type if need be
		var temp = this.owner.pushTempValue();
		var i, len;
		for (i = 0, len = this.parameters.length; i < len; i++) {
			this.parameters[i].get(temp);
			this.results[i + 1] = temp.data;   // passing actual javascript value as argument instead of expvalue
		}
		var index = this.owner.solindex;
		if (this.instance_expr) {
			this.instance_expr.get(temp);
			if (temp.is_number()) {
				index = temp.data;
				instances = this.object_type.instances;    // pick from all instances, not SOL
			}
		}
		this.owner.popTempValue();
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var returned_val;
		var inst = instances[index];
		if (this.beh_index > -1)
		{
			var offset = 0;
			if (this.object_type.is_family)
			{
				offset = inst.type.family_beh_map[this.object_type.family_index];
			}
			returned_val = this.func.apply(inst.behavior_insts[this.beh_index + offset], this.results);
		}
		else
			returned_val = this.func.apply(inst, this.results);
;
	};
	ExpNode.prototype.eval_instvar_exp = function (ret)
	{
		var sol = this.object_type.getCurrentSol();
		var instances = sol.getObjects();
		if (!instances.length)
		{
			if (sol.else_instances.length)
				instances = sol.else_instances;
			else
			{
				if (this.return_string)
					ret.set_string("");
				else
					ret.set_int(0);
				return;
			}
		}
		var index = this.owner.solindex;
		if (this.instance_expr)
		{
			var temp = this.owner.pushTempValue();
			this.instance_expr.get(temp);
			if (temp.is_number())
			{
				index = temp.data;
				var type_instances = this.object_type.instances;
				index %= type_instances.length;     // wraparound
				if (index < 0)                      // offset
					index += type_instances.length;
				var to_ret = type_instances[index].instance_vars[this.varindex];
				if (cr.is_string(to_ret))
					ret.set_string(to_ret);
				else
					ret.set_float(to_ret);
				this.owner.popTempValue();
				return;         // done
			}
			this.owner.popTempValue();
		}
		index %= instances.length;      // wraparound
		if (index < 0)
			index += instances.length;
		var inst = instances[index];
		var offset = 0;
		if (this.object_type.is_family)
		{
			offset = inst.type.family_var_map[this.object_type.family_index];
		}
		var to_ret = inst.instance_vars[this.varindex + offset];
		if (cr.is_string(to_ret))
			ret.set_string(to_ret);
		else
			ret.set_float(to_ret);
	};
	ExpNode.prototype.eval_int = function (ret)
	{
		ret.type = cr.exptype.Integer;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_float = function (ret)
	{
		ret.type = cr.exptype.Float;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_string = function (ret)
	{
		ret.type = cr.exptype.String;
		ret.data = this.value;
	};
	ExpNode.prototype.eval_unaryminus = function (ret)
	{
		this.first.get(ret);                // retrieve operand
		if (ret.is_number())
			ret.data = -ret.data;
	};
	ExpNode.prototype.eval_add = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data += temp.data;          // both operands numbers: add
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_subtract = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data -= temp.data;          // both operands numbers: subtract
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_multiply = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data *= temp.data;          // both operands numbers: multiply
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_divide = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data /= temp.data;          // both operands numbers: divide
			ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_mod = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data %= temp.data;          // both operands numbers: modulo
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_power = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			ret.data = Math.pow(ret.data, temp.data);   // both operands numbers: raise to power
			if (temp.is_float())
				ret.make_float();
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_and = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number())
		{
			if (temp.is_string())
			{
				ret.set_string(ret.data.toString() + temp.data);
			}
			else
			{
				if (ret.data && temp.data)
					ret.set_int(1);
				else
					ret.set_int(0);
			}
		}
		else if (ret.is_string())
		{
			if (temp.is_string())
				ret.data += temp.data;
			else
			{
				ret.data += (Math.round(temp.data * 1e10) / 1e10).toString();
			}
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_or = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		if (ret.is_number() && temp.is_number())
		{
			if (ret.data || temp.data)
				ret.set_int(1);
			else
				ret.set_int(0);
		}
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_conditional = function (ret)
	{
		this.first.get(ret);                // condition operand
		if (ret.data)                       // is true
			this.second.get(ret);           // evaluate second operand to ret
		else
			this.third.get(ret);            // evaluate third operand to ret
	};
	ExpNode.prototype.eval_equal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data === temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_notequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data !== temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_less = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data < temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_lessequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data <= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greater = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data > temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_greaterequal = function (ret)
	{
		this.first.get(ret);                // left operand
		var temp = this.owner.pushTempValue();
		this.second.get(temp);			// right operand
		ret.set_int(ret.data >= temp.data ? 1 : 0);
		this.owner.popTempValue();
	};
	ExpNode.prototype.eval_eventvar_exp = function (ret)
	{
		var val = this.eventvar.getValue();
		if (cr.is_number(val))
			ret.set_float(val);
		else
			ret.set_string(val);
	};
	cr.expNode = ExpNode;
	function ExpValue(type, data)
	{
		this.type = type || cr.exptype.Integer;
		this.data = data || 0;
		this.object_class = null;
;
;
;
		if (this.type == cr.exptype.Integer)
			this.data = Math.floor(this.data);
		cr.seal(this);
	};
	ExpValue.prototype.is_int = function ()
	{
		return this.type === cr.exptype.Integer;
	};
	ExpValue.prototype.is_float = function ()
	{
		return this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_number = function ()
	{
		return this.type === cr.exptype.Integer || this.type === cr.exptype.Float;
	};
	ExpValue.prototype.is_string = function ()
	{
		return this.type === cr.exptype.String;
	};
	ExpValue.prototype.make_int = function ()
	{
		if (!this.is_int())
		{
			if (this.is_float())
				this.data = Math.floor(this.data);      // truncate float
			else if (this.is_string())
				this.data = parseInt(this.data, 10);
			this.type = cr.exptype.Integer;
		}
	};
	ExpValue.prototype.make_float = function ()
	{
		if (!this.is_float())
		{
			if (this.is_string())
				this.data = parseFloat(this.data);
			this.type = cr.exptype.Float;
		}
	};
	ExpValue.prototype.make_string = function ()
	{
		if (!this.is_string())
		{
			this.data = this.data.toString();
			this.type = cr.exptype.String;
		}
	};
	ExpValue.prototype.set_int = function (val)
	{
;
		this.type = cr.exptype.Integer;
		this.data = Math.floor(val);
	};
	ExpValue.prototype.set_float = function (val)
	{
;
		this.type = cr.exptype.Float;
		this.data = val;
	};
	ExpValue.prototype.set_string = function (val)
	{
;
		this.type = cr.exptype.String;
		this.data = val;
	};
	ExpValue.prototype.set_any = function (val)
	{
		if (cr.is_number(val))
		{
			this.type = cr.exptype.Float;
			this.data = val;
		}
		else if (cr.is_string(val))
		{
			this.type = cr.exptype.String;
			this.data = val.toString();
		}
		else
		{
			this.type = cr.exptype.Integer;
			this.data = 0;
		}
	};
	cr.expvalue = ExpValue;
	cr.exptype = {
		Integer: 0,     // emulated; no native integer support in javascript
		Float: 1,
		String: 2
	};
}());
;
cr.system_object = function (runtime)
{
    this.runtime = runtime;
	this.waits = [];
};
cr.system_object.prototype.saveToJSON = function ()
{
	var o = {};
	var i, len, j, lenj, p, w, t, sobj;
	o["waits"] = [];
	var owaits = o["waits"];
	var waitobj;
	for (i = 0, len = this.waits.length; i < len; i++)
	{
		w = this.waits[i];
		waitobj = {
			"t": w.time,
			"ev": w.ev.sid,
			"sm": [],
			"sols": {}
		};
		if (w.ev.actions[w.actindex])
			waitobj["act"] = w.ev.actions[w.actindex].sid;
		for (j = 0, lenj = w.solModifiers.length; j < lenj; j++)
			waitobj["sm"].push(w.solModifiers[j].sid);
		for (p in w.sols)
		{
			if (w.sols.hasOwnProperty(p))
			{
				t = this.runtime.types_by_index[parseInt(p, 10)];
;
				sobj = {
					"sa": w.sols[p].sa,
					"insts": []
				};
				for (j = 0, lenj = w.sols[p].insts.length; j < lenj; j++)
					sobj["insts"].push(w.sols[p].insts[j].uid);
				waitobj["sols"][t.sid.toString()] = sobj;
			}
		}
		owaits.push(waitobj);
	}
	return o;
};
cr.system_object.prototype.loadFromJSON = function (o)
{
	var owaits = o["waits"];
	var i, len, j, lenj, p, w, addWait, e, aindex, t, savedsol, nusol, inst;
	this.waits.length = 0;
	for (i = 0, len = owaits.length; i < len; i++)
	{
		w = owaits[i];
		e = this.runtime.blocksBySid[w["ev"].toString()];
		if (!e)
			continue;	// event must've gone missing
		aindex = -1;
		for (j = 0, lenj = e.actions.length; j < lenj; j++)
		{
			if (e.actions[j].sid === w["act"])
			{
				aindex = j;
				break;
			}
		}
		if (aindex === -1)
			continue;	// action must've gone missing
		addWait = {};
		addWait.sols = {};
		addWait.solModifiers = [];
		addWait.deleteme = false;
		addWait.time = w["t"];
		addWait.ev = e;
		addWait.actindex = aindex;
		for (j = 0, lenj = w["sm"].length; j < lenj; j++)
		{
			t = this.runtime.getObjectTypeBySid(w["sm"][j]);
			if (t)
				addWait.solModifiers.push(t);
		}
		for (p in w["sols"])
		{
			if (w["sols"].hasOwnProperty(p))
			{
				t = this.runtime.getObjectTypeBySid(parseInt(p, 10));
				if (!t)
					continue;		// type must've been deleted
				savedsol = w["sols"][p];
				nusol = {
					sa: savedsol["sa"],
					insts: []
				};
				for (j = 0, lenj = savedsol["insts"].length; j < lenj; j++)
				{
					inst = this.runtime.getObjectByUID(savedsol["insts"][j]);
					if (inst)
						nusol.insts.push(inst);
				}
				addWait.sols[t.index.toString()] = nusol;
			}
		}
		this.waits.push(addWait);
	}
};
(function ()
{
	var sysProto = cr.system_object.prototype;
	function SysCnds() {};
    SysCnds.prototype.EveryTick = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutStart = function()
    {
        return true;
    };
    SysCnds.prototype.OnLayoutEnd = function()
    {
        return true;
    };
    SysCnds.prototype.Compare = function(x, cmp, y)
    {
        return cr.do_cmp(x, cmp, y);
    };
    SysCnds.prototype.CompareTime = function (cmp, t)
    {
        var elapsed = this.runtime.kahanTime.sum;
        if (cmp === 0)
        {
            var cnd = this.runtime.getCurrentCondition();
            if (!cnd.extra.CompareTime_executed)
            {
                if (elapsed >= t)
                {
                    cnd.extra.CompareTime_executed = true;
                    return true;
                }
            }
            return false;
        }
        return cr.do_cmp(elapsed, cmp, t);
    };
    SysCnds.prototype.LayerVisible = function (layer)
    {
        if (!layer)
            return false;
        else
            return layer.visible;
    };
	SysCnds.prototype.LayerCmpOpacity = function (layer, cmp, opacity_)
	{
		if (!layer)
			return false;
		return cr.do_cmp(layer.opacity * 100, cmp, opacity_);
	};
    SysCnds.prototype.Repeat = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; i < count && !current_loop.stopped; i++)
			{
				current_loop.index = i;
				current_event.retrigger();
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	SysCnds.prototype.While = function (count)
    {
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i;
		if (solModifierAfterCnds)
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				if (!current_event.retrigger())		// one of the other conditions returned false
					current_loop.stopped = true;	// break
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = 0; !current_loop.stopped; i++)
			{
				current_loop.index = i;
				if (!current_event.retrigger())
					current_loop.stopped = true;
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
    SysCnds.prototype.For = function (name, start, end)
    {
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack(name);
        var i;
		if (solModifierAfterCnds)
		{
			for (i = start; i <= end && !current_loop.stopped; i++)  // inclusive to end
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			for (i = start; i <= end && !current_loop.stopped; i++)  // inclusive to end
			{
				current_loop.index = i;
				current_event.retrigger();
			}
		}
        this.runtime.popLoopStack();
		return false;
    };
	var foreach_instancestack = [];
	var foreach_instanceptr = -1;
    SysCnds.prototype.ForEach = function (obj)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
        var i, len, j, lenj, inst, s, sol2;
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
	function foreach_sortinstances(a, b)
	{
		var va = a.extra.c2_foreachordered_val;
		var vb = b.extra.c2_foreachordered_val;
		if (cr.is_number(va) && cr.is_number(vb))
			return va - vb;
		else
		{
			va = "" + va;
			vb = "" + vb;
			if (va < vb)
				return -1;
			else if (va > vb)
				return 1;
			else
				return 0;
		}
	};
	SysCnds.prototype.ForEachOrdered = function (obj, exp, order)
    {
        var sol = obj.getCurrentSol();
		foreach_instanceptr++;
		if (foreach_instancestack.length === foreach_instanceptr)
			foreach_instancestack.push([]);
		var instances = foreach_instancestack[foreach_instanceptr];
		cr.shallowAssignArray(instances, sol.getObjects());
        var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var current_condition = this.runtime.getCurrentCondition();
		var solModifierAfterCnds = current_frame.isModifierAfterCnds();
        var current_loop = this.runtime.pushLoopStack();
		var i, len, j, lenj, inst, s, sol2;
		for (i = 0, len = instances.length; i < len; i++)
		{
			instances[i].extra.c2_foreachordered_val = current_condition.parameters[1].get(i);
		}
		instances.sort(foreach_sortinstances);
		if (order === 1)
			instances.reverse();
		var is_contained = obj.is_contained;
		if (solModifierAfterCnds)
		{
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				this.runtime.pushCopySol(current_event.solModifiers);
				inst = instances[i];
				sol = obj.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
				this.runtime.popSol(current_event.solModifiers);
			}
		}
		else
		{
			sol.select_all = false;
			sol.instances.length = 1;
			for (i = 0, len = instances.length; i < len && !current_loop.stopped; i++)
			{
				inst = instances[i];
				sol.instances[0] = inst;
				if (is_contained)
				{
					for (j = 0, lenj = inst.siblings.length; j < lenj; j++)
					{
						s = inst.siblings[j];
						sol2 = s.type.getCurrentSol();
						sol2.select_all = false;
						sol2.instances.length = 1;
						sol2.instances[0] = s;
					}
				}
				current_loop.index = i;
				current_event.retrigger();
			}
		}
        this.runtime.popLoopStack();
		foreach_instanceptr--;
		return false;
    };
    SysCnds.prototype.TriggerOnce = function ()
    {
        var cndextra = this.runtime.getCurrentCondition().extra;
		if (typeof cndextra.TriggerOnce_lastTick === "undefined")
			cndextra.TriggerOnce_lastTick = -1;
        var last_tick = cndextra.TriggerOnce_lastTick;
        var cur_tick = this.runtime.tickcount;
        cndextra.TriggerOnce_lastTick = cur_tick;
        return this.runtime.layout_first_tick || last_tick !== cur_tick - 1;
    };
    SysCnds.prototype.Every = function (seconds)
    {
        var cnd = this.runtime.getCurrentCondition();
        var last_time = cnd.extra.Every_lastTime || 0;
        var cur_time = this.runtime.kahanTime.sum;
        if (cur_time >= last_time + seconds)
        {
            cnd.extra.Every_lastTime = last_time + seconds;
			if (cur_time >= cnd.extra.Every_lastTime + seconds)
				cnd.extra.Every_lastTime = cur_time;
            return true;
        }
        else
            return false;
    };
    SysCnds.prototype.PickNth = function (obj, index)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		index = cr.floor(index);
        if (index < 0 || index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.PickRandom = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
		var index = cr.floor(Math.random() * instances.length);
        if (index >= instances.length)
            return false;
		var inst = instances[index];
        sol.pick_one(inst);
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.CompareVar = function (v, cmp, val)
    {
        return cr.do_cmp(v.getValue(), cmp, val);
    };
    SysCnds.prototype.IsGroupActive = function (group)
    {
        return this.runtime.activeGroups[(/*this.runtime.getCurrentCondition().sheet.name + "|" + */group).toLowerCase()];
    };
	SysCnds.prototype.IsPreview = function ()
	{
		return typeof cr_is_preview !== "undefined";
	};
	SysCnds.prototype.PickAll = function (obj)
    {
        if (!obj)
            return false;
		if (!obj.instances.length)
			return false;
        var sol = obj.getCurrentSol();
        sol.select_all = true;
		obj.applySolToContainer();
        return true;
    };
	SysCnds.prototype.IsMobile = function ()
	{
		return this.runtime.isMobile;
	};
	SysCnds.prototype.CompareBetween = function (x, a, b)
	{
		return x >= a && x <= b;
	};
	SysCnds.prototype.Else = function ()
	{
		var current_frame = this.runtime.getCurrentEventStack();
		if (current_frame.else_branch_ran)
			return false;		// another event in this else-if chain has run
		else
			return !current_frame.last_event_true;
		/*
		var current_frame = this.runtime.getCurrentEventStack();
        var current_event = current_frame.current_event;
		var prev_event = current_event.prev_block;
		if (!prev_event)
			return false;
		if (prev_event.is_logical)
			return !this.runtime.last_event_true;
		var i, len, j, lenj, s, sol, temp, inst, any_picked = false;
		for (i = 0, len = prev_event.cndReferences.length; i < len; i++)
		{
			s = prev_event.cndReferences[i];
			sol = s.getCurrentSol();
			if (sol.select_all || sol.instances.length === s.instances.length)
			{
				sol.select_all = false;
				sol.instances.length = 0;
			}
			else
			{
				if (sol.instances.length === 1 && sol.else_instances.length === 0 && s.instances.length >= 2)
				{
					inst = sol.instances[0];
					sol.instances.length = 0;
					for (j = 0, lenj = s.instances.length; j < lenj; j++)
					{
						if (s.instances[j] != inst)
							sol.instances.push(s.instances[j]);
					}
					any_picked = true;
				}
				else
				{
					temp = sol.instances;
					sol.instances = sol.else_instances;
					sol.else_instances = temp;
					any_picked = true;
				}
			}
		}
		return any_picked;
		*/
	};
	SysCnds.prototype.OnLoadFinished = function ()
	{
		return true;
	};
	SysCnds.prototype.OnCanvasSnapshot = function ()
	{
		return true;
	};
	SysCnds.prototype.EffectsSupported = function ()
	{
		return !!this.runtime.glwrap;
	};
	SysCnds.prototype.OnSaveComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadComplete = function ()
	{
		return true;
	};
	SysCnds.prototype.OnLoadFailed = function ()
	{
		return true;
	};
	sysProto.cnds = new SysCnds();
    function SysActs() {};
    SysActs.prototype.GoToLayout = function(to)
    {
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
        this.runtime.changelayout = to;
    };
    SysActs.prototype.CreateObject = function (obj, layer, x, y)
    {
        if (!layer || !obj)
            return;
        var inst = this.runtime.createInstance(obj, layer, x, y);
		if (!inst)
			return;
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
        var sol = obj.getCurrentSol();
        sol.select_all = false;
		sol.instances.length = 1;
		sol.instances[0] = inst;
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				sol = s.type.getCurrentSol();
				sol.select_all = false;
				sol.instances.length = 1;
				sol.instances[0] = s;
			}
		}
    };
    SysActs.prototype.SetLayerVisible = function (layer, visible_)
    {
        if (!layer)
            return;
		if (layer.visible !== visible_)
		{
			layer.visible = visible_;
			this.runtime.redraw = true;
		}
    };
	SysActs.prototype.SetLayerOpacity = function (layer, opacity_)
	{
		if (!layer)
			return;
		opacity_ = cr.clamp(opacity_ / 100, 0, 1);
		if (layer.opacity !== opacity_)
		{
			layer.opacity = opacity_;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayerScaleRate = function (layer, sr)
	{
		if (!layer)
			return;
		if (layer.zoomRate !== sr)
		{
			layer.zoomRate = sr;
			this.runtime.redraw = true;
		}
	};
	SysActs.prototype.SetLayoutScale = function (s)
	{
		if (!this.runtime.running_layout)
			return;
		if (this.runtime.running_layout.scale !== s)
		{
			this.runtime.running_layout.scale = s;
			this.runtime.redraw = true;
		}
	};
    SysActs.prototype.ScrollX = function(x)
    {
        this.runtime.running_layout.scrollToX(x);
    };
    SysActs.prototype.ScrollY = function(y)
    {
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.Scroll = function(x, y)
    {
        this.runtime.running_layout.scrollToX(x);
        this.runtime.running_layout.scrollToY(y);
    };
    SysActs.prototype.ScrollToObject = function(obj)
    {
        var inst = obj.getFirstPicked();
        if (inst)
        {
            this.runtime.running_layout.scrollToX(inst.x);
            this.runtime.running_layout.scrollToY(inst.y);
        }
    };
	SysActs.prototype.SetVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(x);
			else
				v.setValue(parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(x.toString());
	};
	SysActs.prototype.AddVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() + x);
			else
				v.setValue(v.getValue() + parseFloat(x));
		}
		else if (v.vartype === 1)
			v.setValue(v.getValue() + x.toString());
	};
	SysActs.prototype.SubVar = function(v, x)
	{
;
		if (v.vartype === 0)
		{
			if (cr.is_number(x))
				v.setValue(v.getValue() - x);
			else
				v.setValue(v.getValue() - parseFloat(x));
		}
	};
    SysActs.prototype.SetGroupActive = function (group, active)
    {
		var activeGroups = this.runtime.activeGroups;
		var groupkey = (/*this.runtime.getCurrentAction().sheet.name + "|" + */group).toLowerCase();
		switch (active) {
		case 0:
			activeGroups[groupkey] = false;
			break;
		case 1:
			activeGroups[groupkey] = true;
			break;
		case 2:
			activeGroups[groupkey] = !activeGroups[groupkey];
			break;
		}
    };
    SysActs.prototype.SetTimescale = function (ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        this.runtime.timescale = ts;
    };
    SysActs.prototype.SetObjectTimescale = function (obj, ts_)
    {
        var ts = ts_;
        if (ts < 0)
            ts = 0;
        if (!obj)
            return;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = ts;
        }
    };
    SysActs.prototype.RestoreObjectTimescale = function (obj)
    {
        if (!obj)
            return false;
        var sol = obj.getCurrentSol();
        var instances = sol.getObjects();
        var i, len;
        for (i = 0, len = instances.length; i < len; i++)
        {
            instances[i].my_timescale = -1.0;
        }
    };
	var waitobjrecycle = [];
	function allocWaitObject()
	{
		var w;
		if (waitobjrecycle.length)
			w = waitobjrecycle.pop();
		else
		{
			w = {};
			w.sols = {};
			w.solModifiers = [];
		}
		w.deleteme = false;
		return w;
	};
	function freeWaitObject(w)
	{
		cr.wipe(w.sols);
		w.solModifiers.length = 0;
		waitobjrecycle.push(w);
	};
	var solstateobjects = [];
	function allocSolStateObject()
	{
		var s;
		if (solstateobjects.length)
			s = solstateobjects.pop();
		else
		{
			s = {};
			s.insts = [];
		}
		s.sa = false;
		return s;
	};
	function freeSolStateObject(s)
	{
		s.insts.length = 0;
		solstateobjects.push(s);
	};
	SysActs.prototype.Wait = function (seconds)
	{
		if (seconds < 0)
			return;
		var i, len, s, t, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		var waitobj = allocWaitObject();
		waitobj.time = this.runtime.kahanTime.sum + seconds;
		waitobj.ev = evinfo.current_event;
		waitobj.actindex = evinfo.actindex + 1;	// pointing at next action
		for (i = 0, len = this.runtime.types_by_index.length; i < len; i++)
		{
			t = this.runtime.types_by_index[i];
			s = t.getCurrentSol();
			if (s.select_all && evinfo.current_event.solModifiers.indexOf(t) === -1)
				continue;
			waitobj.solModifiers.push(t);
			ss = allocSolStateObject();
			ss.sa = s.select_all;
			cr.shallowAssignArray(ss.insts, s.instances);
			waitobj.sols[i.toString()] = ss;
		}
		this.waits.push(waitobj);
		return true;
	};
	SysActs.prototype.SetLayerScale = function (layer, scale)
    {
        if (!layer)
            return;
		if (layer.scale === scale)
			return;
        layer.scale = scale;
        this.runtime.redraw = true;
    };
	SysActs.prototype.ResetGlobals = function ()
	{
		var i, len, g;
		for (i = 0, len = this.runtime.all_global_vars.length; i < len; i++)
		{
			g = this.runtime.all_global_vars[i];
			g.data = g.initial;
		}
	};
	SysActs.prototype.SetLayoutAngle = function (a)
	{
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (this.runtime.running_layout)
		{
			if (this.runtime.running_layout.angle !== a)
			{
				this.runtime.running_layout.angle = a;
				this.runtime.redraw = true;
			}
		}
	};
	SysActs.prototype.SetLayerAngle = function (layer, a)
    {
        if (!layer)
            return;
		a = cr.to_radians(a);
		a = cr.clamp_angle(a);
		if (layer.angle === a)
			return;
        layer.angle = a;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerParallax = function (layer, px, py)
    {
        if (!layer)
            return;
		if (layer.parallaxX === px / 100 && layer.parallaxY === py / 100)
			return;
        layer.parallaxX = px / 100;
		layer.parallaxY = py / 100;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerBackground = function (layer, c)
    {
        if (!layer)
            return;
		var r = cr.GetRValue(c);
		var g = cr.GetGValue(c);
		var b = cr.GetBValue(c);
		if (layer.background_color[0] === r && layer.background_color[1] === g && layer.background_color[2] === b)
			return;
        layer.background_color[0] = r;
		layer.background_color[1] = g;
		layer.background_color[2] = b;
        this.runtime.redraw = true;
    };
	SysActs.prototype.SetLayerTransparent = function (layer, t)
    {
        if (!layer)
            return;
		if (!!t === !!layer.transparent)
			return;
		layer.transparent = !!t;
        this.runtime.redraw = true;
    };
	SysActs.prototype.StopLoop = function ()
	{
		if (this.runtime.loop_stack_index < 0)
			return;		// no loop currently running
		this.runtime.getCurrentLoop().stopped = true;
	};
	SysActs.prototype.GoToLayoutByName = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot change layout while loading on loader layout
		if (this.runtime.changelayout)
			return;		// already changing to different layout
;
		var l;
		for (l in this.runtime.layouts)
		{
			if (this.runtime.layouts.hasOwnProperty(l) && l.toLowerCase() === layoutname.toLowerCase())
			{
				this.runtime.changelayout = this.runtime.layouts[l];
				return;
			}
		}
	};
	SysActs.prototype.RestartLayout = function (layoutname)
	{
		if (this.runtime.isloading)
			return;		// cannot restart loader layouts
		if (this.runtime.changelayout)
			return;		// already changing to a different layout
;
		if (!this.runtime.running_layout)
			return;
		this.runtime.changelayout = this.runtime.running_layout;
		var i, len, g;
		for (i = 0, len = this.runtime.allGroups.length; i < len; i++)
		{
			g = this.runtime.allGroups[i];
			this.runtime.activeGroups[g.group_name.toLowerCase()] = g.initially_activated;
		}
	};
	SysActs.prototype.SnapshotCanvas = function (format_, quality_)
	{
		this.runtime.snapshotCanvas = [format_ === 0 ? "image/png" : "image/jpeg", quality_ / 100];
		this.runtime.redraw = true;		// force redraw so snapshot is always taken
	};
	SysActs.prototype.SetCanvasSize = function (w, h)
	{
		if (w <= 0 || h <= 0)
			return;
		this.runtime["setSize"](w, h);
	};
	SysActs.prototype.SetLayoutEffectEnabled = function (enable_, effectname_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		this.runtime.running_layout.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectEnabled = function (layer, enable_, effectname_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var enable = (enable_ === 1);
		if (et.active == enable)
			return;		// no change
		et.active = enable;
		layer.updateActiveEffects();
		this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayoutEffectParam = function (effectname_, index_, value_)
	{
		if (!this.runtime.running_layout || !this.runtime.glwrap)
			return;
		var et = this.runtime.running_layout.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = this.runtime.running_layout.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SetLayerEffectParam = function (layer, effectname_, index_, value_)
	{
		if (!layer || !this.runtime.glwrap)
			return;
		var et = layer.getEffectByName(effectname_);
		if (!et)
			return;		// effect name not found
		var params = layer.effect_params[et.index];
		index_ = Math.floor(index_);
		if (index_ < 0 || index_ >= params.length)
			return;		// effect index out of bounds
		if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
			value_ /= 100.0;
		if (params[index_] === value_)
			return;		// no change
		params[index_] = value_;
		if (et.active)
			this.runtime.redraw = true;
	};
	SysActs.prototype.SaveState = function (slot_)
	{
		this.runtime.saveToSlot = slot_;
	};
	SysActs.prototype.LoadState = function (slot_)
	{
		this.runtime.loadFromSlot = slot_;
	};
	SysActs.prototype.LoadStateJSON = function (jsonstr_)
	{
		this.runtime.loadFromJson = jsonstr_;
	};
	sysProto.acts = new SysActs();
    function SysExps() {};
    SysExps.prototype["int"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_int(parseInt(x, 10));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_int(x);
    };
    SysExps.prototype["float"] = function(ret, x)
    {
        if (cr.is_string(x))
        {
            ret.set_float(parseFloat(x));
            if (isNaN(ret.data))
                ret.data = 0;
        }
        else
            ret.set_float(x);
    };
    SysExps.prototype.str = function(ret, x)
    {
        if (cr.is_string(x))
            ret.set_string(x);
        else
            ret.set_string(x.toString());
    };
    SysExps.prototype.len = function(ret, x)
    {
        ret.set_int(x.length || 0);
    };
    SysExps.prototype.random = function (ret, a, b)
    {
        if (b === undefined)
        {
            ret.set_float(Math.random() * a);
        }
        else
        {
            ret.set_float(Math.random() * (b - a) + a);
        }
    };
    SysExps.prototype.sqrt = function(ret, x)
    {
        ret.set_float(Math.sqrt(x));
    };
    SysExps.prototype.abs = function(ret, x)
    {
        ret.set_float(Math.abs(x));
    };
    SysExps.prototype.round = function(ret, x)
    {
        ret.set_int(Math.round(x));
    };
    SysExps.prototype.floor = function(ret, x)
    {
        ret.set_int(Math.floor(x));
    };
    SysExps.prototype.ceil = function(ret, x)
    {
        ret.set_int(Math.ceil(x));
    };
    SysExps.prototype.sin = function(ret, x)
    {
        ret.set_float(Math.sin(cr.to_radians(x)));
    };
    SysExps.prototype.cos = function(ret, x)
    {
        ret.set_float(Math.cos(cr.to_radians(x)));
    };
    SysExps.prototype.tan = function(ret, x)
    {
        ret.set_float(Math.tan(cr.to_radians(x)));
    };
    SysExps.prototype.asin = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.asin(x)));
    };
    SysExps.prototype.acos = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.acos(x)));
    };
    SysExps.prototype.atan = function(ret, x)
    {
        ret.set_float(cr.to_degrees(Math.atan(x)));
    };
    SysExps.prototype.exp = function(ret, x)
    {
        ret.set_float(Math.exp(x));
    };
    SysExps.prototype.ln = function(ret, x)
    {
        ret.set_float(Math.log(x));
    };
    SysExps.prototype.log10 = function(ret, x)
    {
        ret.set_float(Math.log(x) / Math.LN10);
    };
    SysExps.prototype.max = function(ret)
    {
		var max_ = arguments[1];
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			if (max_ < arguments[i])
				max_ = arguments[i];
		}
		ret.set_float(max_);
    };
    SysExps.prototype.min = function(ret)
    {
        var min_ = arguments[1];
		var i, len;
		for (i = 2, len = arguments.length; i < len; i++)
		{
			if (min_ > arguments[i])
				min_ = arguments[i];
		}
		ret.set_float(min_);
    };
    SysExps.prototype.dt = function(ret)
    {
        ret.set_float(this.runtime.dt);
    };
    SysExps.prototype.timescale = function(ret)
    {
        ret.set_float(this.runtime.timescale);
    };
    SysExps.prototype.wallclocktime = function(ret)
    {
        ret.set_float((Date.now() - this.runtime.start_time) / 1000.0);
    };
    SysExps.prototype.time = function(ret)
    {
        ret.set_float(this.runtime.kahanTime.sum);
    };
    SysExps.prototype.tickcount = function(ret)
    {
        ret.set_int(this.runtime.tickcount);
    };
    SysExps.prototype.objectcount = function(ret)
    {
        ret.set_int(this.runtime.objectcount);
    };
    SysExps.prototype.fps = function(ret)
    {
        ret.set_int(this.runtime.fps);
    };
    SysExps.prototype.loopindex = function(ret, name_)
    {
		var loop, i, len;
        if (!this.runtime.loop_stack.length)
        {
            ret.set_int(0);
            return;
        }
        if (name_)
        {
            for (i = 0, len = this.runtime.loop_stack.length; i < len; i++)
            {
                loop = this.runtime.loop_stack[i];
                if (loop.name === name_)
                {
                    ret.set_int(loop.index);
                    return;
                }
            }
            ret.set_int(0);
        }
        else
        {
			loop = this.runtime.getCurrentLoop();
			ret.set_int(loop ? loop.index : -1);
        }
    };
    SysExps.prototype.distance = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.distanceTo(x1, y1, x2, y2));
    };
    SysExps.prototype.angle = function(ret, x1, y1, x2, y2)
    {
        ret.set_float(cr.to_degrees(cr.angleTo(x1, y1, x2, y2)));
    };
    SysExps.prototype.scrollx = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollX);
    };
    SysExps.prototype.scrolly = function(ret)
    {
        ret.set_float(this.runtime.running_layout.scrollY);
    };
    SysExps.prototype.newline = function(ret)
    {
        ret.set_string("\n");
    };
    SysExps.prototype.lerp = function(ret, a, b, x)
    {
        ret.set_float(cr.lerp(a, b, x));
    };
    SysExps.prototype.windowwidth = function(ret)
    {
        ret.set_int(this.runtime.width);
    };
    SysExps.prototype.windowheight = function(ret)
    {
        ret.set_int(this.runtime.height);
    };
	SysExps.prototype.uppercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toUpperCase() : "");
	};
	SysExps.prototype.lowercase = function(ret, str)
	{
		ret.set_string(cr.is_string(str) ? str.toLowerCase() : "");
	};
	SysExps.prototype.clamp = function(ret, x, l, u)
	{
		if (x < l)
			ret.set_float(l);
		else if (x > u)
			ret.set_float(u);
		else
			ret.set_float(x);
	};
	SysExps.prototype.layerscale = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.scale);
	};
	SysExps.prototype.layeropacity = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.opacity * 100);
	};
	SysExps.prototype.layerscalerate = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(layer.zoomRate);
	};
	SysExps.prototype.layoutscale = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_float(this.runtime.running_layout.scale);
		else
			ret.set_float(0);
	};
	SysExps.prototype.layoutangle = function (ret)
	{
		ret.set_float(cr.to_degrees(this.runtime.running_layout.angle));
	};
	SysExps.prototype.layerangle = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		if (!layer)
			ret.set_float(0);
		else
			ret.set_float(cr.to_degrees(layer.angle));
	};
	SysExps.prototype.layoutwidth = function (ret)
	{
		ret.set_int(this.runtime.running_layout.width);
	};
	SysExps.prototype.layoutheight = function (ret)
	{
		ret.set_int(this.runtime.running_layout.height);
	};
	SysExps.prototype.find = function (ret, text, searchstr)
	{
		if (cr.is_string(text) && cr.is_string(searchstr))
			ret.set_int(text.search(new RegExp(cr.regexp_escape(searchstr), "i")));
		else
			ret.set_int(-1);
	};
	SysExps.prototype.left = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(0, n) : "");
	};
	SysExps.prototype.right = function (ret, text, n)
	{
		ret.set_string(cr.is_string(text) ? text.substr(text.length - n) : "");
	};
	SysExps.prototype.mid = function (ret, text, index_, length_)
	{
		ret.set_string(cr.is_string(text) ? text.substr(index_, length_) : "");
	};
	SysExps.prototype.tokenat = function (ret, text, index_, sep)
	{
		if (cr.is_string(text) && cr.is_string(sep))
		{
			var arr = text.split(sep);
			var i = cr.floor(index_);
			if (i < 0 || i >= arr.length)
				ret.set_string("");
			else
				ret.set_string(arr[i]);
		}
		else
			ret.set_string("");
	};
	SysExps.prototype.tokencount = function (ret, text, sep)
	{
		if (cr.is_string(text) && text.length)
			ret.set_int(text.split(sep).length);
		else
			ret.set_int(0);
	};
	SysExps.prototype.replace = function (ret, text, find_, replace_)
	{
		if (cr.is_string(text) && cr.is_string(find_) && cr.is_string(replace_))
			ret.set_string(text.replace(new RegExp(cr.regexp_escape(find_), "gi"), replace_));
		else
			ret.set_string(cr.is_string(text) ? text : "");
	};
	SysExps.prototype.trim = function (ret, text)
	{
		ret.set_string(cr.is_string(text) ? text.trim() : "");
	};
	SysExps.prototype.pi = function (ret)
	{
		ret.set_float(cr.PI);
	};
	SysExps.prototype.layoutname = function (ret)
	{
		if (this.runtime.running_layout)
			ret.set_string(this.runtime.running_layout.name);
		else
			ret.set_string("");
	};
	SysExps.prototype.renderer = function (ret)
	{
		ret.set_string(this.runtime.gl ? "webgl" : "canvas2d");
	};
	SysExps.prototype.anglediff = function (ret, a, b)
	{
		ret.set_float(cr.to_degrees(cr.angleDiff(cr.to_radians(a), cr.to_radians(b))));
	};
	SysExps.prototype.choose = function (ret)
	{
		var index = cr.floor(Math.random() * (arguments.length - 1));
		ret.set_any(arguments[index + 1]);
	};
	SysExps.prototype.rgb = function (ret, r, g, b)
	{
		ret.set_int(cr.RGB(r, g, b));
	};
	SysExps.prototype.projectversion = function (ret)
	{
		ret.set_string(this.runtime.versionstr);
	};
	SysExps.prototype.anglelerp = function (ret, a, b, x)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		var diff = cr.angleDiff(a, b);
		if (cr.angleClockwise(b, a))
		{
			ret.set_float(cr.to_clamped_degrees(a + diff * x));
		}
		else
		{
			ret.set_float(cr.to_clamped_degrees(a - diff * x));
		}
	};
	SysExps.prototype.anglerotate = function (ret, a, b, c)
	{
		a = cr.to_radians(a);
		b = cr.to_radians(b);
		c = cr.to_radians(c);
		ret.set_float(cr.to_clamped_degrees(cr.angleRotate(a, b, c)));
	};
	SysExps.prototype.zeropad = function (ret, n, d)
	{
		var s = (n < 0 ? "-" : "");
		if (n < 0) n = -n;
		var zeroes = d - n.toString().length;
		for (var i = 0; i < zeroes; i++)
			s += "0";
		ret.set_string(s + n.toString());
	};
	SysExps.prototype.cpuutilisation = function (ret)
	{
		ret.set_float(this.runtime.cpuutilisation / 1000);
	};
	SysExps.prototype.viewportleft = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewLeft : 0);
	};
	SysExps.prototype.viewporttop = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewTop : 0);
	};
	SysExps.prototype.viewportright = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewRight : 0);
	};
	SysExps.prototype.viewportbottom = function (ret, layerparam)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.viewBottom : 0);
	};
	SysExps.prototype.loadingprogress = function (ret)
	{
		ret.set_float(this.runtime.loadingprogress);
	};
	SysExps.prototype.unlerp = function(ret, a, b, y)
    {
        ret.set_float((y - a) / (b - a));
    };
	SysExps.prototype.canvassnapshot = function (ret)
	{
		ret.set_string(this.runtime.snapshotData);
	};
	SysExps.prototype.urlencode = function (ret, s)
	{
		ret.set_string(encodeURIComponent(s));
	};
	SysExps.prototype.urldecode = function (ret, s)
	{
		ret.set_string(decodeURIComponent(s));
	};
	SysExps.prototype.canvastolayerx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, true) : 0);
	};
	SysExps.prototype.canvastolayery = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.canvasToLayer(x, y, false) : 0);
	};
	SysExps.prototype.layertocanvasx = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, true) : 0);
	};
	SysExps.prototype.layertocanvasy = function (ret, layerparam, x, y)
	{
		var layer = this.runtime.getLayer(layerparam);
		ret.set_float(layer ? layer.layerToCanvas(x, y, false) : 0);
	};
	SysExps.prototype.savestatejson = function (ret)
	{
		ret.set_string(this.runtime.lastSaveJson);
	};
	sysProto.exps = new SysExps();
	sysProto.runWaits = function ()
	{
		var i, j, len, w, k, s, ss;
		var evinfo = this.runtime.getCurrentEventStack();
		for (i = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			if (w.time > this.runtime.kahanTime.sum)
				continue;
			evinfo.current_event = w.ev;
			evinfo.actindex = w.actindex;
			evinfo.cndindex = 0;
			for (k in w.sols)
			{
				if (w.sols.hasOwnProperty(k))
				{
					s = this.runtime.types_by_index[parseInt(k, 10)].getCurrentSol();
					ss = w.sols[k];
					s.select_all = ss.sa;
					cr.shallowAssignArray(s.instances, ss.insts);
					freeSolStateObject(ss);
				}
			}
			w.ev.resume_actions_and_subevents();
			this.runtime.clearSol(w.solModifiers);
			w.deleteme = true;
		}
		for (i = 0, j = 0, len = this.waits.length; i < len; i++)
		{
			w = this.waits[i];
			this.waits[j] = w;
			if (w.deleteme)
				freeWaitObject(w);
			else
				j++;
		}
		this.waits.length = j;
	};
}());
;
cr.add_common_aces = function (m)
{
	var pluginProto = m[0].prototype;
	var singleglobal_ = m[1];
	var position_aces = m[3];
	var size_aces = m[4];
	var angle_aces = m[5];
	var appearance_aces = m[6];
	var zorder_aces = m[7];
	var effects_aces = m[8];
    if (!pluginProto.cnds)
        pluginProto.cnds = {};
    if (!pluginProto.acts)
        pluginProto.acts = {};
    if (!pluginProto.exps)
        pluginProto.exps = {};
    var cnds = pluginProto.cnds;
    var acts = pluginProto.acts;
    var exps = pluginProto.exps;
    if (position_aces)
    {
        cnds.CompareX = function (cmp, x)
        {
            return cr.do_cmp(this.x, cmp, x);
        };
        cnds.CompareY = function (cmp, y)
        {
            return cr.do_cmp(this.y, cmp, y);
        };
        cnds.IsOnScreen = function ()
        {
			var layer = this.layer;
            this.update_bbox();
            var bbox = this.bbox;
            return !(bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom);
        };
        cnds.IsOutsideLayout = function ()
        {
            this.update_bbox();
            var bbox = this.bbox;
            var layout = this.runtime.running_layout;
            return (bbox.right < 0 || bbox.bottom < 0 || bbox.left > layout.width || bbox.top > layout.height);
        };
		cnds.PickDistance = function (which, x, y)
		{
			var sol = this.getCurrentSol();
			var instances = sol.getObjects();
			if (!instances.length)
				return false;
			var inst = instances[0];
			var pickme = inst;
			var dist = cr.distanceTo(inst.x, inst.y, x, y);
			var i, len, d;
			for (i = 1, len = instances.length; i < len; i++)
			{
				inst = instances[i];
				d = cr.distanceTo(inst.x, inst.y, x, y);
				if ((which === 0 && d < dist) || (which === 1 && d > dist))
				{
					dist = d;
					pickme = inst;
				}
			}
			sol.pick_one(pickme);
			return true;
		};
        acts.SetX = function (x)
        {
            if (this.x !== x)
            {
                this.x = x;
                this.set_bbox_changed();
            }
        };
        acts.SetY = function (y)
        {
            if (this.y !== y)
            {
                this.y = y;
                this.set_bbox_changed();
            }
        };
        acts.SetPos = function (x, y)
        {
            if (this.x !== x || this.y !== y)
            {
                this.x = x;
                this.y = y;
                this.set_bbox_changed();
            }
        };
        acts.SetPosToObject = function (obj, imgpt)
        {
            var inst = obj.getPairedInstance(this);
            if (!inst)
				return;
			var newx, newy;
			if (inst.getImagePoint)
			{
				newx = inst.getImagePoint(imgpt, true);
				newy = inst.getImagePoint(imgpt, false);
			}
			else
			{
				newx = inst.x;
				newy = inst.y;
			}
			if (this.x !== newx || this.y !== newy)
            {
				this.x = newx;
				this.y = newy;
				this.set_bbox_changed();
            }
        };
        acts.MoveForward = function (dist)
        {
            if (dist !== 0)
            {
                this.x += Math.cos(this.angle) * dist;
                this.y += Math.sin(this.angle) * dist;
                this.set_bbox_changed();
            }
        };
        acts.MoveAtAngle = function (a, dist)
        {
            if (dist !== 0)
            {
                this.x += Math.cos(cr.to_radians(a)) * dist;
                this.y += Math.sin(cr.to_radians(a)) * dist;
                this.set_bbox_changed();
            }
        };
        exps.X = function (ret)
        {
            ret.set_float(this.x);
        };
        exps.Y = function (ret)
        {
            ret.set_float(this.y);
        };
        exps.dt = function (ret)
        {
            ret.set_float(this.runtime.getDt(this));
        };
    }
    if (size_aces)
    {
        cnds.CompareWidth = function (cmp, w)
        {
            return cr.do_cmp(this.width, cmp, w);
        };
        cnds.CompareHeight = function (cmp, h)
        {
            return cr.do_cmp(this.height, cmp, h);
        };
        acts.SetWidth = function (w)
        {
            if (this.width !== w)
            {
                this.width = w;
                this.set_bbox_changed();
            }
        };
        acts.SetHeight = function (h)
        {
            if (this.height !== h)
            {
                this.height = h;
                this.set_bbox_changed();
            }
        };
        acts.SetSize = function (w, h)
        {
            if (this.width !== w || this.height !== h)
            {
                this.width = w;
                this.height = h;
                this.set_bbox_changed();
            }
        };
        exps.Width = function (ret)
        {
            ret.set_float(this.width);
        };
        exps.Height = function (ret)
        {
            ret.set_float(this.height);
        };
		exps.BBoxLeft = function (ret)
        {
			this.update_bbox();
            ret.set_float(this.bbox.left);
        };
		exps.BBoxTop = function (ret)
        {
			this.update_bbox();
            ret.set_float(this.bbox.top);
        };
		exps.BBoxRight = function (ret)
        {
			this.update_bbox();
            ret.set_float(this.bbox.right);
        };
		exps.BBoxBottom = function (ret)
        {
			this.update_bbox();
            ret.set_float(this.bbox.bottom);
        };
    }
    if (angle_aces)
    {
        cnds.AngleWithin = function (within, a)
        {
            return cr.angleDiff(this.angle, cr.to_radians(a)) <= cr.to_radians(within);
        };
        cnds.IsClockwiseFrom = function (a)
        {
            return cr.angleClockwise(this.angle, cr.to_radians(a));
        };
		cnds.IsBetweenAngles = function (a, b)
		{
			var lower = cr.to_clamped_radians(a);
			var upper = cr.to_clamped_radians(b);
			var angle = cr.clamp_angle(this.angle);
			var obtuse = (!cr.angleClockwise(upper, lower));
			if (obtuse)
				return !(!cr.angleClockwise(angle, lower) && cr.angleClockwise(angle, upper));
			else
				return cr.angleClockwise(angle, lower) && !cr.angleClockwise(angle, upper);
		};
        acts.SetAngle = function (a)
        {
            var newangle = cr.to_radians(cr.clamp_angle_degrees(a));
            if (isNaN(newangle))
                return;
            if (this.angle !== newangle)
            {
                this.angle = newangle;
                this.set_bbox_changed();
            }
        };
        acts.RotateClockwise = function (a)
        {
            if (a !== 0 && !isNaN(a))
            {
                this.angle += cr.to_radians(a);
                this.angle = cr.clamp_angle(this.angle);
                this.set_bbox_changed();
            }
        };
        acts.RotateCounterclockwise = function (a)
        {
            if (a !== 0 && !isNaN(a))
            {
                this.angle -= cr.to_radians(a);
                this.angle = cr.clamp_angle(this.angle);
                this.set_bbox_changed();
            }
        };
        acts.RotateTowardAngle = function (amt, target)
        {
            var newangle = cr.angleRotate(this.angle, cr.to_radians(target), cr.to_radians(amt));
            if (isNaN(newangle))
                return;
            if (this.angle !== newangle)
            {
                this.angle = newangle;
                this.set_bbox_changed();
            }
        };
        acts.RotateTowardPosition = function (amt, x, y)
        {
            var dx = x - this.x;
            var dy = y - this.y;
            var target = Math.atan2(dy, dx);
            var newangle = cr.angleRotate(this.angle, target, cr.to_radians(amt));
            if (isNaN(newangle))
                return;
            if (this.angle !== newangle)
            {
                this.angle = newangle;
                this.set_bbox_changed();
            }
        };
        acts.SetTowardPosition = function (x, y)
        {
            var dx = x - this.x;
            var dy = y - this.y;
            var newangle = Math.atan2(dy, dx);
            if (isNaN(newangle))
                return;
            if (this.angle !== newangle)
            {
                this.angle = newangle;
                this.set_bbox_changed();
            }
        };
        exps.Angle = function (ret)
        {
            ret.set_float(cr.to_clamped_degrees(this.angle));
        };
    }
    if (!singleglobal_)
    {
        cnds.CompareInstanceVar = function (iv, cmp, val)
        {
            return cr.do_cmp(this.instance_vars[iv], cmp, val);
        };
        cnds.IsBoolInstanceVarSet = function (iv)
        {
            return this.instance_vars[iv];
        };
		cnds.PickByUID = function (u)
		{
			return this.uid === u;
		};
		cnds.OnCreated = function ()
		{
			return true;
		};
		cnds.OnDestroyed = function ()
		{
			return true;
		};
        acts.SetInstanceVar = function (iv, val)
        {
			var myinstvars = this.instance_vars;
            if (cr.is_number(myinstvars[iv]))
            {
                if (cr.is_number(val))
                    myinstvars[iv] = val;
                else
                    myinstvars[iv] = parseFloat(val);
            }
            else if (cr.is_string(myinstvars[iv]))
            {
                if (cr.is_string(val))
                    myinstvars[iv] = val;
                else
                    myinstvars[iv] = val.toString();
            }
            else
;
        };
        acts.AddInstanceVar = function (iv, val)
        {
			var myinstvars = this.instance_vars;
            if (cr.is_number(myinstvars[iv]))
            {
                if (cr.is_number(val))
                    myinstvars[iv] += val;
                else
                    myinstvars[iv] += parseFloat(val);
            }
            else if (cr.is_string(myinstvars[iv]))
            {
                if (cr.is_string(val))
                    myinstvars[iv] += val;
                else
                    myinstvars[iv] += val.toString();
            }
            else
;
        };
        acts.SubInstanceVar = function (iv, val)
        {
			var myinstvars = this.instance_vars;
            if (cr.is_number(myinstvars[iv]))
            {
                if (cr.is_number(val))
                    myinstvars[iv] -= val;
                else
                    myinstvars[iv] -= parseFloat(val);
            }
            else
;
        };
        acts.SetBoolInstanceVar = function (iv, val)
        {
            this.instance_vars[iv] = val ? 1 : 0;
        };
        acts.ToggleBoolInstanceVar = function (iv)
        {
            this.instance_vars[iv] = 1 - this.instance_vars[iv];
        };
        acts.Destroy = function ()
        {
            this.runtime.DestroyInstance(this);
        };
        exps.Count = function (ret)
        {
			var count = ret.object_class.instances.length;
			var i, len, inst;
			for (i = 0, len = this.runtime.createRow.length; i < len; i++)
			{
				inst = this.runtime.createRow[i];
				if (ret.object_class.is_family)
				{
					if (inst.type.families.indexOf(ret.object_class) >= 0)
						count++;
				}
				else
				{
					if (inst.type === ret.object_class)
						count++;
				}
			}
            ret.set_int(count);
        };
		exps.PickedCount = function (ret)
        {
            ret.set_int(ret.object_class.getCurrentSol().getObjects().length);
        };
		exps.UID = function (ret)
		{
			ret.set_int(this.uid);
		};
		exps.IID = function (ret)
		{
			ret.set_int(this.get_iid());
		};
    }
    if (appearance_aces)
    {
        cnds.IsVisible = function ()
        {
            return this.visible;
        };
        acts.SetVisible = function (v)
        {
			if (!v !== !this.visible)
			{
				this.visible = v;
				this.runtime.redraw = true;
			}
        };
        cnds.CompareOpacity = function (cmp, x)
        {
            return cr.do_cmp(cr.round6dp(this.opacity * 100), cmp, x);
        };
        acts.SetOpacity = function (x)
        {
            var new_opacity = x / 100.0;
            if (new_opacity < 0)
                new_opacity = 0;
            else if (new_opacity > 1)
                new_opacity = 1;
            if (new_opacity !== this.opacity)
            {
                this.opacity = new_opacity;
                this.runtime.redraw = true;
            }
        };
        exps.Opacity = function (ret)
        {
            ret.set_float(cr.round6dp(this.opacity * 100.0));
        };
    }
	if (zorder_aces)
	{
		cnds.IsOnLayer = function (layer_)
		{
			if (!layer_)
				return false;
			return this.layer === layer_;
		};
		cnds.PickTopBottom = function (which_)
		{
			var sol = this.getCurrentSol();
			var instances = sol.getObjects();
			if (!instances.length)
				return false;
			var inst = instances[0];
			var pickme = inst;
			var i, len;
			for (i = 1, len = instances.length; i < len; i++)
			{
				inst = instances[i];
				if (which_ === 0)
				{
					if (inst.layer.index > pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() > pickme.get_zindex()))
					{
						pickme = inst;
					}
				}
				else
				{
					if (inst.layer.index < pickme.layer.index || (inst.layer.index === pickme.layer.index && inst.get_zindex() < pickme.get_zindex()))
					{
						pickme = inst;
					}
				}
			}
			sol.pick_one(pickme);
			return true;
		};
		acts.MoveToTop = function ()
		{
			var zindex = this.get_zindex();
			if (zindex === this.layer.instances.length - 1)
				return;
			cr.arrayRemove(this.layer.instances, zindex);
			this.layer.instances.push(this);
			this.runtime.redraw = true;
			this.layer.zindices_stale = true;
		};
		acts.MoveToBottom = function ()
		{
			var zindex = this.get_zindex();
			if (zindex === 0)
				return;
			cr.arrayRemove(this.layer.instances, zindex);
			this.layer.instances.unshift(this);
			this.runtime.redraw = true;
			this.layer.zindices_stale = true;
		};
		acts.MoveToLayer = function (layerMove)
		{
			if (!layerMove || layerMove == this.layer)
				return;
			cr.arrayRemove(this.layer.instances, this.get_zindex());
			this.layer.zindices_stale = true;
			this.layer = layerMove;
			this.zindex = layerMove.instances.length;
			layerMove.instances.push(this);
			this.runtime.redraw = true;
		};
		acts.ZMoveToObject = function (where_, obj_)
		{
			var isafter = (where_ === 0);
			if (!obj_)
				return;
			var other = obj_.getFirstPicked(this);
			if (!other || other.uid === this.uid)
				return;
			if (this.layer.index !== other.layer.index)
			{
				cr.arrayRemove(this.layer.instances, this.get_zindex());
				this.layer.zindices_stale = true;
				this.layer = other.layer;
				this.zindex = other.layer.instances.length;
				other.layer.instances.push(this);
			}
			var myZ = this.get_zindex();
			var insertZ = other.get_zindex();
			cr.arrayRemove(this.layer.instances, myZ);
			if (myZ < insertZ)
				insertZ--;
			if (isafter)
				insertZ++;
			if (insertZ === this.layer.instances.length)
				this.layer.instances.push(this);
			else
				this.layer.instances.splice(insertZ, 0, this);
			this.layer.zindices_stale = true;
			this.runtime.redraw = true;
		};
		exps.LayerNumber = function (ret)
		{
			ret.set_int(this.layer.number);
		};
		exps.LayerName = function (ret)
		{
			ret.set_string(this.layer.name);
		};
		exps.ZIndex = function (ret)
		{
			ret.set_int(this.get_zindex());
		};
	}
	if (effects_aces)
	{
		acts.SetEffectEnabled = function (enable_, effectname_)
		{
			if (!this.runtime.glwrap)
				return;
			var i = this.type.getEffectIndexByName(effectname_);
			if (i < 0)
				return;		// effect name not found
			var enable = (enable_ === 1);
			if (this.active_effect_flags[i] === enable)
				return;		// no change
			this.active_effect_flags[i] = enable;
			this.updateActiveEffects();
			this.runtime.redraw = true;
		};
		acts.SetEffectParam = function (effectname_, index_, value_)
		{
			if (!this.runtime.glwrap)
				return;
			var i = this.type.getEffectIndexByName(effectname_);
			if (i < 0)
				return;		// effect name not found
			var et = this.type.effect_types[i];
			var params = this.effect_params[i];
			index_ = Math.floor(index_);
			if (index_ < 0 || index_ >= params.length)
				return;		// effect index out of bounds
			if (this.runtime.glwrap.getProgramParameterType(et.shaderindex, index_) === 1)
				value_ /= 100.0;
			if (params[index_] === value_)
				return;		// no change
			params[index_] = value_;
			if (et.active)
				this.runtime.redraw = true;
		};
	}
};
cr.set_bbox_changed = function ()
{
    this.bbox_changed = true;       // will recreate next time box requested
    this.runtime.redraw = true;     // assume runtime needs to redraw
	var i, len;
	for (i = 0, len = this.bbox_changed_callbacks.length; i < len; i++)
	{
		this.bbox_changed_callbacks[i](this);
	}
};
cr.add_bbox_changed_callback = function (f)
{
	if (f)
		this.bbox_changed_callbacks.push(f);
};
cr.update_bbox = function ()
{
    if (!this.bbox_changed)
        return;                 // bounding box not changed
    this.bbox.set(this.x, this.y, this.x + this.width, this.y + this.height);
    this.bbox.offset(-this.hotspotX * this.width, -this.hotspotY * this.height);
    if (!this.angle)
    {
        this.bquad.set_from_rect(this.bbox);    // make bounding quad from box
    }
    else
    {
        this.bbox.offset(-this.x, -this.y);       					// translate to origin
        this.bquad.set_from_rotated_rect(this.bbox, this.angle);	// rotate around origin
        this.bquad.offset(this.x, this.y);      					// translate back to original position
        this.bquad.bounding_box(this.bbox);
    }
	var temp = 0;
	if (this.bbox.left > this.bbox.right)
	{
		temp = this.bbox.left;
		this.bbox.left = this.bbox.right;
		this.bbox.right = temp;
	}
	if (this.bbox.top > this.bbox.bottom)
	{
		temp = this.bbox.top;
		this.bbox.top = this.bbox.bottom;
		this.bbox.bottom = temp;
	}
    this.bbox_changed = false;  // bounding box up to date
};
cr.inst_contains_pt = function (x, y)
{
	if (!this.bbox.contains_pt(x, y))
		return false;
	if (!this.bquad.contains_pt(x, y))
		return false;
	if (this.collision_poly && !this.collision_poly.is_empty())
	{
		this.collision_poly.cache_poly(this.width, this.height, this.angle);
		return this.collision_poly.contains_pt(x - this.x, y - this.y);
	}
	else
		return true;
};
cr.inst_get_iid = function ()
{
	this.type.updateIIDs();
	return this.iid;
};
cr.inst_get_zindex = function ()
{
	this.layer.updateZIndices();
	return this.zindex;
};
cr.inst_updateActiveEffects = function ()
{
	this.active_effect_types.length = 0;
	var i, len, et, inst;
	for (i = 0, len = this.active_effect_flags.length; i < len; i++)
	{
		if (this.active_effect_flags[i])
			this.active_effect_types.push(this.type.effect_types[i]);
	}
	this.uses_shaders = !!this.active_effect_types.length;
};
cr.inst_toString = function ()
{
	return "Inst" + this.puid;
};
cr.type_getFirstPicked = function (frominst)
{
	if (frominst && frominst.is_contained && frominst.type != this)
	{
		var i, len, s;
		for (i = 0, len = frominst.siblings.length; i < len; i++)
		{
			s = frominst.siblings[i];
			if (s.type == this)
				return s;
		}
	}
    var instances = this.getCurrentSol().getObjects();
    if (instances.length)
        return instances[0];
    else
        return null;
};
cr.type_getPairedInstance = function (inst)
{
	var instances = this.getCurrentSol().getObjects();
	if (instances.length)
		return instances[inst.get_iid() % instances.length];
	else
		return null;
};
cr.type_updateIIDs = function ()
{
	if (!this.stale_iids || this.is_family)
		return;		// up to date or is family - don't want family to overwrite IIDs
	var i, len;
	for (i = 0, len = this.instances.length; i < len; i++)
		this.instances[i].iid = i;
	this.stale_iids = false;
};
cr.type_getCurrentSol = function ()
{
    return this.solstack[this.cur_sol];
};
cr.type_pushCleanSol = function ()
{
    this.cur_sol++;
    if (this.cur_sol === this.solstack.length)
        this.solstack.push(new cr.selection(this));
    else
        this.solstack[this.cur_sol].select_all = true;  // else clear next SOL
};
cr.type_pushCopySol = function ()
{
    this.cur_sol++;
    if (this.cur_sol === this.solstack.length)
        this.solstack.push(new cr.selection(this));
    var clonesol = this.solstack[this.cur_sol];
    var prevsol = this.solstack[this.cur_sol - 1];
    if (prevsol.select_all)
        clonesol.select_all = true;
    else
    {
        clonesol.select_all = false;
		cr.shallowAssignArray(clonesol.instances, prevsol.instances);
    }
};
cr.type_popSol = function ()
{
;
    this.cur_sol--;
};
cr.type_getBehaviorByName = function (behname)
{
    var i, len, j, lenj, f, index = 0;
	if (!this.is_family)
	{
		for (i = 0, len = this.families.length; i < len; i++)
		{
			f = this.families[i];
			for (j = 0, lenj = f.behaviors.length; j < lenj; j++)
			{
				if (behname === f.behaviors[j].name)
				{
					this.extra.lastBehIndex = index;
					return f.behaviors[j];
				}
				index++;
			}
		}
	}
    for (i = 0, len = this.behaviors.length; i < len; i++) {
        if (behname === this.behaviors[i].name)
		{
			this.extra.lastBehIndex = index;
            return this.behaviors[i];
		}
		index++;
    }
	return null;
};
cr.type_getBehaviorIndexByName = function (behname)
{
    var b = this.getBehaviorByName(behname);
	if (b)
		return this.extra.lastBehIndex;
	else
		return -1;
};
cr.type_getEffectIndexByName = function (name_)
{
	var i, len;
	for (i = 0, len = this.effect_types.length; i < len; i++)
	{
		if (this.effect_types[i].name === name_)
			return i;
	}
	return -1;
};
cr.type_applySolToContainer = function ()
{
	if (!this.is_contained || this.is_family)
		return;
	var i, len, j, lenj, t, sol, sol2;
	this.updateIIDs();
	sol = this.getCurrentSol();
	var select_all = sol.select_all;
	var es = this.runtime.getCurrentEventStack();
	var orblock = es && es.current_event && es.current_event.orblock;
	for (i = 0, len = this.container.length; i < len; i++)
	{
		t = this.container[i];
		if (t === this)
			continue;
		t.updateIIDs();
		sol2 = t.getCurrentSol();
		sol2.select_all = select_all;
		if (!select_all)
		{
			sol2.instances.length = sol.instances.length;
			for (j = 0, lenj = sol.instances.length; j < lenj; j++)
				sol2.instances[j] = t.instances[sol.instances[j].iid];
			if (orblock)
			{
				sol2.else_instances.length = sol.else_instances.length;
				for (j = 0, lenj = sol.else_instances.length; j < lenj; j++)
					sol2.else_instances[j] = t.instances[sol.else_instances[j].iid];
			}
		}
	}
};
cr.type_toString = function ()
{
	return "Type" + this.sid;
};
cr.do_cmp = function (x, cmp, y)
{
	if (typeof x === "undefined" || typeof y === "undefined")
		return false;
    switch (cmp)
    {
        case 0:     // equal
            return x === y;
        case 1:     // not equal
            return x !== y;
        case 2:     // less
            return x < y;
        case 3:     // less/equal
            return x <= y;
        case 4:     // greater
            return x > y;
        case 5:     // greater/equal
            return x >= y;
        default:
;
            return false;
    }
};
cr.shaders = {};
;
;
cr.plugins_.Audio = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Audio.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	var audRuntime = null;
	var audInst = null;
	var audTag = "";
	var appPath = "";			// for PhoneGap only
	var API_HTML5 = 0;
	var API_WEBAUDIO = 1;
	var API_PHONEGAP = 2;
	var API_APPMOBI = 3;
	var api = API_HTML5;
	var context = null;
	var audioBuffers = [];		// cache of buffers
	var audioInstances = [];	// cache of instances
	var lastAudio = null;
	var useOgg = false;			// determined at create time
	var timescale_mode = 0;
	var silent = false;
	var masterVolume = 1;
	var panningModel = 1;		// HRTF
	var distanceModel = 1;		// Inverse
	var refDistance = 10;
	var maxDistance = 10000;
	var rolloffFactor = 1;
	var micSource = null;
	var micTag = "";
	function dbToLinear(x)
	{
		var v = dbToLinear_nocap(x);
		if (v < 0)
			v = 0;
		if (v > 1)
			v = 1;
		return v;
	};
	function linearToDb(x)
	{
		if (x < 0)
			x = 0;
		if (x > 1)
			x = 1;
		return linearToDb_nocap(x);
	};
	function dbToLinear_nocap(x)
	{
		return Math.pow(10, x / 20);
	};
	function linearToDb_nocap(x)
	{
		return (Math.log(x) / Math.log(10)) * 20;
	};
	var effects = {};
	function getDestinationForTag(tag)
	{
		tag = tag.toLowerCase();
		if (effects.hasOwnProperty(tag))
		{
			if (effects[tag].length)
				return effects[tag][0].getInputNode();
		}
		return context["destination"];
	};
	function createGain()
	{
		if (context["createGain"])
			return context["createGain"]();
		else
			return context["createGainNode"]();
	};
	function createDelay(d)
	{
		if (context["createDelay"])
			return context["createDelay"](d);
		else
			return context["createDelayNode"](d);
	};
	function startSource(s)
	{
		if (s["start"])
			s["start"](0);
		else
			s["noteOn"](0);
	};
	function startSourceAt(s, x, d)
	{
		if (s["start"])
			s["start"](0, x);
		else
			s["noteGrainOn"](0, x, d - x);
	};
	function stopSource(s)
	{
		if (s["stop"])
			s["stop"](0);
		else
			s["noteOff"](0);
	};
	function setAudioParam(ap, value, ramp, time)
	{
		if (!ap)
			return;		// iOS is missing some parameters
		ap["cancelScheduledValues"](0);
		if (time === 0)
		{
			ap["value"] = value;
			return;
		}
		var curTime = context["currentTime"];
		time += curTime;
		switch (ramp) {
		case 0:		// step
			ap["setValueAtTime"](value, time);
			break;
		case 1:		// linear
			ap["setValueAtTime"](ap["value"], curTime);		// to set what to ramp from
			ap["linearRampToValueAtTime"](value, time);
			break;
		case 2:		// exponential
			ap["setValueAtTime"](ap["value"], curTime);		// to set what to ramp from
			ap["exponentialRampToValueAtTime"](value, time);
			break;
		}
	};
	var filterTypes = ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "peaking", "notch", "allpass"];
	function FilterEffect(type, freq, detune, q, gain, mix)
	{
		this.type = "filter";
		this.params = [type, freq, detune, q, gain, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.filterNode = context["createBiquadFilter"]();
		if (typeof this.filterNode["type"] === "number")
			this.filterNode["type"] = type;
		else
			this.filterNode["type"] = filterTypes[type];
		this.filterNode["frequency"]["value"] = freq;
		if (this.filterNode["detune"])		// iOS 6 doesn't have detune yet
			this.filterNode["detune"]["value"] = detune;
		this.filterNode["Q"]["value"] = q;
		this.filterNode["gain"]["value"] = gain;
		this.inputNode["connect"](this.filterNode);
		this.inputNode["connect"](this.dryNode);
		this.filterNode["connect"](this.wetNode);
	};
	FilterEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	FilterEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.filterNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	FilterEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	FilterEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 1:		// filter frequency
			this.params[0] = value;
			setAudioParam(this.filterNode["frequency"], value, ramp, time);
			break;
		case 2:		// filter detune
			this.params[1] = value;
			setAudioParam(this.filterNode["detune"], value, ramp, time);
			break;
		case 3:		// filter Q
			this.params[2] = value;
			setAudioParam(this.filterNode["Q"], value, ramp, time);
			break;
		case 4:		// filter/delay gain (note value is in dB here)
			this.params[3] = value;
			setAudioParam(this.filterNode["gain"], value, ramp, time);
			break;
		}
	};
	function DelayEffect(delayTime, delayGain, mix)
	{
		this.type = "delay";
		this.params = [delayTime, delayGain, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.mainNode = createGain();
		this.delayNode = createDelay(delayTime);
		this.delayNode["delayTime"]["value"] = delayTime;
		this.delayGainNode = createGain();
		this.delayGainNode["gain"]["value"] = delayGain;
		this.inputNode["connect"](this.mainNode);
		this.inputNode["connect"](this.dryNode);
		this.mainNode["connect"](this.wetNode);
		this.mainNode["connect"](this.delayNode);
		this.delayNode["connect"](this.delayGainNode);
		this.delayGainNode["connect"](this.mainNode);
	};
	DelayEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	DelayEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.mainNode["disconnect"]();
		this.delayNode["disconnect"]();
		this.delayGainNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	DelayEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	DelayEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[2] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 4:		// filter/delay gain (note value is passed in dB but needs to be linear here)
			this.params[1] = dbToLinear(value);
			setAudioParam(this.delayGainNode["gain"], dbToLinear(value), ramp, time);
			break;
		case 5:		// delay time
			this.params[0] = value;
			setAudioParam(this.delayNode["delayTime"], value, ramp, time);
			break;
		}
	};
	function ConvolveEffect(buffer, normalize, mix, src)
	{
		this.type = "convolve";
		this.params = [normalize, mix, src];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.convolveNode = context["createConvolver"]();
		if (buffer)
		{
			this.convolveNode["normalize"] = normalize;
			this.convolveNode["buffer"] = buffer;
		}
		this.inputNode["connect"](this.convolveNode);
		this.inputNode["connect"](this.dryNode);
		this.convolveNode["connect"](this.wetNode);
	};
	ConvolveEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	ConvolveEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.convolveNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	ConvolveEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	ConvolveEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		}
	};
	function FlangerEffect(delay, modulation, freq, feedback, mix)
	{
		this.type = "flanger";
		this.params = [delay, modulation, freq, feedback, mix];
		this.inputNode = createGain();
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - (mix / 2);
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix / 2;
		this.feedbackNode = createGain();
		this.feedbackNode["gain"]["value"] = feedback;
		this.delayNode = createDelay(delay + modulation);
		this.delayNode["delayTime"]["value"] = delay;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = modulation;
		this.inputNode["connect"](this.delayNode);
		this.inputNode["connect"](this.dryNode);
		this.delayNode["connect"](this.wetNode);
		this.delayNode["connect"](this.feedbackNode);
		this.feedbackNode["connect"](this.delayNode);
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.delayNode["delayTime"]);
		startSource(this.oscNode);
	};
	FlangerEffect.prototype.connectTo = function (node)
	{
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
	};
	FlangerEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.delayNode["disconnect"]();
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.dryNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.feedbackNode["disconnect"]();
	};
	FlangerEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	FlangerEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value / 2, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - (value / 2), ramp, time);
			break;
		case 6:		// modulation
			this.params[1] = value / 1000;
			setAudioParam(this.oscGainNode["gain"], value / 1000, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[2] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		case 8:		// feedback
			this.params[3] = value / 100;
			setAudioParam(this.feedbackNode["gain"], value / 100, ramp, time);
			break;
		}
	};
	function PhaserEffect(freq, detune, q, modulation, modfreq, mix)
	{
		this.type = "phaser";
		this.params = [freq, detune, q, modulation, modfreq, mix];
		this.inputNode = createGain();
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - (mix / 2);
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix / 2;
		this.filterNode = context["createBiquadFilter"]();
		if (typeof this.filterNode["type"] === "number")
			this.filterNode["type"] = 7;	// all-pass
		else
			this.filterNode["type"] = "allpass";
		this.filterNode["frequency"]["value"] = freq;
		if (this.filterNode["detune"])		// iOS 6 doesn't have detune yet
			this.filterNode["detune"]["value"] = detune;
		this.filterNode["Q"]["value"] = q;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = modfreq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = modulation;
		this.inputNode["connect"](this.filterNode);
		this.inputNode["connect"](this.dryNode);
		this.filterNode["connect"](this.wetNode);
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.filterNode["frequency"]);
		startSource(this.oscNode);
	};
	PhaserEffect.prototype.connectTo = function (node)
	{
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
	};
	PhaserEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.filterNode["disconnect"]();
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.dryNode["disconnect"]();
		this.wetNode["disconnect"]();
	};
	PhaserEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	PhaserEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[5] = value;
			setAudioParam(this.wetNode["gain"], value / 2, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - (value / 2), ramp, time);
			break;
		case 1:		// filter frequency
			this.params[0] = value;
			setAudioParam(this.filterNode["frequency"], value, ramp, time);
			break;
		case 2:		// filter detune
			this.params[1] = value;
			setAudioParam(this.filterNode["detune"], value, ramp, time);
			break;
		case 3:		// filter Q
			this.params[2] = value;
			setAudioParam(this.filterNode["Q"], value, ramp, time);
			break;
		case 6:		// modulation
			this.params[3] = value;
			setAudioParam(this.oscGainNode["gain"], value, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[4] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function GainEffect(g)
	{
		this.type = "gain";
		this.params = [g];
		this.node = createGain();
		this.node["gain"]["value"] = g;
	};
	GainEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	GainEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	GainEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	GainEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 4:		// gain
			this.params[0] = dbToLinear(value);
			setAudioParam(this.node["gain"], dbToLinear(value), ramp, time);
			break;
		}
	};
	function TremoloEffect(freq, mix)
	{
		this.type = "tremolo";
		this.params = [freq, mix];
		this.node = createGain();
		this.node["gain"]["value"] = 1 - (mix / 2);
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscGainNode = createGain();
		this.oscGainNode["gain"]["value"] = mix / 2;
		this.oscNode["connect"](this.oscGainNode);
		this.oscGainNode["connect"](this.node["gain"]);
		startSource(this.oscNode);
	};
	TremoloEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	TremoloEffect.prototype.remove = function ()
	{
		this.oscNode["disconnect"]();
		this.oscGainNode["disconnect"]();
		this.node["disconnect"]();
	};
	TremoloEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	TremoloEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.node["gain"]["value"], 1 - (value / 2), ramp, time);
			setAudioParam(this.oscGainNode["gain"]["value"], value / 2, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[0] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function RingModulatorEffect(freq, mix)
	{
		this.type = "ringmod";
		this.params = [freq, mix];
		this.inputNode = createGain();
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.ringNode = createGain();
		this.ringNode["gain"]["value"] = 0;
		this.oscNode = context["createOscillator"]();
		this.oscNode["frequency"]["value"] = freq;
		this.oscNode["connect"](this.ringNode["gain"]);
		startSource(this.oscNode);
		this.inputNode["connect"](this.ringNode);
		this.inputNode["connect"](this.dryNode);
		this.ringNode["connect"](this.wetNode);
	};
	RingModulatorEffect.prototype.connectTo = function (node_)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node_);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node_);
	};
	RingModulatorEffect.prototype.remove = function ()
	{
		this.oscNode["disconnect"]();
		this.ringNode["disconnect"]();
		this.inputNode["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	RingModulatorEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	RingModulatorEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[1] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		case 7:		// modulation frequency
			this.params[0] = value;
			setAudioParam(this.oscNode["frequency"], value, ramp, time);
			break;
		}
	};
	function DistortionEffect(threshold, headroom, drive, makeupgain, mix)
	{
		this.type = "distortion";
		this.params = [threshold, headroom, drive, makeupgain, mix];
		this.inputNode = createGain();
		this.preGain = createGain();
		this.postGain = createGain();
		this.setDrive(drive, dbToLinear_nocap(makeupgain));
		this.wetNode = createGain();
		this.wetNode["gain"]["value"] = mix;
		this.dryNode = createGain();
		this.dryNode["gain"]["value"] = 1 - mix;
		this.waveShaper = context["createWaveShaper"]();
		this.curve = new Float32Array(65536);
		this.generateColortouchCurve(threshold, headroom);
		this.waveShaper.curve = this.curve;
		this.inputNode["connect"](this.preGain);
		this.inputNode["connect"](this.dryNode);
		this.preGain["connect"](this.waveShaper);
		this.waveShaper["connect"](this.postGain);
		this.postGain["connect"](this.wetNode);
	};
	DistortionEffect.prototype.setDrive = function (drive, makeupgain)
	{
		if (drive < 0.01)
			drive = 0.01;
		this.preGain["gain"]["value"] = drive;
		this.postGain["gain"]["value"] = Math.pow(1 / drive, 0.6) * makeupgain;
	};
	function e4(x, k)
	{
		return 1.0 - Math.exp(-k * x);
	}
	DistortionEffect.prototype.shape = function (x, linearThreshold, linearHeadroom)
	{
		var maximum = 1.05 * linearHeadroom * linearThreshold;
		var kk = (maximum - linearThreshold);
		var sign = x < 0 ? -1 : +1;
		var absx = x < 0 ? -x : x;
		var shapedInput = absx < linearThreshold ? absx : linearThreshold + kk * e4(absx - linearThreshold, 1.0 / kk);
		shapedInput *= sign;
		return shapedInput;
	};
	DistortionEffect.prototype.generateColortouchCurve = function (threshold, headroom)
	{
		var linearThreshold = dbToLinear_nocap(threshold);
		var linearHeadroom = dbToLinear_nocap(headroom);
		var n = 65536;
		var n2 = n / 2;
		var x = 0;
		for (var i = 0; i < n2; ++i) {
			x = i / n2;
			x = this.shape(x, linearThreshold, linearHeadroom);
			this.curve[n2 + i] = x;
			this.curve[n2 - i - 1] = -x;
		}
	};
	DistortionEffect.prototype.connectTo = function (node)
	{
		this.wetNode["disconnect"]();
		this.wetNode["connect"](node);
		this.dryNode["disconnect"]();
		this.dryNode["connect"](node);
	};
	DistortionEffect.prototype.remove = function ()
	{
		this.inputNode["disconnect"]();
		this.preGain["disconnect"]();
		this.waveShaper["disconnect"]();
		this.postGain["disconnect"]();
		this.wetNode["disconnect"]();
		this.dryNode["disconnect"]();
	};
	DistortionEffect.prototype.getInputNode = function ()
	{
		return this.inputNode;
	};
	DistortionEffect.prototype.setParam = function(param, value, ramp, time)
	{
		switch (param) {
		case 0:		// mix
			value = value / 100;
			if (value < 0) value = 0;
			if (value > 1) value = 1;
			this.params[4] = value;
			setAudioParam(this.wetNode["gain"], value, ramp, time);
			setAudioParam(this.dryNode["gain"], 1 - value, ramp, time);
			break;
		}
	};
	function CompressorEffect(threshold, knee, ratio, attack, release)
	{
		this.type = "compressor";
		this.params = [threshold, knee, ratio, attack, release];
		this.node = context["createDynamicsCompressor"]();
		this.node["threshold"]["value"] = threshold;
		this.node["knee"]["value"] = knee;
		this.node["ratio"]["value"] = ratio;
		this.node["attack"]["value"] = attack;
		this.node["release"]["value"] = release;
	};
	CompressorEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	CompressorEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	CompressorEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	CompressorEffect.prototype.setParam = function(param, value, ramp, time)
	{
	};
	function AnalyserEffect(fftSize, smoothing)
	{
		this.type = "analyser";
		this.params = [fftSize, smoothing];
		this.node = context["createAnalyser"]();
		this.node["fftSize"] = fftSize;
		this.node["smoothingTimeConstant"] = smoothing;
		this.freqBins = new Float32Array(this.node["frequencyBinCount"]);
		this.signal = new Uint8Array(fftSize);
		this.peak = 0;
		this.rms = 0;
	};
	AnalyserEffect.prototype.tick = function ()
	{
		this.node["getFloatFrequencyData"](this.freqBins);
		this.node["getByteTimeDomainData"](this.signal);
		var fftSize = this.node["fftSize"];
		var i = 0;
		this.peak = 0;
		var rmsSquaredSum = 0;
		var s = 0;
		for ( ; i < fftSize; i++)
		{
			s = (this.signal[i] - 128) / 128;
			if (s < 0)
				s = -s;
			if (this.peak < s)
				this.peak = s;
			rmsSquaredSum += s * s;
		}
		this.peak = linearToDb(this.peak);
		this.rms = linearToDb(Math.sqrt(rmsSquaredSum / fftSize));
	};
	AnalyserEffect.prototype.connectTo = function (node_)
	{
		this.node["disconnect"]();
		this.node["connect"](node_);
	};
	AnalyserEffect.prototype.remove = function ()
	{
		this.node["disconnect"]();
	};
	AnalyserEffect.prototype.getInputNode = function ()
	{
		return this.node;
	};
	AnalyserEffect.prototype.setParam = function(param, value, ramp, time)
	{
	};
	var OT_POS_SAMPLES = 4;
	function ObjectTracker()
	{
		this.obj = null;
		this.loadUid = 0;
		this.speeds = [];
		this.lastX = 0;
		this.lastY = 0;
		this.moveAngle = 0;
	};
	ObjectTracker.prototype.setObject = function (obj_)
	{
		this.obj = obj_;
		if (this.obj)
		{
			this.lastX = this.obj.x;
			this.lastY = this.obj.y;
		}
		this.speeds.length = 0;
	};
	ObjectTracker.prototype.hasObject = function ()
	{
		return !!this.obj;
	};
	ObjectTracker.prototype.tick = function (dt)
	{
		if (!this.obj)
			return;
		this.moveAngle = cr.angleTo(this.lastX, this.lastY, this.obj.x, this.obj.y);
		var s = cr.distanceTo(this.lastX, this.lastY, this.obj.x, this.obj.y) / dt;
		if (this.speeds.length < OT_POS_SAMPLES)
			this.speeds.push(s);
		else
		{
			this.speeds.shift();
			this.speeds.push(s);
		}
		this.lastX = this.obj.x;
		this.lastY = this.obj.y;
	};
	ObjectTracker.prototype.getSpeed = function ()
	{
		if (!this.speeds.length)
			return 0;
		var i, len, sum = 0;
		for (i = 0, len = this.speeds.length; i < len; i++)
		{
			sum += this.speeds[i];
		}
		return sum / this.speeds.length;
	};
	ObjectTracker.prototype.getVelocityX = function ()
	{
		return Math.cos(this.moveAngle) * this.getSpeed();
	};
	ObjectTracker.prototype.getVelocityY = function ()
	{
		return Math.sin(this.moveAngle) * this.getSpeed();
	};
	var iOShadtouch = false;	// has had touch input on iOS to work around web audio API muting
	function C2AudioBuffer(src_, is_music)
	{
		this.src = src_;
		this.myapi = api;
		this.is_music = is_music;
		this.added_end_listener = false;
		var self = this;
		this.outNode = null;
		this.mediaSourceNode = null;
		this.panWhenReady = [];		// for web audio API positioned sounds
		this.seekWhenReady = 0;
		this.pauseWhenReady = false;
		if (api === API_WEBAUDIO && is_music && !audRuntime.isiOS)
		{
			this.myapi = API_HTML5;
			this.outNode = createGain();
		}
		this.bufferObject = null;
		var request;
		switch (this.myapi) {
		case API_HTML5:
			if (is_music && audRuntime.isCocoonJs)
				CocoonJS["App"]["markAsMusic"](src_);
			this.bufferObject = new Audio();
			if (api === API_WEBAUDIO)
			{
				this.bufferObject.addEventListener("canplay", function ()
				{
					self.mediaSourceNode = context["createMediaElementSource"](self.bufferObject);
					self.mediaSourceNode["connect"](self.outNode);
				});
			}
			this.bufferObject.autoplay = false;	// this is only a source buffer, not an instance
			this.bufferObject.preload = "auto";
			this.bufferObject.src = src_;
			break;
		case API_WEBAUDIO:
			request = new XMLHttpRequest();
			request.open("GET", src_, true);
			request.responseType = "arraybuffer";
			request.onload = function () {
				if (context["decodeAudioData"])
				{
					context["decodeAudioData"](request.response, function (buffer) {
							self.bufferObject = buffer;
							var p, i, len, a;
							if (!cr.is_undefined(self.playTagWhenReady))
							{
								if (self.panWhenReady.length)
								{
									for (i = 0, len = self.panWhenReady.length; i < len; i++)
									{
										p = self.panWhenReady[i];
										a = new C2AudioInstance(self, p.thistag);
										a.setPannerEnabled(true);
										if (typeof p.objUid !== "undefined")
										{
											p.obj = audRuntime.getObjectByUID(p.objUid);
											if (!p.obj)
												continue;
										}
										if (p.obj)
										{
											a.setPan(p.obj.x, p.obj.y, cr.to_degrees(p.obj.angle), p.ia, p.oa, p.og);
											a.setObject(p.obj);
										}
										else
										{
											a.setPan(p.x, p.y, p.a, p.ia, p.oa, p.og);
										}
										a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
										if (self.pauseWhenReady)
											a.pause();
										audioInstances.push(a);
									}
									self.panWhenReady.length = 0;
								}
								else
								{
									a = new C2AudioInstance(self, self.playTagWhenReady);
									a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
									if (self.pauseWhenReady)
										a.pause();
									audioInstances.push(a);
								}
							}
							else if (!cr.is_undefined(self.convolveWhenReady))
							{
								var convolveNode = self.convolveWhenReady.convolveNode;
								convolveNode["normalize"] = self.normalizeWhenReady;
								convolveNode["buffer"] = buffer;
							}
					});
				}
				else
				{
					self.bufferObject = context["createBuffer"](request.response, false);
					if (!cr.is_undefined(self.playTagWhenReady))
					{
						var a = new C2AudioInstance(self, self.playTagWhenReady);
						a.play(self.loopWhenReady, self.volumeWhenReady, self.seekWhenReady);
						if (self.pauseWhenReady)
							a.pause();
						audioInstances.push(a);
					}
					else if (!cr.is_undefined(self.convolveWhenReady))
					{
						var convolveNode = self.convolveWhenReady.convolveNode;
						convolveNode["normalize"] = self.normalizeWhenReady;
						convolveNode["buffer"] = self.bufferObject;
					}
				}
			};
			request.send();
			break;
		case API_PHONEGAP:
			this.bufferObject = true;
			break;
		case API_APPMOBI:
			this.bufferObject = true;
			break;
		}
	};
	C2AudioBuffer.prototype.isLoaded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.bufferObject["readyState"] === 4;	// HAVE_ENOUGH_DATA
		case API_WEBAUDIO:
			return !!this.bufferObject;			// null until AJAX request completes
		case API_PHONEGAP:
			return true;
		case API_APPMOBI:
			return true;
		}
		return false;
	};
	function C2AudioInstance(buffer_, tag_)
	{
		var self = this;
		this.tag = tag_;
		this.fresh = true;
		this.stopped = true;
		this.src = buffer_.src;
		this.buffer = buffer_;
		this.myapi = api;
		this.is_music = buffer_.is_music;
		this.playbackRate = 1;
		this.pgended = true;			// for PhoneGap only: ended flag
		this.resume_me = false;			// make sure resumes when leaving suspend
		this.is_paused = false;
		this.resume_position = 0;		// for web audio api to resume from correct playback position
		this.looping = false;
		this.is_muted = false;
		this.is_silent = false;
		this.volume = 1;
		this.mutevol = 1;
		this.startTime = audRuntime.kahanTime.sum;
		this.gainNode = null;
		this.pannerNode = null;
		this.pannerEnabled = false;
		this.objectTracker = null;
		this.panX = 0;
		this.panY = 0;
		this.panAngle = 0;
		this.panConeInner = 0;
		this.panConeOuter = 0;
		this.panConeOuterGain = 0;
		this.instanceObject = null;
		var add_end_listener = false;
		switch (this.myapi) {
		case API_HTML5:
			if (this.is_music)
			{
				this.instanceObject = buffer_.bufferObject;
				add_end_listener = !buffer_.added_end_listener;
				buffer_.added_end_listener = true;
			}
			else
			{
				this.instanceObject = new Audio();
				this.instanceObject.autoplay = true;
				this.instanceObject.src = buffer_.bufferObject.src;
				add_end_listener = true;
			}
			if (add_end_listener)
			{
				this.instanceObject.addEventListener('ended', function () {
						audTag = self.tag;
						self.stopped = true;
						audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
				});
			}
			break;
		case API_WEBAUDIO:
			this.gainNode = createGain();
			this.gainNode["connect"](getDestinationForTag(tag_));
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (buffer_.bufferObject)
				{
					this.instanceObject = context["createBufferSource"]();
					this.instanceObject["buffer"] = buffer_.bufferObject;
					this.instanceObject["connect"](this.gainNode);
				}
			}
			else
			{
				this.instanceObject = this.buffer.bufferObject;		// reference the audio element
				this.buffer.outNode["connect"](this.gainNode);
			}
			break;
		case API_PHONEGAP:
			this.instanceObject = new window["Media"](appPath + this.src, null, null, function (status) {
					if (status === window["Media"]["MEDIA_STOPPED"])
					{
						self.pgended = true;
						self.stopped = true;
						audTag = self.tag;
						audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
					}
			});
			break;
		case API_APPMOBI:
			this.instanceObject = true;
			break;
		}
	};
	C2AudioInstance.prototype.hasEnded = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			return this.instanceObject.ended;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (!this.fresh && !this.stopped && this.instanceObject["loop"])
					return false;
				if (this.is_paused)
					return false;
				return (audRuntime.kahanTime.sum - this.startTime) > this.buffer.bufferObject["duration"];
			}
			else
				return this.instanceObject.ended;
		case API_PHONEGAP:
			return this.pgended;
		case API_APPMOBI:
			true;	// recycling an AppMobi sound does not matter because it will just do another throwaway playSound
		}
		return true;
	};
	C2AudioInstance.prototype.canBeRecycled = function ()
	{
		if (this.fresh || this.stopped)
			return true;		// not yet used or is not playing
		return this.hasEnded();
	};
	C2AudioInstance.prototype.setPannerEnabled = function (enable_)
	{
		if (api !== API_WEBAUDIO)
			return;
		if (!this.pannerEnabled && enable_)
		{
			if (!this.pannerNode)
			{
				this.pannerNode = context["createPanner"]();
				if (typeof this.pannerNode["panningModel"] === "number")
					this.pannerNode["panningModel"] = panningModel;
				else
					this.pannerNode["panningModel"] = ["equalpower", "HRTF", "soundfield"][panningModel];
				if (typeof this.pannerNode["distanceModel"] === "number")
					this.pannerNode["distanceModel"] = distanceModel;
				else
					this.pannerNode["distanceModel"] = ["linear", "inverse", "exponential"][distanceModel];
				this.pannerNode["refDistance"] = refDistance;
				this.pannerNode["maxDistance"] = maxDistance;
				this.pannerNode["rolloffFactor"] = rolloffFactor;
			}
			this.gainNode["disconnect"]();
			this.gainNode["connect"](this.pannerNode);
			this.pannerNode["connect"](getDestinationForTag(this.tag));
			this.pannerEnabled = true;
		}
		else if (this.pannerEnabled && !enable_)
		{
			this.pannerNode["disconnect"]();
			this.gainNode["disconnect"]();
			this.gainNode["connect"](getDestinationForTag(this.tag));
			this.pannerEnabled = false;
		}
	};
	C2AudioInstance.prototype.setPan = function (x, y, angle, innerangle, outerangle, outergain)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO)
			return;
		this.pannerNode["setPosition"](x, y, 0);
		this.pannerNode["setOrientation"](Math.cos(cr.to_radians(angle)), Math.sin(cr.to_radians(angle)), 0);
		this.pannerNode["coneInnerAngle"] = innerangle;
		this.pannerNode["coneOuterAngle"] = outerangle;
		this.pannerNode["coneOuterGain"] = outergain;
		this.panX = x;
		this.panY = y;
		this.panAngle = angle;
		this.panConeInner = innerangle;
		this.panConeOuter = outerangle;
		this.panConeOuterGain = outergain;
	};
	C2AudioInstance.prototype.setObject = function (o)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO)
			return;
		if (!this.objectTracker)
			this.objectTracker = new ObjectTracker();
		this.objectTracker.setObject(o);
	};
	C2AudioInstance.prototype.tick = function (dt)
	{
		if (!this.pannerEnabled || api !== API_WEBAUDIO || !this.objectTracker || !this.objectTracker.hasObject() || !this.isPlaying())
		{
			return;
		}
		this.objectTracker.tick(dt);
		this.pannerNode["setPosition"](this.objectTracker.obj.x, this.objectTracker.obj.y, 0);
		var a = 0;
		if (typeof this.objectTracker.obj.angle !== "undefined")
		{
			a = this.objectTracker.obj.angle;
			this.pannerNode["setOrientation"](Math.cos(a), Math.sin(a), 0);
		}
		this.pannerNode["setVelocity"](this.objectTracker.getVelocityX(), this.objectTracker.getVelocityY(), 0);
	};
	C2AudioInstance.prototype.play = function (looping, vol, fromPosition)
	{
		var instobj = this.instanceObject;
		this.looping = looping;
		this.volume = vol;
		var seekPos = fromPosition || 0;
		switch (this.myapi) {
		case API_HTML5:
			if (instobj.playbackRate !== 1.0)
				instobj.playbackRate = 1.0;
			if (instobj.volume !== vol * masterVolume)
				instobj.volume = vol * masterVolume;
			if (instobj.loop !== looping)
				instobj.loop = looping;
			if (instobj.muted)
				instobj.muted = false;
			if (instobj.currentTime !== seekPos)
			{
				try {
					instobj.currentTime = seekPos;
				}
				catch (err)
				{
;
				}
			}
			this.instanceObject.play();
			break;
		case API_WEBAUDIO:
			this.muted = false;
			this.mutevol = 1;
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (!this.fresh)
				{
					this.instanceObject = context["createBufferSource"]();
					this.instanceObject["buffer"] = this.buffer.bufferObject;
					this.instanceObject["connect"](this.gainNode);
				}
				this.instanceObject.loop = looping;
				this.gainNode["gain"]["value"] = vol * masterVolume;
				if (seekPos === 0)
					startSource(this.instanceObject);
				else
					startSourceAt(this.instanceObject, seekPos, this.getDuration());
			}
			else
			{
				if (instobj.playbackRate !== 1.0)
					instobj.playbackRate = 1.0;
				if (instobj.loop !== looping)
					instobj.loop = looping;
				this.gainNode["gain"]["value"] = vol * masterVolume;
				if (instobj.currentTime !== seekPos)
				{
					try {
						instobj.currentTime = seekPos;
					}
					catch (err)
					{
;
					}
				}
				instobj.play();
			}
			break;
		case API_PHONEGAP:
			if ((!this.fresh && this.stopped) || seekPos !== 0)
				instobj["seekTo"](seekPos);
			instobj["play"]();
			this.pgended = false;
			break;
		case API_APPMOBI:
			if (audRuntime.isDirectCanvas)
				AppMobi["context"]["playSound"](this.src);
			else
				AppMobi["player"]["playSound"](this.src);
			break;
		}
		this.playbackRate = 1;
		this.startTime = audRuntime.kahanTime.sum - seekPos;
		this.fresh = false;
		this.stopped = false;
		this.is_paused = false;
	};
	C2AudioInstance.prototype.stop = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			if (!this.instanceObject.paused)
				this.instanceObject.pause();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
				stopSource(this.instanceObject);
			else
			{
				if (!this.instanceObject.paused)
					this.instanceObject.pause();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["stop"]();
			break;
		case API_APPMOBI:
			break;
		}
		this.stopped = true;
		this.is_paused = false;
	};
	C2AudioInstance.prototype.pause = function ()
	{
		if (this.fresh || this.stopped || this.hasEnded() || this.is_paused)
			return;
		switch (this.myapi) {
		case API_HTML5:
			if (!this.instanceObject.paused)
				this.instanceObject.pause();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				this.resume_position = this.getPlaybackTime();
				if (this.looping)
					this.resume_position = this.resume_position % this.getDuration();
				stopSource(this.instanceObject);
			}
			else
			{
				if (!this.instanceObject.paused)
					this.instanceObject.pause();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["pause"]();
			break;
		case API_APPMOBI:
			break;
		}
		this.is_paused = true;
	};
	C2AudioInstance.prototype.resume = function ()
	{
		if (this.fresh || this.stopped || this.hasEnded() || !this.is_paused)
			return;
		switch (this.myapi) {
		case API_HTML5:
			this.instanceObject.play();
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				this.instanceObject = context["createBufferSource"]();
				this.instanceObject["buffer"] = this.buffer.bufferObject;
				this.instanceObject["connect"](this.gainNode);
				this.instanceObject.loop = this.looping;
				this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
				this.startTime = audRuntime.kahanTime.sum - this.resume_position;
				startSourceAt(this.instanceObject, this.resume_position, this.getDuration());
			}
			else
			{
				this.instanceObject.play();
			}
			break;
		case API_PHONEGAP:
			this.instanceObject["play"]();
			break;
		case API_APPMOBI:
			break;
		}
		this.is_paused = false;
	};
	C2AudioInstance.prototype.seek = function (pos)
	{
		if (this.fresh || this.stopped || this.hasEnded())
			return;
		switch (this.myapi) {
		case API_HTML5:
			try {
				this.instanceObject.currentTime = pos;
			}
			catch (e) {}
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.is_paused)
					this.resume_position = pos;
				else
				{
					this.pause();
					this.resume_position = pos;
					this.resume();
				}
			}
			else
			{
				try {
					this.instanceObject.currentTime = pos;
				}
				catch (e) {}
			}
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.reconnect = function (toNode)
	{
		if (this.myapi !== API_WEBAUDIO)
			return;
		if (this.pannerEnabled)
		{
			this.pannerNode["disconnect"]();
			this.pannerNode["connect"](toNode);
		}
		else
		{
			this.gainNode["disconnect"]();
			this.gainNode["connect"](toNode);
		}
	};
	C2AudioInstance.prototype.getDuration = function ()
	{
		switch (this.myapi) {
		case API_HTML5:
			if (typeof this.instanceObject.duration !== "undefined")
				return this.instanceObject.duration;
			else
				return 0;
		case API_WEBAUDIO:
			return this.buffer.bufferObject["duration"];
		case API_PHONEGAP:
			return this.instanceObject["getDuration"]();
		case API_APPMOBI:
			return 0;
		}
		return 0;
	};
	C2AudioInstance.prototype.getPlaybackTime = function ()
	{
		var duration = this.getDuration();
		var ret = 0;
		switch (this.myapi) {
		case API_HTML5:
			if (typeof this.instanceObject.currentTime !== "undefined")
				ret = this.instanceObject.currentTime;
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.is_paused)
					return this.resume_position;
				else
					ret = audRuntime.kahanTime.sum - this.startTime;
			}
			else if (typeof this.instanceObject.currentTime !== "undefined")
				ret = this.instanceObject.currentTime;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
		if (!this.looping && ret > duration)
			ret = duration;
		return ret;
	};
	C2AudioInstance.prototype.isPlaying = function ()
	{
		return !this.is_paused && !this.fresh && !this.stopped && !this.hasEnded();
	};
	C2AudioInstance.prototype.setVolume = function (v)
	{
		this.volume = v;
		this.updateVolume();
	};
	C2AudioInstance.prototype.updateVolume = function ()
	{
		var volToSet = this.volume * masterVolume;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.volume && this.instanceObject.volume !== volToSet)
				this.instanceObject.volume = volToSet;
			break;
		case API_WEBAUDIO:
			this.gainNode["gain"]["value"] = volToSet * this.mutevol;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.getVolume = function ()
	{
		return this.volume;
	};
	C2AudioInstance.prototype.doSetMuted = function (m)
	{
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.muted !== !!m)
				this.instanceObject.muted = !!m;
			break;
		case API_WEBAUDIO:
			this.mutevol = (m ? 0 : 1);
			this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setMuted = function (m)
	{
		this.is_muted = !!m;
		this.doSetMuted(this.is_muted || this.is_silent);
	};
	C2AudioInstance.prototype.setSilent = function (m)
	{
		this.is_silent = !!m;
		this.doSetMuted(this.is_muted || this.is_silent);
	};
	C2AudioInstance.prototype.setLooping = function (l)
	{
		this.looping = l;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.loop !== !!l)
				this.instanceObject.loop = !!l;
			break;
		case API_WEBAUDIO:
			if (this.instanceObject.loop !== !!l)
				this.instanceObject.loop = !!l;
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setPlaybackRate = function (r)
	{
		this.playbackRate = r;
		this.updatePlaybackRate();
	};
	C2AudioInstance.prototype.updatePlaybackRate = function ()
	{
		var r = this.playbackRate;
		if ((timescale_mode === 1 && !this.is_music) || timescale_mode === 2)
			r *= audRuntime.timescale;
		switch (this.myapi) {
		case API_HTML5:
			if (this.instanceObject.playbackRate !== r)
				this.instanceObject.playbackRate = r;
			break;
		case API_WEBAUDIO:
			if (this.buffer.myapi === API_WEBAUDIO)
			{
				if (this.instanceObject["playbackRate"]["value"] !== r)
					this.instanceObject["playbackRate"]["value"] = r;
			}
			else
			{
				if (this.instanceObject.playbackRate !== r)
					this.instanceObject.playbackRate = r;
			}
			break;
		case API_PHONEGAP:
			break;
		case API_APPMOBI:
			break;
		}
	};
	C2AudioInstance.prototype.setSuspended = function (s)
	{
		switch (this.myapi) {
		case API_HTML5:
			if (s)
			{
				if (this.isPlaying())
				{
					this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
					this.instanceObject["play"]();
			}
			break;
		case API_WEBAUDIO:
			if (s)
			{
				if (this.isPlaying())
				{
					if (this.buffer.myapi === API_WEBAUDIO)
					{
						this.resume_position = this.getPlaybackTime();
						if (this.looping)
							this.resume_position = this.resume_position % this.getDuration();
						stopSource(this.instanceObject);
					}
					else
						this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
				{
					if (this.buffer.myapi === API_WEBAUDIO)
					{
						this.instanceObject = context["createBufferSource"]();
						this.instanceObject["buffer"] = this.buffer.bufferObject;
						this.instanceObject["connect"](this.gainNode);
						this.instanceObject.loop = this.looping;
						this.gainNode["gain"]["value"] = masterVolume * this.volume * this.mutevol;
						this.startTime = audRuntime.kahanTime.sum - this.resume_position;
						startSourceAt(this.instanceObject, this.resume_position, this.getDuration());
					}
					else
					{
						this.instanceObject["play"]();
					}
				}
			}
			break;
		case API_PHONEGAP:
			if (s)
			{
				if (this.isPlaying())
				{
					this.instanceObject["pause"]();
					this.resume_me = true;
				}
				else
					this.resume_me = false;
			}
			else
			{
				if (this.resume_me)
					this.instanceObject["play"]();
			}
			break;
		case API_APPMOBI:
			break;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		audRuntime = this.runtime;
		audInst = this;
		this.listenerTracker = null;
		this.listenerZ = -600;
		context = null;
		if (typeof AudioContext !== "undefined")
		{
			api = API_WEBAUDIO;
			context = new AudioContext();
		}
		else if (typeof webkitAudioContext !== "undefined")
		{
			api = API_WEBAUDIO;
			context = new webkitAudioContext();
		}
		if (this.runtime.isiOS && api === API_WEBAUDIO)
		{
			document.addEventListener("touchstart", function () {
				if (iOShadtouch)
					return;
				var buffer = context["createBuffer"](1, 1, 22050);
				var source = context["createBufferSource"]();
				source["buffer"] = buffer;
				source["connect"](context["destination"]);
				startSource(source);
				iOShadtouch = true;
			}, true);
		}
		if (api !== API_WEBAUDIO)
		{
			if (this.runtime.isPhoneGap)
				api = API_PHONEGAP;
			else if (this.runtime.isAppMobi)
				api = API_APPMOBI;
		}
		if (api === API_PHONEGAP)
		{
			appPath = location.href;
			var i = appPath.lastIndexOf("/");
			if (i > -1)
				appPath = appPath.substr(0, i + 1);
			appPath = appPath.replace("file://", "");
		}
		if (this.runtime.isSafari && this.runtime.isWindows && typeof Audio === "undefined")
		{
			alert("It looks like you're using Safari for Windows without Quicktime.  Audio cannot be played until Quicktime is installed.");
			this.runtime.DestroyInstance(this);
		}
		else
		{
			if (this.runtime.isDirectCanvas)
				useOgg = this.runtime.isAndroid;		// AAC on iOS, OGG on Android
			else
			{
				try {
					useOgg = !!(new Audio().canPlayType('audio/ogg; codecs="vorbis"'));
				}
				catch (e)
				{
					useOgg = false;
				}
			}
			switch (api) {
			case API_HTML5:
;
				break;
			case API_WEBAUDIO:
;
				break;
			case API_PHONEGAP:
;
				break;
			case API_APPMOBI:
;
				break;
			default:
;
			}
			this.runtime.tickMe(this);
		}
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function ()
	{
		timescale_mode = this.properties[0];	// 0 = off, 1 = sounds only, 2 = all
		panningModel = this.properties[1];		// 0 = equalpower, 1 = hrtf, 3 = soundfield
		distanceModel = this.properties[2];		// 0 = linear, 1 = inverse, 2 = exponential
		this.listenerZ = -this.properties[3];
		refDistance = this.properties[4];
		maxDistance = this.properties[5];
		rolloffFactor = this.properties[6];
		this.listenerTracker = new ObjectTracker();
		if (api === API_WEBAUDIO)
		{
			context["listener"]["speedOfSound"] = this.properties[7];
			context["listener"]["dopplerFactor"] = this.properties[8];
			context["listener"]["setPosition"](this.runtime.width / 2, this.runtime.height / 2, this.listenerZ);
			context["listener"]["setOrientation"](0, 0, 1, 0, -1, 0);
			window["c2OnAudioMicStream"] = function (localMediaStream, tag)
			{
				if (micSource)
					micSource["disconnect"]();
				micTag = tag.toLowerCase();
				micSource = context["createMediaStreamSource"](localMediaStream);
				micSource["connect"](getDestinationForTag(micTag));
			};
		}
		this.runtime.addSuspendCallback(function(s)
		{
			audInst.onSuspend(s);
		});
		var self = this;
		this.runtime.addDestroyCallback(function (inst)
		{
			self.onInstanceDestroyed(inst);
		});
	};
	instanceProto.onInstanceDestroyed = function (inst)
	{
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (a.objectTracker)
			{
				if (a.objectTracker.obj === inst)
				{
					a.objectTracker.obj = null;
					if (a.pannerEnabled && a.isPlaying() && a.looping)
						a.stop();
				}
			}
		}
		if (this.listenerTracker.obj === inst)
			this.listenerTracker.obj = null;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"silent": silent,
			"masterVolume": masterVolume,
			"listenerZ": this.listenerZ,
			"listenerUid": this.listenerTracker.hasObject() ? this.listenerTracker.obj.uid : -1,
			"playing": [],
			"effects": {}
		};
		var playingarr = o["playing"];
		var i, len, a, d, p, panobj, playbackTime;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (!a.isPlaying())
				continue;		// no need to save stopped sounds
			playbackTime = a.getPlaybackTime();
			if (a.looping)
				playbackTime = playbackTime % a.getDuration();
			d = {
				"tag": a.tag,
				"buffersrc": a.buffer.src,
				"is_music": a.is_music,
				"playbackTime": playbackTime,
				"volume": a.volume,
				"looping": a.looping,
				"muted": a.is_muted,
				"playbackRate": a.playbackRate,
				"paused": a.is_paused,
				"resume_position": a.resume_position
			};
			if (a.pannerEnabled)
			{
				d["pan"] = {};
				panobj = d["pan"];
				if (a.objectTracker && a.objectTracker.hasObject())
				{
					panobj["objUid"] = a.objectTracker.obj.uid;
				}
				else
				{
					panobj["x"] = a.panX;
					panobj["y"] = a.panY;
					panobj["a"] = a.panAngle;
				}
				panobj["ia"] = a.panConeInner;
				panobj["oa"] = a.panConeOuter;
				panobj["og"] = a.panConeOuterGain;
			}
			playingarr.push(d);
		}
		var fxobj = o["effects"];
		var fxarr;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				fxarr = [];
				for (i = 0, len = effects[p].length; i < len; i++)
				{
					fxarr.push({ "type": effects[p][i].type, "params": effects[p][i].params });
				}
				fxobj[p] = fxarr;
			}
		}
		return o;
	};
	var objectTrackerUidsToLoad = [];
	instanceProto.loadFromJSON = function (o)
	{
		var setSilent = o["silent"];
		masterVolume = o["masterVolume"];
		this.listenerZ = o["listenerZ"];
		this.listenerTracker.setObject(null);
		var listenerUid = o["listenerUid"];
		if (listenerUid !== -1)
		{
			this.listenerTracker.loadUid = listenerUid;
			objectTrackerUidsToLoad.push(this.listenerTracker);
		}
		var playingarr = o["playing"];
		var i, len, d, src, is_music, tag, playbackTime, looping, vol, b, a, p, pan, panObjUid;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			audioInstances[i].stop();
		}
		var fxarr, fxtype, fxparams, fx;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				for (i = 0, len = effects[p].length; i < len; i++)
					effects[p][i].remove();
			}
		}
		cr.wipe(effects);
		for (p in o["effects"])
		{
			if (o["effects"].hasOwnProperty(p))
			{
				fxarr = o["effects"][p];
				for (i = 0, len = fxarr.length; i < len; i++)
				{
					fxtype = fxarr[i]["type"];
					fxparams = fxarr[i]["params"];
					switch (fxtype) {
					case "filter":
						addEffectForTag(p, new FilterEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4], fxparams[5]));
						break;
					case "delay":
						addEffectForTag(p, new DelayEffect(fxparams[0], fxparams[1], fxparams[2]));
						break;
					case "convolve":
						src = fxparams[2];
						b = this.getAudioBuffer(src, false);
						if (b.bufferObject)
						{
							fx = new ConvolveEffect(b.bufferObject, fxparams[0], fxparams[1], src);
						}
						else
						{
							fx = new ConvolveEffect(null, fxparams[0], fxparams[1], src);
							b.normalizeWhenReady = fxparams[0];
							b.convolveWhenReady = fx;
						}
						addEffectForTag(p, fx);
						break;
					case "flanger":
						addEffectForTag(p, new FlangerEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "phaser":
						addEffectForTag(p, new PhaserEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4], fxparams[5]));
						break;
					case "gain":
						addEffectForTag(p, new GainEffect(fxparams[0]));
						break;
					case "tremolo":
						addEffectForTag(p, new TremoloEffect(fxparams[0], fxparams[1]));
						break;
					case "ringmod":
						addEffectForTag(p, new RingModulatorEffect(fxparams[0], fxparams[1]));
						break;
					case "distortion":
						addEffectForTag(p, new DistortionEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "compressor":
						addEffectForTag(p, new CompressorEffect(fxparams[0], fxparams[1], fxparams[2], fxparams[3], fxparams[4]));
						break;
					case "analyser":
						addEffectForTag(p, new AnalyserEffect(fxparams[0], fxparams[1]));
						break;
					}
				}
			}
		}
		for (i = 0, len = playingarr.length; i < len; i++)
		{
			d = playingarr[i];
			src = d["buffersrc"];
			is_music = d["is_music"];
			tag = d["tag"];
			playbackTime = d["playbackTime"];
			looping = d["looping"];
			vol = d["volume"];
			pan = d["pan"];
			panObjUid = (pan && pan.hasOwnProperty("objUid")) ? pan["objUid"] : -1;
			a = this.getAudioInstance(src, tag, is_music, looping, vol);
			if (!a)
			{
				b = this.getAudioBuffer(src, is_music);
				b.seekWhenReady = playbackTime;
				b.pauseWhenReady = d["paused"];
				if (pan)
				{
					if (panObjUid !== -1)
					{
						b.panWhenReady.push({ objUid: panObjUid, ia: pan["ia"], oa: pan["oa"], og: pan["og"], thistag: tag });
					}
					else
					{
						b.panWhenReady.push({ x: pan["x"], y: pan["y"], a: pan["a"], ia: pan["ia"], oa: pan["oa"], og: pan["og"], thistag: tag });
					}
				}
				continue;
			}
			a.resume_position = d["resume_position"];
			a.setPannerEnabled(!!pan);
			a.play(looping, vol, playbackTime);
			a.updatePlaybackRate();
			a.updateVolume();
			a.doSetMuted(a.is_muted || a.is_silent);
			if (d["paused"])
				a.pause();
			if (d["muted"])
				a.mute();
			if (pan)
			{
				if (panObjUid !== -1)
				{
					a.objectTracker = a.objectTracker || new ObjectTracker();
					a.objectTracker.loadUid = panObjUid;
					objectTrackerUidsToLoad.push(a.objectTracker);
				}
				else
				{
					a.setPan(pan["x"], pan["y"], pan["a"], pan["ia"], pan["oa"], pan["og"]);
				}
			}
		}
		if (setSilent && !silent)			// setting silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(true);
			silent = true;
		}
		else if (!setSilent && silent)		// setting not silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(false);
			silent = false;
		}
	};
	instanceProto.afterLoad = function ()
	{
		var i, len, ot;
		for (i = 0, len = objectTrackerUidsToLoad.length; i < len; i++)
		{
			ot = objectTrackerUidsToLoad[i];
			ot.setObject(this.runtime.getObjectByUID(ot.loadUid));
			ot.loadUid = -1;
		}
		objectTrackerUidsToLoad.length = 0;
	};
	instanceProto.onSuspend = function (s)
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].setSuspended(s);
	};
	instanceProto.tick = function ()
	{
		var dt = this.runtime.dt;
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			a.tick(dt);
			if (a.myapi !== API_HTML5 && a.myapi !== API_APPMOBI)
			{
				if (!a.fresh && !a.stopped && a.hasEnded())
				{
					a.stopped = true;
					audTag = a.tag;
					audRuntime.trigger(cr.plugins_.Audio.prototype.cnds.OnEnded, audInst);
				}
			}
			if (timescale_mode !== 0)
				a.updatePlaybackRate();
		}
		var p, arr, f;
		for (p in effects)
		{
			if (effects.hasOwnProperty(p))
			{
				arr = effects[p];
				for (i = 0, len = arr.length; i < len; i++)
				{
					f = arr[i];
					if (f.tick)
						f.tick();
				}
			}
		}
		if (api === API_WEBAUDIO && this.listenerTracker.hasObject())
		{
			this.listenerTracker.tick(dt);
			context["listener"]["setPosition"](this.listenerTracker.obj.x, this.listenerTracker.obj.y, this.listenerZ);
			context["listener"]["setVelocity"](this.listenerTracker.getVelocityX(), this.listenerTracker.getVelocityY(), 0);
		}
	};
	instanceProto.getAudioBuffer = function (src_, is_music)
	{
		var i, len, a;
		for (i = 0, len = audioBuffers.length; i < len; i++)
		{
			a = audioBuffers[i];
			if (a.src === src_)
				return a;
		}
		a = new C2AudioBuffer(src_, is_music);
		audioBuffers.push(a);
		return a;
	};
	instanceProto.getAudioInstance = function (src_, tag, is_music, looping, vol)
	{
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (a.src === src_ && (a.canBeRecycled() || is_music))
			{
				a.tag = tag;
				return a;
			}
		}
		var b = this.getAudioBuffer(src_, is_music);
		if (!b.bufferObject)
		{
			if (tag !== "<preload>")
			{
				b.playTagWhenReady = tag;
				b.loopWhenReady = looping;
				b.volumeWhenReady = vol;
			}
			return null;
		}
		a = new C2AudioInstance(b, tag);
		audioInstances.push(a);
		return a;
	};
	var taggedAudio = [];
	function getAudioByTag(tag)
	{
		taggedAudio.length = 0;
		if (!tag.length)
		{
			if (!lastAudio || lastAudio.hasEnded())
				return;
			else
			{
				taggedAudio.length = 1;
				taggedAudio[0] = lastAudio;
				return;
			}
		}
		var i, len, a;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			a = audioInstances[i];
			if (tag.toLowerCase() === a.tag.toLowerCase())
				taggedAudio.push(a);
		}
	};
	function reconnectEffects(tag)
	{
		var i, len, arr, n, toNode = context["destination"];
		if (effects.hasOwnProperty(tag))
		{
			arr = effects[tag];
			if (arr.length)
			{
				toNode = arr[0].getInputNode();
				for (i = 0, len = arr.length; i < len; i++)
				{
					n = arr[i];
					if (i + 1 === len)
						n.connectTo(context["destination"]);
					else
						n.connectTo(arr[i + 1].getInputNode());
				}
			}
		}
		getAudioByTag(tag);
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].reconnect(toNode);
		if (micSource && micTag === tag)
		{
			micSource["disconnect"]();
			micSource["connect"](toNode);
		}
	};
	function addEffectForTag(tag, fx)
	{
		if (!effects.hasOwnProperty(tag))
			effects[tag] = [fx];
		else
			effects[tag].push(fx);
		reconnectEffects(tag);
	};
	function Cnds() {};
	Cnds.prototype.OnEnded = function (t)
	{
		return audTag.toLowerCase() === t.toLowerCase();
	};
	Cnds.prototype.PreloadsComplete = function ()
	{
		var i, len;
		for (i = 0, len = audioBuffers.length; i < len; i++)
		{
			if (!audioBuffers[i].isLoaded())
				return false;
		}
		return true;
	};
	Cnds.prototype.AdvancedAudioSupported = function ()
	{
		return api === API_WEBAUDIO;
	};
	Cnds.prototype.IsSilent = function ()
	{
		return silent;
	};
	Cnds.prototype.IsAnyPlaying = function ()
	{
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
		{
			if (audioInstances[i].isPlaying())
				return true;
		}
		return false;
	};
	Cnds.prototype.IsTagPlaying = function (tag)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			if (taggedAudio[i].isPlaying())
				return true;
		}
		return false;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Play = function (file, looping, vol, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
			return;
		lastAudio.setPannerEnabled(false);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtPosition = function (file, looping, vol, x_, y_, angle_, innerangle_, outerangle_, outergain_, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ x: x_, y: y_, a: angle_, ia: innerangle_, oa: outerangle_, og: dbToLinear(outergain_), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(x_, y_, angle_, innerangle_, outerangle_, dbToLinear(outergain_));
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtObject = function (file, looping, vol, obj, innerangle, outerangle, outergain, tag)
	{
		if (silent || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst)
			return;
		var v = dbToLinear(vol);
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ obj: inst, ia: innerangle, oa: outerangle, og: dbToLinear(outergain), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(inst.x, inst.y, cr.to_degrees(inst.angle), innerangle, outerangle, dbToLinear(outergain));
		lastAudio.setObject(inst);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayByName = function (folder, filename, looping, vol, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
			return;
		lastAudio.setPannerEnabled(false);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtPositionByName = function (folder, filename, looping, vol, x_, y_, angle_, innerangle_, outerangle_, outergain_, tag)
	{
		if (silent)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ x: x_, y: y_, a: angle_, ia: innerangle_, oa: outerangle_, og: dbToLinear(outergain_), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(x_, y_, angle_, innerangle_, outerangle_, dbToLinear(outergain_));
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.PlayAtObjectByName = function (folder, filename, looping, vol, obj, innerangle, outerangle, outergain, tag)
	{
		if (silent || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst)
			return;
		var v = dbToLinear(vol);
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		lastAudio = this.getAudioInstance(src, tag, is_music, looping!==0, v);
		if (!lastAudio)
		{
			var b = this.getAudioBuffer(src, is_music);
			b.panWhenReady.push({ obj: inst, ia: innerangle, oa: outerangle, og: dbToLinear(outergain), thistag: tag });
			return;
		}
		lastAudio.setPannerEnabled(true);
		lastAudio.setPan(inst.x, inst.y, cr.to_degrees(inst.angle), innerangle, outerangle, dbToLinear(outergain));
		lastAudio.setObject(inst);
		lastAudio.play(looping!==0, v);
	};
	Acts.prototype.SetLooping = function (tag, looping)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setLooping(looping === 0);
	};
	Acts.prototype.SetMuted = function (tag, muted)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setMuted(muted === 0);
	};
	Acts.prototype.SetVolume = function (tag, vol)
	{
		getAudioByTag(tag);
		var v = dbToLinear(vol);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setVolume(v);
	};
	Acts.prototype.Preload = function (file)
	{
		if (silent)
			return;
		var is_music = file[1];
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		if (api === API_APPMOBI)
		{
			if (this.runtime.isDirectCanvas)
				AppMobi["context"]["loadSound"](src);
			else
				AppMobi["player"]["loadSound"](src);
			return;
		}
		else if (api === API_PHONEGAP)
		{
			return;
		}
		this.getAudioInstance(src, "<preload>", is_music, false);
	};
	Acts.prototype.PreloadByName = function (folder, filename)
	{
		if (silent)
			return;
		var is_music = (folder === 1);
		var src = this.runtime.files_subfolder + filename.toLowerCase() + (useOgg ? ".ogg" : ".m4a");
		if (api === API_APPMOBI)
		{
			if (this.runtime.isDirectCanvas)
				AppMobi["context"]["loadSound"](src);
			else
				AppMobi["player"]["loadSound"](src);
			return;
		}
		else if (api === API_PHONEGAP)
		{
			return;
		}
		this.getAudioInstance(src, "<preload>", is_music, false);
	};
	Acts.prototype.SetPlaybackRate = function (tag, rate)
	{
		getAudioByTag(tag);
		if (rate < 0.0)
			rate = 0;
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].setPlaybackRate(rate);
	};
	Acts.prototype.Stop = function (tag)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
			taggedAudio[i].stop();
	};
	Acts.prototype.SetPaused = function (tag, state)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			if (state === 0)
				taggedAudio[i].pause();
			else
				taggedAudio[i].resume();
		}
	};
	Acts.prototype.Seek = function (tag, pos)
	{
		getAudioByTag(tag);
		var i, len;
		for (i = 0, len = taggedAudio.length; i < len; i++)
		{
			taggedAudio[i].seek(pos);
		}
	};
	Acts.prototype.SetSilent = function (s)
	{
		var i, len;
		if (s === 2)					// toggling
			s = (silent ? 1 : 0);		// choose opposite state
		if (s === 0 && !silent)			// setting silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(true);
			silent = true;
		}
		else if (s === 1 && silent)		// setting not silent
		{
			for (i = 0, len = audioInstances.length; i < len; i++)
				audioInstances[i].setSilent(false);
			silent = false;
		}
	};
	Acts.prototype.SetMasterVolume = function (vol)
	{
		masterVolume = dbToLinear(vol);
		var i, len;
		for (i = 0, len = audioInstances.length; i < len; i++)
			audioInstances[i].updateVolume();
	};
	Acts.prototype.AddFilterEffect = function (tag, type, freq, detune, q, gain, mix)
	{
		if (api !== API_WEBAUDIO || type < 0 || type >= filterTypes.length)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new FilterEffect(type, freq, detune, q, gain, mix));
	};
	Acts.prototype.AddDelayEffect = function (tag, delay, gain, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new DelayEffect(delay, dbToLinear(gain), mix));
	};
	Acts.prototype.AddFlangerEffect = function (tag, delay, modulation, freq, feedback, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new FlangerEffect(delay / 1000, modulation / 1000, freq, feedback / 100, mix));
	};
	Acts.prototype.AddPhaserEffect = function (tag, freq, detune, q, mod, modfreq, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new PhaserEffect(freq, detune, q, mod, modfreq, mix));
	};
	Acts.prototype.AddConvolutionEffect = function (tag, file, norm, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		var doNormalize = (norm === 0);
		var src = this.runtime.files_subfolder + file[0] + (useOgg ? ".ogg" : ".m4a");
		var b = this.getAudioBuffer(src, false);
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		var fx;
		if (b.bufferObject)
		{
			fx = new ConvolveEffect(b.bufferObject, doNormalize, mix, src);
		}
		else
		{
			fx = new ConvolveEffect(null, doNormalize, mix, src);
			b.normalizeWhenReady = doNormalize;
			b.convolveWhenReady = fx;
		}
		addEffectForTag(tag, fx);
	};
	Acts.prototype.AddGainEffect = function (tag, g)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new GainEffect(dbToLinear(g)));
	};
	Acts.prototype.AddMuteEffect = function (tag)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new GainEffect(0));	// re-use gain effect with 0 gain
	};
	Acts.prototype.AddTremoloEffect = function (tag, freq, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new TremoloEffect(freq, mix));
	};
	Acts.prototype.AddRingModEffect = function (tag, freq, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new RingModulatorEffect(freq, mix));
	};
	Acts.prototype.AddDistortionEffect = function (tag, threshold, headroom, drive, makeupgain, mix)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		mix = mix / 100;
		if (mix < 0) mix = 0;
		if (mix > 1) mix = 1;
		addEffectForTag(tag, new DistortionEffect(threshold, headroom, drive, makeupgain, mix));
	};
	Acts.prototype.AddCompressorEffect = function (tag, threshold, knee, ratio, attack, release)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new CompressorEffect(threshold, knee, ratio, attack / 1000, release / 1000));
	};
	Acts.prototype.AddAnalyserEffect = function (tag, fftSize, smoothing)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		addEffectForTag(tag, new AnalyserEffect(fftSize, smoothing));
	};
	Acts.prototype.RemoveEffects = function (tag)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		var i, len, arr;
		if (effects.hasOwnProperty(tag))
		{
			arr = effects[tag];
			if (arr.length)
			{
				for (i = 0, len = arr.length; i < len; i++)
					arr[i].remove();
				arr.length = 0;
				reconnectEffects(tag);
			}
		}
	};
	Acts.prototype.SetEffectParameter = function (tag, index, param, value, ramp, time)
	{
		if (api !== API_WEBAUDIO)
			return;
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var arr;
		if (!effects.hasOwnProperty(tag))
			return;
		arr = effects[tag];
		if (index < 0 || index >= arr.length)
			return;
		arr[index].setParam(param, value, ramp, time);
	};
	Acts.prototype.SetListenerObject = function (obj_)
	{
		if (!obj_ || api !== API_WEBAUDIO)
			return;
		var inst = obj_.getFirstPicked();
		if (!inst)
			return;
		this.listenerTracker.setObject(inst);
	};
	Acts.prototype.SetListenerZ = function (z)
	{
		this.listenerZ = z;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Duration = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
			ret.set_float(taggedAudio[0].getDuration());
		else
			ret.set_float(0);
	};
	Exps.prototype.PlaybackTime = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
			ret.set_float(taggedAudio[0].getPlaybackTime());
		else
			ret.set_float(0);
	};
	Exps.prototype.Volume = function (ret, tag)
	{
		getAudioByTag(tag);
		if (taggedAudio.length)
		{
			var v = taggedAudio[0].getVolume();
			ret.set_float(linearToDb(v));
		}
		else
			ret.set_float(0);
	};
	Exps.prototype.MasterVolume = function (ret)
	{
		ret.set_float(masterVolume);
	};
	Exps.prototype.EffectCount = function (ret, tag)
	{
		tag = tag.toLowerCase();
		var arr = null;
		if (effects.hasOwnProperty(tag))
			arr = effects[tag];
		ret.set_int(arr ? arr.length : 0);
	};
	function getAnalyser(tag, index)
	{
		var arr = null;
		if (effects.hasOwnProperty(tag))
			arr = effects[tag];
		if (arr && index >= 0 && index < arr.length && arr[index].freqBins)
			return arr[index];
		else
			return null;
	};
	Exps.prototype.AnalyserFreqBinCount = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		ret.set_int(analyser ? analyser.node["frequencyBinCount"] : 0);
	};
	Exps.prototype.AnalyserFreqBinAt = function (ret, tag, index, bin)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		bin = Math.floor(bin);
		var analyser = getAnalyser(tag, index);
		if (!analyser)
			ret.set_float(0);
		else if (bin < 0 || bin >= analyser.node["frequencyBinCount"])
			ret.set_float(0);
		else
			ret.set_float(analyser.freqBins[bin]);
	};
	Exps.prototype.AnalyserPeakLevel = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		if (analyser)
			ret.set_float(analyser.peak);
		else
			ret.set_float(0);
	};
	Exps.prototype.AnalyserRMSLevel = function (ret, tag, index)
	{
		tag = tag.toLowerCase();
		index = Math.floor(index);
		var analyser = getAnalyser(tag, index);
		if (analyser)
			ret.set_float(analyser.rms);
		else
			ret.set_float(0);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Button = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Button.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Button plugin not supported on this platform - the object will not be created");
			return;
		}
		this.isCheckbox = (this.properties[0] === 1);
		this.inputElem = document.createElement("input");
		if (this.isCheckbox)
			this.elem = document.createElement("label");
		else
			this.elem = this.inputElem;
		this.labelText = null;
		this.inputElem.type = (this.isCheckbox ? "checkbox" : "button");
		this.inputElem.id = this.properties[6];
		jQuery(this.elem).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
		if (this.isCheckbox)
		{
			jQuery(this.inputElem).appendTo(this.elem);
			this.labelText = document.createTextNode(this.properties[1]);
			jQuery(this.elem).append(this.labelText);
			this.inputElem.checked = (this.properties[7] !== 0);
			jQuery(this.elem).css("font-family", "sans-serif");
			jQuery(this.elem).css("display", "inline-block");
			jQuery(this.elem).css("color", "black");
		}
		else
			this.inputElem.value = this.properties[1];
		this.elem.title = this.properties[2];
		this.inputElem.disabled = (this.properties[4] === 0);
		this.autoFontSize = (this.properties[5] !== 0);
		if (this.properties[3] === 0)
		{
			jQuery(this.elem).hide();
			this.visible = false;
		}
		this.inputElem.onclick = (function (self) {
			return function(e) {
				e.stopPropagation();
				self.runtime.trigger(cr.plugins_.Button.prototype.cnds.OnClicked, self);
			};
		})(this);
		this.elem.addEventListener("touchstart", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchmove", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchend", function (e) {
			e.stopPropagation();
		}, false);
		jQuery(this.elem).mousedown(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).mouseup(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).keydown(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).keyup(function (e) {
			e.stopPropagation();
		});
		this.updatePosition();
		this.runtime.tickMe(this);
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"tooltip": this.elem.title,
			"disabled": !!this.inputElem.disabled
		};
		if (this.isCheckbox)
		{
			o["checked"] = !!this.inputElem.checked;
			o["text"] = this.labelText.nodeValue;
		}
		else
		{
			o["text"] = this.elem.value;
		}
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.elem.title = o["tooltip"];
		this.inputElem.disabled = o["disabled"];
		if (this.isCheckbox)
		{
			this.inputElem.checked = o["checked"];
			this.labelText.nodeValue = o["text"];
		}
		else
		{
			this.elem.value = o["text"];
		}
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.isDomFree)
			return;
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
	};
	instanceProto.updatePosition = function ()
	{
		if (this.runtime.isDomFree)
			return;
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			jQuery(this.elem).hide();
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		jQuery(this.elem).show();
		var offx = Math.round(left) + jQuery(this.runtime.canvas).offset().left;
		var offy = Math.round(top) + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(Math.round(right - left));
		jQuery(this.elem).height(Math.round(bottom - top));
		if (this.autoFontSize)
			jQuery(this.elem).css("font-size", (this.layer.getScale() - 0.2) + "em");
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	function Cnds() {};
	Cnds.prototype.OnClicked = function ()
	{
		return true;
	};
	Cnds.prototype.IsChecked = function ()
	{
		return this.isCheckbox && this.inputElem.checked;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetText = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		if (this.isCheckbox)
			this.labelText.nodeValue = text;
		else
			this.elem.value = text;
	};
	Acts.prototype.SetTooltip = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.title = text;
	};
	Acts.prototype.SetVisible = function (vis)
	{
		if (this.runtime.isDomFree)
			return;
		this.visible = (vis !== 0);
	};
	Acts.prototype.SetEnabled = function (en)
	{
		if (this.runtime.isDomFree)
			return;
		this.inputElem.disabled = (en === 0);
	};
	Acts.prototype.SetFocus = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.inputElem.focus();
	};
	Acts.prototype.SetBlur = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.inputElem.blur();
	};
	Acts.prototype.SetCSSStyle = function (p, v)
	{
		if (this.runtime.isDomFree)
			return;
		jQuery(this.elem).css(p, v);
	};
	Acts.prototype.SetChecked = function (c)
	{
		if (this.runtime.isDomFree || !this.isCheckbox)
			return;
		this.inputElem.checked = (c === 1);
	};
	Acts.prototype.ToggleChecked = function ()
	{
		if (this.runtime.isDomFree || !this.isCheckbox)
			return;
		this.inputElem.checked = !this.inputElem.checked;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Keyboard = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Keyboard.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.keyMap = new Array(256);	// stores key up/down state
		this.usedKeys = new Array(256);
		this.triggerKey = 0;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		if (!this.runtime.isDomFree)
		{
			jQuery(document).keydown(
				function(info) {
					self.onKeyDown(info);
				}
			);
			jQuery(document).keyup(
				function(info) {
					self.onKeyUp(info);
				}
			);
		}
	};
	instanceProto.onKeyDown = function (info)
	{
		if (this.keyMap[info.which])
		{
			if (this.usedKeys[info.which])
				info.preventDefault();
			return;
		}
		this.keyMap[info.which] = true;
		this.triggerKey = info.which;
		this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKey, this);
		var eventRan = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKey, this);
		var eventRan2 = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCode, this);
		if (eventRan || eventRan2)
		{
			this.usedKeys[info.which] = true;
			info.preventDefault();
		}
	};
	instanceProto.onKeyUp = function (info)
	{
		this.keyMap[info.which] = false;
		this.triggerKey = info.which;
		this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnAnyKeyReleased, this);
		var eventRan = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyReleased, this);
		var eventRan2 = this.runtime.trigger(cr.plugins_.Keyboard.prototype.cnds.OnKeyCodeReleased, this);
		if (eventRan || eventRan2 || this.usedKeys[info.which])
		{
			this.usedKeys[info.which] = true;
			info.preventDefault();
		}
	};
	instanceProto.saveToJSON = function ()
	{
		return { "triggerKey": this.triggerKey };
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.triggerKey = o["triggerKey"];
	};
	function Cnds() {};
	Cnds.prototype.IsKeyDown = function(key)
	{
		return this.keyMap[key];
	};
	Cnds.prototype.OnKey = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.OnAnyKey = function(key)
	{
		return true;
	};
	Cnds.prototype.OnAnyKeyReleased = function(key)
	{
		return true;
	};
	Cnds.prototype.OnKeyReleased = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.IsKeyCodeDown = function(key)
	{
		key = Math.floor(key);
		if (key < 0 || key >= this.keyMap.length)
			return false;
		return this.keyMap[key];
	};
	Cnds.prototype.OnKeyCode = function(key)
	{
		return (key === this.triggerKey);
	};
	Cnds.prototype.OnKeyCodeReleased = function(key)
	{
		return (key === this.triggerKey);
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.LastKeyCode = function (ret)
	{
		ret.set_int(this.triggerKey);
	};
	function fixedStringFromCharCode(kc)
	{
		kc = Math.floor(kc);
		switch (kc) {
		case 8:		return "backspace";
		case 9:		return "tab";
		case 13:	return "enter";
		case 16:	return "shift";
		case 17:	return "control";
		case 18:	return "alt";
		case 19:	return "pause";
		case 20:	return "capslock";
		case 27:	return "esc";
		case 33:	return "pageup";
		case 34:	return "pagedown";
		case 35:	return "end";
		case 36:	return "home";
		case 37:	return "←";
		case 38:	return "↑";
		case 39:	return "→";
		case 40:	return "↓";
		case 45:	return "insert";
		case 46:	return "del";
		case 91:	return "left window key";
		case 92:	return "right window key";
		case 93:	return "select";
		case 96:	return "numpad 0";
		case 97:	return "numpad 1";
		case 98:	return "numpad 2";
		case 99:	return "numpad 3";
		case 100:	return "numpad 4";
		case 101:	return "numpad 5";
		case 102:	return "numpad 6";
		case 103:	return "numpad 7";
		case 104:	return "numpad 8";
		case 105:	return "numpad 9";
		case 106:	return "numpad *";
		case 107:	return "numpad +";
		case 109:	return "numpad -";
		case 110:	return "numpad .";
		case 111:	return "numpad /";
		case 112:	return "F1";
		case 113:	return "F2";
		case 114:	return "F3";
		case 115:	return "F4";
		case 116:	return "F5";
		case 117:	return "F6";
		case 118:	return "F7";
		case 119:	return "F8";
		case 120:	return "F9";
		case 121:	return "F10";
		case 122:	return "F11";
		case 123:	return "F12";
		case 144:	return "numlock";
		case 145:	return "scroll lock";
		case 186:	return ";";
		case 187:	return "=";
		case 188:	return ",";
		case 189:	return "-";
		case 190:	return ".";
		case 191:	return "/";
		case 192:	return "'";
		case 219:	return "[";
		case 220:	return "\\";
		case 221:	return "]";
		case 222:	return "#";
		case 223:	return "`";
		default:	return String.fromCharCode(kc);
		}
	};
	Exps.prototype.StringFromKeyCode = function (ret, kc)
	{
		ret.set_string(fixedStringFromCharCode(kc));
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Mouse = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Mouse.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		this.buttonMap = new Array(4);		// mouse down states
		this.mouseXcanvas = 0;				// mouse position relative to canvas
		this.mouseYcanvas = 0;
		this.triggerButton = 0;
		this.triggerType = 0;
		this.triggerDir = 0;
		this.handled = false;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		var self = this;
		if (!this.runtime.isDomFree)
		{
			jQuery(document).mousemove(
				function(info) {
					self.onMouseMove(info);
				}
			);
			jQuery(document).mousedown(
				function(info) {
					self.onMouseDown(info);
				}
			);
			jQuery(document).mouseup(
				function(info) {
					self.onMouseUp(info);
				}
			);
			jQuery(document).dblclick(
				function(info) {
					self.onDoubleClick(info);
				}
			);
			var wheelevent = function(info) {
								self.onWheel(info);
							};
			document.addEventListener("mousewheel", wheelevent, false);
			document.addEventListener("DOMMouseScroll", wheelevent, false);
		}
	};
	var dummyoffset = {left: 0, top: 0};
	instanceProto.onMouseMove = function(info)
	{
		var offset = this.runtime.isDomFree ? dummyoffset : jQuery(this.runtime.canvas).offset();
		this.mouseXcanvas = info.pageX - offset.left;
		this.mouseYcanvas = info.pageY - offset.top;
	};
	instanceProto.mouseInGame = function ()
	{
		if (this.runtime.fullscreen_mode > 0)
			return true;
		return this.mouseXcanvas >= 0 && this.mouseYcanvas >= 0
		    && this.mouseXcanvas < this.runtime.width && this.mouseYcanvas < this.runtime.height;
	};
	instanceProto.onMouseDown = function(info)
	{
		if (!this.mouseInGame())
			return;
		if (this.runtime.had_a_click)
			info.preventDefault();
		this.buttonMap[info.which] = true;
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnAnyClick, this);
		this.triggerButton = info.which - 1;	// 1-based
		this.triggerType = 0;					// single click
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnClick, this);
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnObjectClicked, this);
	};
	instanceProto.onMouseUp = function(info)
	{
		if (!this.buttonMap[info.which])
			return;
		if (this.runtime.had_a_click)
			info.preventDefault();
		this.runtime.had_a_click = true;
		this.buttonMap[info.which] = false;
		this.triggerButton = info.which - 1;	// 1-based
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnRelease, this);
	};
	instanceProto.onDoubleClick = function(info)
	{
		if (!this.mouseInGame())
			return;
		info.preventDefault();
		this.triggerButton = info.which - 1;	// 1-based
		this.triggerType = 1;					// double click
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnClick, this);
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnObjectClicked, this);
	};
	instanceProto.onWheel = function (info)
	{
		var delta = info.wheelDelta ? info.wheelDelta : info.detail ? -info.detail : 0;
		this.triggerDir = (delta < 0 ? 0 : 1);
		this.handled = false;
		this.runtime.trigger(cr.plugins_.Mouse.prototype.cnds.OnWheel, this);
		if (this.handled)
			info.preventDefault();
	};
	function Cnds() {};
	Cnds.prototype.OnClick = function (button, type)
	{
		return button === this.triggerButton && type === this.triggerType;
	};
	Cnds.prototype.OnAnyClick = function ()
	{
		return true;
	};
	Cnds.prototype.IsButtonDown = function (button)
	{
		return this.buttonMap[button + 1];	// jQuery uses 1-based buttons for some reason
	};
	Cnds.prototype.OnRelease = function (button)
	{
		return button === this.triggerButton;
	};
	Cnds.prototype.IsOverObject = function (obj)
	{
		var cnd = this.runtime.getCurrentCondition();
		if (cr.is_undefined(cnd.extra.mouseOverInverted))
		{
			cnd.extra.mouseOverInverted = cnd.inverted;
			cnd.inverted = false;
		}
		var mx = this.mouseXcanvas;
		var my = this.mouseYcanvas;
		return this.runtime.testAndSelectCanvasPointOverlap(obj, mx, my, cnd.extra.mouseOverInverted);
	};
	Cnds.prototype.OnObjectClicked = function (button, type, obj)
	{
		if (button !== this.triggerButton || type !== this.triggerType)
			return false;	// wrong click type
		return this.runtime.testAndSelectCanvasPointOverlap(obj, this.mouseXcanvas, this.mouseYcanvas, false);
	};
	Cnds.prototype.OnWheel = function (dir)
	{
		this.handled = true;
		return dir === this.triggerDir;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetCursor = function (c)
	{
		var cursor_style = ["auto", "pointer", "text", "crosshair", "move", "help", "wait", "none"][c];
		if (this.runtime.canvas && this.runtime.canvas.style)
			this.runtime.canvas.style.cursor = cursor_style;
	};
	Acts.prototype.SetCursorSprite = function (obj)
	{
		if (this.runtime.isDomFree || this.runtime.isMobile || !obj)
			return;
		var inst = obj.getFirstPicked();
		if (!inst || !inst.curFrame)
			return;
		var frame = inst.curFrame;
		var datauri = frame.getDataUri();
		var cursor_style = "url(" + datauri + ") " + Math.round(frame.hotspotX * frame.width) + " " + Math.round(frame.hotspotY * frame.height) + ", auto";
		jQuery(this.runtime.canvas).css("cursor", cursor_style);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.X = function (ret, layerparam)
	{
		var layer, oldScale, oldZoomRate, oldParallaxX, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxX = layer.parallaxX;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxX = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, true));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxX = oldParallaxX;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, true));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.Y = function (ret, layerparam)
	{
		var layer, oldScale, oldZoomRate, oldParallaxY, oldAngle;
		if (cr.is_undefined(layerparam))
		{
			layer = this.runtime.getLayerByNumber(0);
			oldScale = layer.scale;
			oldZoomRate = layer.zoomRate;
			oldParallaxY = layer.parallaxY;
			oldAngle = layer.angle;
			layer.scale = this.runtime.running_layout.scale;
			layer.zoomRate = 1.0;
			layer.parallaxY = 1.0;
			layer.angle = this.runtime.running_layout.angle;
			ret.set_float(layer.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, false));
			layer.scale = oldScale;
			layer.zoomRate = oldZoomRate;
			layer.parallaxY = oldParallaxY;
			layer.angle = oldAngle;
		}
		else
		{
			if (cr.is_number(layerparam))
				layer = this.runtime.getLayerByNumber(layerparam);
			else
				layer = this.runtime.getLayerByName(layerparam);
			if (layer)
				ret.set_float(layer.canvasToLayer(this.mouseXcanvas, this.mouseYcanvas, false));
			else
				ret.set_float(0);
		}
	};
	Exps.prototype.AbsoluteX = function (ret)
	{
		ret.set_float(this.mouseXcanvas);
	};
	Exps.prototype.AbsoluteY = function (ret)
	{
		ret.set_float(this.mouseYcanvas);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Particles = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Particles.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img.src = this.texture_file;
		this.texture_img.cr_filesize = this.texture_filesize;
		this.webGL_texture = null;
		this.runtime.wait_for_textures.push(this.texture_img);
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
		}
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length)
			return;
		if (this.runtime.glwrap)		// webGL renderer
		{
			if (this.webGL_texture)
			{
				this.runtime.glwrap.deleteTexture(this.webGL_texture);
				this.webGL_texture = null;
			}
		}
		else
		{
			if (this.texture_img["hintUnload"])
				this.texture_img["hintUnload"]();
		}
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	function Particle(owner)
	{
		this.owner = owner;
		this.active = false;
		this.x = 0;
		this.y = 0;
		this.speed = 0;
		this.angle = 0;
		this.opacity = 1;
		this.grow = 0;
		this.size = 0;
		this.gs = 0;			// gravity speed
		this.age = 0;
		cr.seal(this);
	};
	Particle.prototype.init = function ()
	{
		var owner = this.owner;
		this.x = owner.x - (owner.xrandom / 2) + (Math.random() * owner.xrandom);
		this.y = owner.y - (owner.yrandom / 2) + (Math.random() * owner.yrandom);
		this.speed = owner.initspeed - (owner.speedrandom / 2) + (Math.random() * owner.speedrandom);
		this.angle = owner.angle - (owner.spraycone / 2) + (Math.random() * owner.spraycone);
		this.opacity = owner.initopacity;
		this.size = owner.initsize - (owner.sizerandom / 2) + (Math.random() * owner.sizerandom);
		this.grow = owner.growrate - (owner.growrandom / 2) + (Math.random() * owner.growrandom);
		this.gs = 0;
		this.age = 0;
	};
	Particle.prototype.tick = function (dt)
	{
		var owner = this.owner;
		this.x += Math.cos(this.angle) * this.speed * dt;
		this.y += Math.sin(this.angle) * this.speed * dt;
		this.y += this.gs * dt;
		this.speed += owner.acc * dt;
		this.size += this.grow * dt;
		this.gs += owner.g * dt;
		this.age += dt;
		if (this.size < 1)
		{
			this.active = false;
			return;
		}
		if (owner.lifeanglerandom !== 0)
			this.angle += (Math.random() * owner.lifeanglerandom * dt) - (owner.lifeanglerandom * dt / 2);
		if (owner.lifespeedrandom !== 0)
			this.speed += (Math.random() * owner.lifespeedrandom * dt) - (owner.lifespeedrandom * dt / 2);
		if (owner.lifeopacityrandom !== 0)
		{
			this.opacity += (Math.random() * owner.lifeopacityrandom * dt) - (owner.lifeopacityrandom * dt / 2);
			if (this.opacity < 0)
				this.opacity = 0;
			else if (this.opacity > 1)
				this.opacity = 1;
		}
		if (owner.destroymode <= 1 && this.age >= owner.timeout)
		{
			this.active = false;
		}
		if (owner.destroymode === 2 && this.speed <= 0)
		{
			this.active = false;
		}
	};
	Particle.prototype.draw = function (ctx)
	{
		var curopacity = this.owner.opacity * this.opacity;
		if (curopacity === 0)
			return;
		if (this.owner.destroymode === 0)
			curopacity *= 1 - (this.age / this.owner.timeout);
		ctx.globalAlpha = curopacity;
		var drawx = this.x - this.size / 2;
		var drawy = this.y - this.size / 2;
		if (this.owner.runtime.pixel_rounding)
		{
			drawx = (drawx + 0.5) | 0;
			drawy = (drawy + 0.5) | 0;
		}
		ctx.drawImage(this.owner.type.texture_img, drawx, drawy, this.size, this.size);
	};
	Particle.prototype.drawGL = function (glw)
	{
		var curopacity = this.owner.opacity * this.opacity;
		if (this.owner.destroymode === 0)
			curopacity *= 1 - (this.age / this.owner.timeout);
		var drawsize = this.size;
		var scaleddrawsize = drawsize * this.owner.particlescale;
		var drawx = this.x - drawsize / 2;
		var drawy = this.y - drawsize / 2;
		if (this.owner.runtime.pixel_rounding)
		{
			drawx = (drawx + 0.5) | 0;
			drawy = (drawy + 0.5) | 0;
		}
		if (scaleddrawsize < 1 || curopacity === 0)
			return;
		if (scaleddrawsize < glw.minPointSize || scaleddrawsize > glw.maxPointSize)
		{
			glw.setOpacity(curopacity);
			glw.quad(drawx, drawy, drawx + drawsize, drawy, drawx + drawsize, drawy + drawsize, drawx, drawy + drawsize);
		}
		else
			glw.point(this.x, this.y, scaleddrawsize, curopacity);
	};
	Particle.prototype.left = function ()
	{
		return this.x - this.size / 2;
	};
	Particle.prototype.right = function ()
	{
		return this.x + this.size / 2;
	};
	Particle.prototype.top = function ()
	{
		return this.y - this.size / 2;
	};
	Particle.prototype.bottom = function ()
	{
		return this.y + this.size / 2;
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var deadparticles = [];
	instanceProto.onCreate = function()
	{
		var props = this.properties;
		this.rate = props[0];
		this.spraycone = cr.to_radians(props[1]);
		this.spraytype = props[2];			// 0 = continuous, 1 = one-shot
		this.spraying = true;				// for continuous mode only
		this.initspeed = props[3];
		this.initsize = props[4];
		this.initopacity = props[5] / 100.0;
		this.growrate = props[6];
		this.xrandom = props[7];
		this.yrandom = props[8];
		this.speedrandom = props[9];
		this.sizerandom = props[10];
		this.growrandom = props[11];
		this.acc = props[12];
		this.g = props[13];
		this.lifeanglerandom = props[14];
		this.lifespeedrandom = props[15];
		this.lifeopacityrandom = props[16];
		this.destroymode = props[17];		// 0 = fade, 1 = timeout, 2 = stopped
		this.timeout = props[18];
		this.particleCreateCounter = 0;
		this.particlescale = 1;
		this.particleBoxLeft = this.x;
		this.particleBoxTop = this.y;
		this.particleBoxRight = this.x;
		this.particleBoxBottom = this.y;
		this.add_bbox_changed_callback(function (self) {
			self.bbox.set(self.particleBoxLeft, self.particleBoxTop, self.particleBoxRight, self.particleBoxBottom);
			self.bquad.set_from_rect(self.bbox);
			self.bbox_changed = false;
		});
		if (!this.recycled)
			this.particles = [];
		this.runtime.tickMe(this);
		if (this.runtime.glwrap)
		{
			if (!this.type.webGL_texture)
			{
				this.type.webGL_texture = this.runtime.glwrap.loadTexture(this.type.texture_img, true, this.runtime.linearSampling, this.type.texture_pixelformat);
			}
		}
		else
		{
			if (this.type.texture_img["hintLoad"])
				this.type.texture_img["hintLoad"]();
		}
		if (this.spraytype === 1)
		{
			for (var i = 0; i < this.rate; i++)
				this.allocateParticle().opacity = 0;
		}
		this.first_tick = true;		// for re-init'ing one-shot particles on first tick so they assume any new angle/position
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"r": this.rate,
			"sc": this.spraycone,
			"st": this.spraytype,
			"s": this.spraying,
			"isp": this.initspeed,
			"isz": this.initsize,
			"io": this.initopacity,
			"gr": this.growrate,
			"xr": this.xrandom,
			"yr": this.yrandom,
			"spr": this.speedrandom,
			"szr": this.sizerandom,
			"grnd": this.growrandom,
			"acc": this.acc,
			"g": this.g,
			"lar": this.lifeanglerandom,
			"lsr": this.lifespeedrandom,
			"lor": this.lifeopacityrandom,
			"dm": this.destroymode,
			"to": this.timeout,
			"pcc": this.particleCreateCounter,
			"ft": this.first_tick,
			"p": []
		};
		var i, len, p;
		var arr = o["p"];
		for (i = 0, len = this.particles.length; i < len; i++)
		{
			p = this.particles[i];
			arr.push([p.x, p.y, p.speed, p.angle, p.opacity, p.grow, p.size, p.gs, p.age]);
		}
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.rate = o["r"];
		this.spraycone = o["sc"];
		this.spraytype = o["st"];
		this.spraying = o["s"];
		this.initspeed = o["isp"];
		this.initsize = o["isz"];
		this.initopacity = o["io"];
		this.growrate = o["gr"];
		this.xrandom = o["xr"];
		this.yrandom = o["yr"];
		this.speedrandom = o["spr"];
		this.sizerandom = o["szr"];
		this.growrandom = o["grnd"];
		this.acc = o["acc"];
		this.g = o["g"];
		this.lifeanglerandom = o["lar"];
		this.lifespeedrandom = o["lsr"];
		this.lifeopacityrandom = o["lor"];
		this.destroymode = o["dm"];
		this.timeout = o["to"];
		this.particleCreateCounter = o["pcc"];
		this.first_tick = o["ft"];
		deadparticles.push.apply(deadparticles, this.particles);
		this.particles.length = 0;
		var i, len, p, d;
		var arr = o["p"];
		for (i = 0, len = arr.length; i < len; i++)
		{
			p = this.allocateParticle();
			d = arr[i];
			p.x = d[0];
			p.y = d[1];
			p.speed = d[2];
			p.angle = d[3];
			p.opacity = d[4];
			p.grow = d[5];
			p.size = d[6];
			p.gs = d[7];
			p.age = d[8];
		}
	};
	instanceProto.onDestroy = function ()
	{
		deadparticles.push.apply(deadparticles, this.particles);
		this.particles.length = 0;
	};
	instanceProto.allocateParticle = function ()
	{
		var p;
		if (deadparticles.length)
		{
			p = deadparticles.pop();
			p.owner = this;
		}
		else
			p = new Particle(this);
		this.particles.push(p);
		p.active = true;
		return p;
	};
	instanceProto.tick = function()
	{
		var dt = this.runtime.getDt(this);
		var i, len, p, n, j;
		if (this.spraytype === 0 && this.spraying)
		{
			this.particleCreateCounter += dt * this.rate;
			n = cr.floor(this.particleCreateCounter);
			this.particleCreateCounter -= n;
			for (i = 0; i < n; i++)
			{
				p = this.allocateParticle();
				p.init();
			}
		}
		this.particleBoxLeft = this.x;
		this.particleBoxTop = this.y;
		this.particleBoxRight = this.x;
		this.particleBoxBottom = this.y;
		for (i = 0, j = 0, len = this.particles.length; i < len; i++)
		{
			p = this.particles[i];
			this.particles[j] = p;
			this.runtime.redraw = true;
			if (this.spraytype === 1 && this.first_tick)
				p.init();
			p.tick(dt);
			if (!p.active)
			{
				deadparticles.push(p);
				continue;
			}
			if (p.left() < this.particleBoxLeft)
				this.particleBoxLeft = p.left();
			if (p.right() > this.particleBoxRight)
				this.particleBoxRight = p.right();
			if (p.top() < this.particleBoxTop)
				this.particleBoxTop = p.top();
			if (p.bottom() > this.particleBoxBottom)
				this.particleBoxBottom = p.bottom();
			j++;
		}
		this.particles.length = j;
		this.set_bbox_changed();
		this.first_tick = false;
		if (this.spraytype === 1 && this.particles.length === 0)
			this.runtime.DestroyInstance(this);
	};
	instanceProto.draw = function (ctx)
	{
		var i, len, p, layer = this.layer;
		for (i = 0, len = this.particles.length; i < len; i++)
		{
			p = this.particles[i];
			if (p.right() >= layer.viewLeft && p.bottom() >= layer.viewTop && p.left() <= layer.viewRight && p.top() <= layer.viewBottom)
			{
				p.draw(ctx);
			}
		}
	};
	instanceProto.drawGL = function (glw)
	{
		this.particlescale = this.layer.getScale();
		glw.setTexture(this.type.webGL_texture);
		var i, len, p, layer = this.layer;
		for (i = 0, len = this.particles.length; i < len; i++)
		{
			p = this.particles[i];
			if (p.right() >= layer.viewLeft && p.bottom() >= layer.viewTop && p.left() <= layer.viewRight && p.top() <= layer.viewBottom)
			{
				p.drawGL(glw);
			}
		}
	};
	function Cnds() {};
	Cnds.prototype.IsSpraying = function ()
	{
		return this.spraying;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetSpraying = function (set_)
	{
		this.spraying = (set_ !== 0);
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.SetRate = function (x)
	{
		this.rate = x;
		var diff, i;
		if (this.spraytype === 1 && this.first_tick)
		{
			if (x < this.particles.length)
			{
				diff = this.particles.length - x;
				for (i = 0; i < diff; i++)
					deadparticles.push(this.particles.pop());
			}
			else if (x > this.particles.length)
			{
				diff = x - this.particles.length;
				for (i = 0; i < diff; i++)
					this.allocateParticle().opacity = 0;
			}
		}
	};
	Acts.prototype.SetSprayCone = function (x)
	{
		this.spraycone = cr.to_radians(x);
	};
	Acts.prototype.SetInitSpeed = function (x)
	{
		this.initspeed = x;
	};
	Acts.prototype.SetInitSize = function (x)
	{
		this.initsize = x;
	};
	Acts.prototype.SetInitOpacity = function (x)
	{
		this.initopacity = x / 100;
	};
	Acts.prototype.SetGrowRate = function (x)
	{
		this.growrate = x;
	};
	Acts.prototype.SetXRandomiser = function (x)
	{
		this.xrandom = x;
	};
	Acts.prototype.SetYRandomiser = function (x)
	{
		this.yrandom = x;
	};
	Acts.prototype.SetSpeedRandomiser = function (x)
	{
		this.speedrandom = x;
	};
	Acts.prototype.SetSizeRandomiser = function (x)
	{
		this.sizerandom = x;
	};
	Acts.prototype.SetGrowRateRandomiser = function (x)
	{
		this.growrandom = x;
	};
	Acts.prototype.SetParticleAcc = function (x)
	{
		this.acc = x;
	};
	Acts.prototype.SetGravity = function (x)
	{
		this.g = x;
	};
	Acts.prototype.SetAngleRandomiser = function (x)
	{
		this.lifeanglerandom = x;
	};
	Acts.prototype.SetSpeedRandomiser = function (x)
	{
		this.lifespeedrandom = x;
	};
	Acts.prototype.SetOpacityRandomiser = function (x)
	{
		this.lifeopacityrandom = x;
	};
	Acts.prototype.SetTimeout = function (x)
	{
		this.timeout = x;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.ParticleCount = function (ret)
	{
		ret.set_int(this.particles.length);
	};
	Exps.prototype.Rate = function (ret)
	{
		ret.set_float(this.rate);
	};
	Exps.prototype.SprayCone = function (ret)
	{
		ret.set_float(cr.to_degrees(this.spraycone));
	};
	Exps.prototype.InitSpeed = function (ret)
	{
		ret.set_float(this.initspeed);
	};
	Exps.prototype.InitSize = function (ret)
	{
		ret.set_float(this.initsize);
	};
	Exps.prototype.InitOpacity = function (ret)
	{
		ret.set_float(this.initopacity * 100);
	};
	Exps.prototype.InitGrowRate = function (ret)
	{
		ret.set_float(this.growrate);
	};
	Exps.prototype.XRandom = function (ret)
	{
		ret.set_float(this.xrandom);
	};
	Exps.prototype.YRandom = function (ret)
	{
		ret.set_float(this.yrandom);
	};
	Exps.prototype.InitSpeedRandom = function (ret)
	{
		ret.set_float(this.speedrandom);
	};
	Exps.prototype.InitSizeRandom = function (ret)
	{
		ret.set_float(this.sizerandom);
	};
	Exps.prototype.InitGrowRandom = function (ret)
	{
		ret.set_float(this.growrandom);
	};
	Exps.prototype.ParticleAcceleration = function (ret)
	{
		ret.set_float(this.acc);
	};
	Exps.prototype.Gravity = function (ret)
	{
		ret.set_float(this.g);
	};
	Exps.prototype.ParticleAngleRandom = function (ret)
	{
		ret.set_float(this.lifeanglerandom);
	};
	Exps.prototype.ParticleSpeedRandom = function (ret)
	{
		ret.set_float(this.lifespeedrandom);
	};
	Exps.prototype.ParticleOpacityRandom = function (ret)
	{
		ret.set_float(this.lifeopacityrandom);
	};
	Exps.prototype.Timeout = function (ret)
	{
		ret.set_float(this.timeout);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Sprite = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Sprite.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	function frame_getDataUri()
	{
		if (this.datauri.length === 0)
		{
			var tmpcanvas = document.createElement("canvas");
			tmpcanvas.width = this.width;
			tmpcanvas.height = this.height;
			var tmpctx = tmpcanvas.getContext("2d");
			if (this.spritesheeted)
			{
				tmpctx.drawImage(this.texture_img, this.offx, this.offy, this.width, this.height,
										 0, 0, this.width, this.height);
			}
			else
			{
				tmpctx.drawImage(this.texture_img, 0, 0, this.width, this.height);
			}
			this.datauri = tmpcanvas.toDataURL("image/png");
		}
		return this.datauri;
	};
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		var i, leni, j, lenj;
		var anim, frame, animobj, frameobj, wt, uv;
		for (i = 0, leni = this.animations.length; i < leni; i++)
		{
			anim = this.animations[i];
			animobj = {};
			animobj.name = anim[0];
			animobj.speed = anim[1];
			animobj.loop = anim[2];
			animobj.repeatcount = anim[3];
			animobj.repeatto = anim[4];
			animobj.pingpong = anim[5];
			animobj.sid = anim[6];
			animobj.frames = [];
			for (j = 0, lenj = anim[7].length; j < lenj; j++)
			{
				frame = anim[7][j];
				frameobj = {};
				frameobj.texture_file = frame[0];
				frameobj.texture_filesize = frame[1];
				frameobj.offx = frame[2];
				frameobj.offy = frame[3];
				frameobj.width = frame[4];
				frameobj.height = frame[5];
				frameobj.duration = frame[6];
				frameobj.hotspotX = frame[7];
				frameobj.hotspotY = frame[8];
				frameobj.image_points = frame[9];
				frameobj.poly_pts = frame[10];
				frameobj.pixelformat = frame[11];
				frameobj.spritesheeted = (frameobj.width !== 0);
				frameobj.datauri = "";		// generated on demand and cached
				frameobj.getDataUri = frame_getDataUri;
				uv = {};
				uv.left = 0;
				uv.top = 0;
				uv.right = 1;
				uv.bottom = 1;
				frameobj.sheetTex = uv;
				frameobj.webGL_texture = null;
				wt = this.runtime.findWaitingTexture(frame[0]);
				if (wt)
				{
					frameobj.texture_img = wt;
				}
				else
				{
					frameobj.texture_img = new Image();
					frameobj.texture_img.src = frame[0];
					frameobj.texture_img.cr_src = frame[0];
					frameobj.texture_img.cr_filesize = frame[1];
					frameobj.texture_img.c2webGL_texture = null;
					this.runtime.wait_for_textures.push(frameobj.texture_img);
				}
				cr.seal(frameobj);
				animobj.frames.push(frameobj);
			}
			cr.seal(animobj);
			this.animations[i] = animobj;		// swap array data for object
		}
	};
	typeProto.updateAllCurrentTexture = function ()
	{
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.curWebGLTexture = inst.curFrame.webGL_texture;
		}
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, leni, j, lenj;
		var anim, frame, inst;
		for (i = 0, leni = this.animations.length; i < leni; i++)
		{
			anim = this.animations[i];
			for (j = 0, lenj = anim.frames.length; j < lenj; j++)
			{
				frame = anim.frames[j];
				frame.texture_img.c2webGL_texture = null;
				frame.webGL_texture = null;
			}
		}
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		var i, leni, j, lenj;
		var anim, frame, inst;
		for (i = 0, leni = this.animations.length; i < leni; i++)
		{
			anim = this.animations[i];
			for (j = 0, lenj = anim.frames.length; j < lenj; j++)
			{
				frame = anim.frames[j];
				if (!frame.texture_img.c2webGL_texture)
				{
					frame.texture_img.c2webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
				}
				frame.webGL_texture = frame.texture_img.c2webGL_texture;
			}
		}
		for (i = 0, leni = this.instances.length; i < leni; i++)
		{
			inst = this.instances[i];
			inst.curWebGLTexture = inst.curFrame.webGL_texture;
		}
	};
	var all_my_textures = [];
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length)
			return;
		var isWebGL = !!this.runtime.glwrap;
		var i, leni, j, lenj, k;
		var anim, frame, inst, o;
		all_my_textures.length = 0;
		for (i = 0, leni = this.animations.length; i < leni; i++)
		{
			anim = this.animations[i];
			for (j = 0, lenj = anim.frames.length; j < lenj; j++)
			{
				frame = anim.frames[j];
				o = (isWebGL ? frame.texture_img.c2webGL_texture : frame.texture_img);
				if (!o)
					continue;
				k = all_my_textures.indexOf(o);
				if (k === -1)
					all_my_textures.push(o);
				frame.texture_img.c2webGL_texture = null;
				frame.webGL_texture = null;
			}
		}
		for (i = 0, leni = all_my_textures.length; i < leni; i++)
		{
			o = all_my_textures[i];
			if (isWebGL)
				this.runtime.glwrap.deleteTexture(o);
			else if (o["hintUnload"])
				o["hintUnload"]();
		}
		all_my_textures.length = 0;
	};
	var already_drawn_images = [];
	typeProto.preloadCanvas2D = function (ctx)
	{
		var i, leni, j, lenj;
		var anim, frameimg;
		already_drawn_images.length = 0;
		for (i = 0, leni = this.animations.length; i < leni; i++)
		{
			anim = this.animations[i];
			for (j = 0, lenj = anim.frames.length; j < lenj; j++)
			{
				frameimg = anim.frames[j].texture_img;
				if (already_drawn_images.indexOf(frameimg) !== -1)
					continue;
				ctx.drawImage(frameimg, 0, 0);
				already_drawn_images.push(frameimg);
			}
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		var poly_pts = this.type.animations[0].frames[0].poly_pts;
		if (this.recycled)
			this.collision_poly.set_pts(poly_pts);
		else
			this.collision_poly = new cr.CollisionPoly(poly_pts);
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);	// 0=visible, 1=invisible
		this.isTicking = false;
		this.inAnimTrigger = false;
		this.collisionsEnabled = (this.properties[2] !== 0);
		if (!(this.type.animations.length === 1 && this.type.animations[0].frames.length === 1) && this.type.animations[0].speed !== 0)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		this.cur_animation = this.type.animations[0];
		this.cur_frame = this.properties[1];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (this.cur_frame !== 0)
		{
			var curanimframe = this.cur_animation.frames[this.cur_frame];
			this.collision_poly.set_pts(curanimframe.poly_pts);
			this.hotspotX = curanimframe.hotspotX;
			this.hotspotY = curanimframe.hotspotY;
		}
		this.cur_anim_speed = this.type.animations[0].speed;
		this.frameStart = this.getNowTime();
		this.animPlaying = true;
		this.animRepeats = 0;
		this.animForwards = true;
		this.animTriggerName = "";
		this.changeAnimName = "";
		this.changeAnimFrom = 0;
		this.changeAnimFrame = -1;
		var i, leni, j, lenj;
		var anim, frame, uv, maintex;
		for (i = 0, leni = this.type.animations.length; i < leni; i++)
		{
			anim = this.type.animations[i];
			for (j = 0, lenj = anim.frames.length; j < lenj; j++)
			{
				frame = anim.frames[j];
				if (frame.texture_img["hintLoad"])
					frame.texture_img["hintLoad"]();
				if (frame.width === 0)
				{
					frame.width = frame.texture_img.width;
					frame.height = frame.texture_img.height;
				}
				if (frame.spritesheeted)
				{
					maintex = frame.texture_img;
					uv = frame.sheetTex;
					uv.left = frame.offx / maintex.width;
					uv.top = frame.offy / maintex.height;
					uv.right = (frame.offx + frame.width) / maintex.width;
					uv.bottom = (frame.offy + frame.height) / maintex.height;
					if (frame.offx === 0 && frame.offy === 0 && frame.width === maintex.width && frame.height === maintex.height)
					{
						frame.spritesheeted = false;
					}
				}
				if (this.runtime.glwrap)
				{
					if (!frame.texture_img.c2webGL_texture)
					{
						frame.texture_img.c2webGL_texture = this.runtime.glwrap.loadTexture(frame.texture_img, false, this.runtime.linearSampling, frame.pixelformat);
					}
					frame.webGL_texture = frame.texture_img.c2webGL_texture;
				}
			}
		}
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
	};
	instanceProto.saveToJSON = function ()
	{
		var o = {
			"a": this.cur_animation.sid,
			"f": this.cur_frame,
			"cas": this.cur_anim_speed,
			"fs": this.frameStart,
			"ar": this.animRepeats
		};
		if (!this.animPlaying)
			o["ap"] = this.animPlaying;
		if (!this.animForwards)
			o["af"] = this.animForwards;
		return o;
	};
	instanceProto.loadFromJSON = function (o)
	{
		var anim = this.getAnimationBySid(o["a"]);
		if (anim)
			this.cur_animation = anim;
		this.cur_frame = o["f"];
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		this.cur_anim_speed = o["cas"];
		this.frameStart = o["fs"];
		this.animRepeats = o["ar"];
		this.animPlaying = o.hasOwnProperty("ap") ? o["ap"] : true;
		this.animForwards = o.hasOwnProperty("af") ? o["af"] : true;
		this.curFrame = this.cur_animation.frames[this.cur_frame];
		this.curWebGLTexture = this.curFrame.webGL_texture;
		this.collision_poly.set_pts(this.curFrame.poly_pts);
		this.hotspotX = this.curFrame.hotspotX;
		this.hotspotY = this.curFrame.hotspotY;
	};
	instanceProto.animationFinish = function (reverse)
	{
		this.cur_frame = reverse ? 0 : this.cur_animation.frames.length - 1;
		this.animPlaying = false;
		this.animTriggerName = this.cur_animation.name;
		this.inAnimTrigger = true;
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnyAnimFinished, this);
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnAnimFinished, this);
		this.inAnimTrigger = false;
		this.animRepeats = 0;
	};
	instanceProto.getNowTime = function()
	{
		return (Date.now() - this.runtime.start_time) / 1000.0;
	};
	instanceProto.tick = function()
	{
		if (this.changeAnimName.length)
			this.doChangeAnim();
		if (this.changeAnimFrame >= 0)
			this.doChangeAnimFrame();
		var now = this.getNowTime();
		var cur_animation = this.cur_animation;
		var prev_frame = cur_animation.frames[this.cur_frame];
		var next_frame;
		var cur_frame_time = prev_frame.duration / this.cur_anim_speed;
		var cur_timescale = this.runtime.timescale;
		if (this.my_timescale !== -1.0)
			cur_timescale = this.my_timescale;
		cur_frame_time /= (cur_timescale === 0 ? 0.000000001 : cur_timescale);
		if (this.animPlaying && now >= this.frameStart + cur_frame_time)
		{
			if (this.animForwards)
			{
				this.cur_frame++;
			}
			else
			{
				this.cur_frame--;
			}
			this.frameStart += cur_frame_time;
			if (this.cur_frame >= cur_animation.frames.length)
			{
				if (cur_animation.pingpong)
				{
					this.animForwards = false;
					this.cur_frame = cur_animation.frames.length - 2;
				}
				else if (cur_animation.loop)
				{
					this.cur_frame = cur_animation.repeatto;
				}
				else
				{
					this.animRepeats++;
					if (this.animRepeats >= cur_animation.repeatcount)
					{
						this.animationFinish(false);
					}
					else
					{
						this.cur_frame = cur_animation.repeatto;
					}
				}
			}
			if (this.cur_frame < 0)
			{
				if (cur_animation.pingpong)
				{
					this.cur_frame = 1;
					this.animForwards = true;
					if (!cur_animation.loop)
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
					}
				}
				else
				{
					if (cur_animation.loop)
					{
						this.cur_frame = cur_animation.repeatto;
					}
					else
					{
						this.animRepeats++;
						if (this.animRepeats >= cur_animation.repeatcount)
						{
							this.animationFinish(true);
						}
						else
						{
							this.cur_frame = cur_animation.repeatto;
						}
					}
				}
			}
			if (this.cur_frame < 0)
				this.cur_frame = 0;
			else if (this.cur_frame >= cur_animation.frames.length)
				this.cur_frame = cur_animation.frames.length - 1;
			if (now > this.frameStart + ((cur_animation.frames[this.cur_frame].duration / this.cur_anim_speed) / (cur_timescale === 0 ? 0.000000001 : cur_timescale)))
			{
				this.frameStart = now;
			}
			next_frame = cur_animation.frames[this.cur_frame];
			this.OnFrameChanged(prev_frame, next_frame);
			this.runtime.redraw = true;
		}
	};
	instanceProto.getAnimationByName = function (name_)
	{
		var i, len, a, lowername = name_.toLowerCase();
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (a.name.toLowerCase() === lowername)
				return a;
		}
		return null;
	};
	instanceProto.getAnimationBySid = function (sid_)
	{
		var i, len, a;
		for (i = 0, len = this.type.animations.length; i < len; i++)
		{
			a = this.type.animations[i];
			if (a.sid === sid_)
				return a;
		}
		return null;
	};
	instanceProto.doChangeAnim = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var anim = this.getAnimationByName(this.changeAnimName);
		this.changeAnimName = "";
		if (!anim)
			return;
		if (anim.name.toLowerCase() === this.cur_animation.name.toLowerCase() && this.animPlaying)
			return;
		this.cur_animation = anim;
		this.cur_anim_speed = anim.speed;
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (this.changeAnimFrom === 1)
			this.cur_frame = 0;
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		this.animForwards = true;
		this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
		this.runtime.redraw = true;
	};
	instanceProto.doChangeAnimFrame = function ()
	{
		var prev_frame = this.cur_animation.frames[this.cur_frame];
		var prev_frame_number = this.cur_frame;
		this.cur_frame = cr.floor(this.changeAnimFrame);
		if (this.cur_frame < 0)
			this.cur_frame = 0;
		if (this.cur_frame >= this.cur_animation.frames.length)
			this.cur_frame = this.cur_animation.frames.length - 1;
		if (prev_frame_number !== this.cur_frame)
		{
			this.OnFrameChanged(prev_frame, this.cur_animation.frames[this.cur_frame]);
			this.frameStart = this.getNowTime();
			this.runtime.redraw = true;
		}
		this.changeAnimFrame = -1;
	};
	instanceProto.OnFrameChanged = function (prev_frame, next_frame)
	{
		var oldw = prev_frame.width;
		var oldh = prev_frame.height;
		var neww = next_frame.width;
		var newh = next_frame.height;
		if (oldw != neww)
			this.width *= (neww / oldw);
		if (oldh != newh)
			this.height *= (newh / oldh);
		this.hotspotX = next_frame.hotspotX;
		this.hotspotY = next_frame.hotspotY;
		this.collision_poly.set_pts(next_frame.poly_pts);
		this.set_bbox_changed();
		this.curFrame = next_frame;
		this.curWebGLTexture = next_frame.webGL_texture;
		var i, len, b;
		for (i = 0, len = this.behavior_insts.length; i < len; i++)
		{
			b = this.behavior_insts[i];
			if (b.onSpriteFrameChanged)
				b.onSpriteFrameChanged(prev_frame, next_frame);
		}
		this.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnFrameChanged, this);
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		var cur_frame = this.curFrame;
		var spritesheeted = cur_frame.spritesheeted;
		var cur_image = cur_frame.texture_img;
		var myx = this.x;
		var myy = this.y;
		var w = this.width;
		var h = this.height;
		if (this.angle === 0 && w >= 0 && h >= 0)
		{
			myx -= this.hotspotX * w;
			myy -= this.hotspotY * h;
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 myx, myy, w, h);
			}
			else
			{
				ctx.drawImage(cur_image, myx, myy, w, h);
			}
		}
		else
		{
			if (this.runtime.pixel_rounding)
			{
				myx = (myx + 0.5) | 0;
				myy = (myy + 0.5) | 0;
			}
			ctx.save();
			var widthfactor = w > 0 ? 1 : -1;
			var heightfactor = h > 0 ? 1 : -1;
			ctx.translate(myx, myy);
			if (widthfactor !== 1 || heightfactor !== 1)
				ctx.scale(widthfactor, heightfactor);
			ctx.rotate(this.angle * widthfactor * heightfactor);
			var drawx = 0 - (this.hotspotX * cr.abs(w))
			var drawy = 0 - (this.hotspotY * cr.abs(h));
			if (spritesheeted)
			{
				ctx.drawImage(cur_image, cur_frame.offx, cur_frame.offy, cur_frame.width, cur_frame.height,
										 drawx, drawy, cr.abs(w), cr.abs(h));
			}
			else
			{
				ctx.drawImage(cur_image, drawx, drawy, cr.abs(w), cr.abs(h));
			}
			ctx.restore();
		}
		/*
		ctx.strokeStyle = "#f00";
		ctx.lineWidth = 3;
		ctx.beginPath();
		this.collision_poly.cache_poly(this.width, this.height, this.angle);
		var i, len, ax, ay, bx, by;
		for (i = 0, len = this.collision_poly.pts_count; i < len; i++)
		{
			ax = this.collision_poly.pts_cache[i*2] + this.x;
			ay = this.collision_poly.pts_cache[i*2+1] + this.y;
			bx = this.collision_poly.pts_cache[((i+1)%len)*2] + this.x;
			by = this.collision_poly.pts_cache[((i+1)%len)*2+1] + this.y;
			ctx.moveTo(ax, ay);
			ctx.lineTo(bx, by);
		}
		ctx.stroke();
		ctx.closePath();
		*/
		/*
		if (this.behavior_insts.length >= 1 && this.behavior_insts[0].draw)
		{
			this.behavior_insts[0].draw(ctx);
		}
		*/
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.curWebGLTexture);
		glw.setOpacity(this.opacity);
		var cur_frame = this.curFrame;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = ((this.x + 0.5) | 0) - this.x;
			var oy = ((this.y + 0.5) | 0) - this.y;
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, cur_frame.sheetTex);
			else
				glw.quad(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy);
		}
		else
		{
			if (cur_frame.spritesheeted)
				glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, cur_frame.sheetTex);
			else
				glw.quad(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly);
		}
	};
	instanceProto.getImagePointIndexByName = function(name_)
	{
		var cur_frame = this.curFrame;
		var i, len;
		for (i = 0, len = cur_frame.image_points.length; i < len; i++)
		{
			if (name_.toLowerCase() === cur_frame.image_points[i][0].toLowerCase())
				return i;
		}
		return -1;
	};
	instanceProto.getImagePoint = function(imgpt, getX)
	{
		var cur_frame = this.curFrame;
		var image_points = cur_frame.image_points;
		var index;
		if (cr.is_string(imgpt))
			index = this.getImagePointIndexByName(imgpt);
		else
			index = imgpt - 1;	// 0 is origin
		index = cr.floor(index);
		if (index < 0 || index >= image_points.length)
			return getX ? this.x : this.y;	// return origin
		var x = (image_points[index][1] - cur_frame.hotspotX) * this.width;
		var y = image_points[index][2];
		y = (y - cur_frame.hotspotY) * this.height;
		var cosa = Math.cos(this.angle);
		var sina = Math.sin(this.angle);
		var x_temp = (x * cosa) - (y * sina);
		y = (y * cosa) + (x * sina);
		x = x_temp;
		x += this.x;
		y += this.y;
		return getX ? x : y;
	};
	function Cnds() {};
	var arrCache = [];
	function allocArr()
	{
		if (arrCache.length)
			return arrCache.pop();
		else
			return [0, 0];
	};
	function freeArr(a)
	{
		a[0] = 0;
		a[1] = 0;
		arrCache.push(a);
	};
	function collmemory_add(collmemory, a, b)
	{
		var arr = allocArr();
		arr[0] = a.uid;
		arr[1] = b.uid;
		collmemory.push(arr);
	};
	function collmemory_remove(collmemory, a, b)
	{
;
		var a_uid = a.uid;
		var b_uid = b.uid;
		var i, j = 0, len, entry;
		for (i = 0, len = collmemory.length; i < len; i++)
		{
			entry = collmemory[i];
			if (!((entry[0] === a_uid && entry[1] === b_uid) || (entry[0] === b_uid && entry[1] === a_uid)))
			{
				collmemory[j][0] = collmemory[i][0];
				collmemory[j][1] = collmemory[i][1];
				j++;
			}
		}
		for (i = j; i < len; i++)
			freeArr(collmemory[i]);
		collmemory.length = j;
	};
	function collmemory_removeInstance(collmemory, inst)
	{
;
		var i, j = 0, len, entry, uid = inst.uid;
		for (i = 0, len = collmemory.length; i < len; i++)
		{
			entry = collmemory[i];
			if (entry[0] !== uid && entry[1] !== uid)
			{
				collmemory[j][0] = collmemory[i][0];
				collmemory[j][1] = collmemory[i][1];
				j++;
			}
		}
		for (i = j; i < len; i++)
			freeArr(collmemory[i]);
		collmemory.length = j;
	};
	function collmemory_has(collmemory, a, b)
	{
		var a_uid = a.uid;
		var b_uid = b.uid;
		var i, len, entry;
		for (i = 0, len = collmemory.length; i < len; i++)
		{
			entry = collmemory[i];
			if ((entry[0] === a_uid && entry[1] === b_uid) || (entry[0] === b_uid && entry[1] === a_uid))
				return true;
		}
		return false;
	};
	Cnds.prototype.OnCollision = function (rtype)
	{
		if (!rtype)
			return false;
		var runtime = this.runtime;
		var cnd = runtime.getCurrentCondition();
		var ltype = cnd.type;
		if (!cnd.extra.collmemory)
		{
			cnd.extra.collmemory = [];
			runtime.addDestroyCallback((function (collmemory) {
				return function(inst) {
					collmemory_removeInstance(collmemory, inst);
				};
			})(cnd.extra.collmemory));
		}
		var lsol = ltype.getCurrentSol();
		var rsol = rtype.getCurrentSol();
		var linstances = lsol.getObjects();
		var rinstances = rsol.getObjects();
		var l, linst, r, rinst;
		var curlsol, currsol;
		var current_event = runtime.getCurrentEventStack().current_event;
		var orblock = current_event.orblock;
		for (l = 0; l < linstances.length; l++)
		{
			linst = linstances[l];
			for (r = 0; r < rinstances.length; r++)
			{
				rinst = rinstances[r];
				if (runtime.testOverlap(linst, rinst) || runtime.checkRegisteredCollision(linst, rinst))
				{
					if (!collmemory_has(cnd.extra.collmemory, linst, rinst))
					{
						collmemory_add(cnd.extra.collmemory, linst, rinst);
						runtime.pushCopySol(current_event.solModifiers);
						curlsol = ltype.getCurrentSol();
						currsol = rtype.getCurrentSol();
						curlsol.select_all = false;
						currsol.select_all = false;
						if (ltype === rtype)
						{
							curlsol.instances.length = 2;	// just use lsol, is same reference as rsol
							curlsol.instances[0] = linst;
							curlsol.instances[1] = rinst;
							ltype.applySolToContainer();
						}
						else
						{
							curlsol.instances.length = 1;
							currsol.instances.length = 1;
							curlsol.instances[0] = linst;
							currsol.instances[0] = rinst;
							ltype.applySolToContainer();
							rtype.applySolToContainer();
						}
						current_event.retrigger();
						runtime.popSol(current_event.solModifiers);
					}
				}
				else
				{
					collmemory_remove(cnd.extra.collmemory, linst, rinst);
				}
			}
		}
		return false;
	};
	var rpicktype = null;
	var rtopick = new cr.ObjectSet();
	var needscollisionfinish = false;
	function DoOverlapCondition(rtype, offx, offy)
	{
		if (!rtype)
			return false;
		var do_offset = (offx !== 0 || offy !== 0);
		var oldx, oldy, ret = false, r, lenr, rinst;
		var cnd = this.runtime.getCurrentCondition();
		var ltype = cnd.type;
		var inverted = cnd.inverted;
		var rsol = rtype.getCurrentSol();
		var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
		var rinstances;
		if (rsol.select_all)
			rinstances = rsol.type.instances;
		else if (orblock)
			rinstances = rsol.else_instances;
		else
			rinstances = rsol.instances;
		rpicktype = rtype;
		needscollisionfinish = (ltype !== rtype && !inverted);
		if (do_offset)
		{
			oldx = this.x;
			oldy = this.y;
			this.x += offx;
			this.y += offy;
			this.set_bbox_changed();
		}
		for (r = 0, lenr = rinstances.length; r < lenr; r++)
		{
			rinst = rinstances[r];
			if (this.runtime.testOverlap(this, rinst))
			{
				ret = true;
				if (inverted)
					break;
				if (ltype !== rtype)
					rtopick.add(rinst);
			}
		}
		if (do_offset)
		{
			this.x = oldx;
			this.y = oldy;
			this.set_bbox_changed();
		}
		return ret;
	};
	typeProto.finish = function (do_pick)
	{
		if (!needscollisionfinish)
			return;
		if (do_pick)
		{
			var orblock = this.runtime.getCurrentEventStack().current_event.orblock;
			var sol = rpicktype.getCurrentSol();
			var topick = rtopick.valuesRef();
			var i, len, inst;
			if (sol.select_all)
			{
				sol.select_all = false;
				sol.instances.length = topick.length;
				for (i = 0, len = topick.length; i < len; i++)
				{
					sol.instances[i] = topick[i];
				}
				if (orblock)
				{
					sol.else_instances.length = 0;
					for (i = 0, len = rpicktype.instances.length; i < len; i++)
					{
						inst = rpicktype.instances[i];
						if (!rtopick.contains(inst))
							sol.else_instances.push(inst);
					}
				}
			}
			else
			{
				var initsize = sol.instances.length;
				sol.instances.length = initsize + topick.length;
				for (i = 0, len = topick.length; i < len; i++)
				{
					sol.instances[initsize + i] = topick[i];
					if (orblock)
						cr.arrayFindRemove(sol.else_instances, topick[i]);
				}
			}
			rpicktype.applySolToContainer();
		}
		rtopick.clear();
		needscollisionfinish = false;
	};
	Cnds.prototype.IsOverlapping = function (rtype)
	{
		return DoOverlapCondition.call(this, rtype, 0, 0);
	};
	Cnds.prototype.IsOverlappingOffset = function (rtype, offx, offy)
	{
		return DoOverlapCondition.call(this, rtype, offx, offy);
	};
	Cnds.prototype.IsAnimPlaying = function (animname)
	{
		if (this.changeAnimName.length)
			return this.changeAnimName.toLowerCase() === animname.toLowerCase();
		else
			return this.cur_animation.name.toLowerCase() === animname.toLowerCase();
	};
	Cnds.prototype.CompareFrame = function (cmp, framenum)
	{
		return cr.do_cmp(this.cur_frame, cmp, framenum);
	};
	Cnds.prototype.OnAnimFinished = function (animname)
	{
		return this.animTriggerName.toLowerCase() === animname.toLowerCase();
	};
	Cnds.prototype.OnAnyAnimFinished = function ()
	{
		return true;
	};
	Cnds.prototype.OnFrameChanged = function ()
	{
		return true;
	};
	Cnds.prototype.IsMirrored = function ()
	{
		return this.width < 0;
	};
	Cnds.prototype.IsFlipped = function ()
	{
		return this.height < 0;
	};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	Cnds.prototype.IsCollisionEnabled = function ()
	{
		return this.collisionsEnabled;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Spawn = function (obj, layer, imgpt)
	{
		if (!obj || !layer)
			return;
		var inst = this.runtime.createInstance(obj, layer, this.getImagePoint(imgpt, true), this.getImagePoint(imgpt, false));
		if (!inst)
			return;
		if (typeof inst.angle !== "undefined")
		{
			inst.angle = this.angle;
			inst.set_bbox_changed();
		}
		this.runtime.isInOnDestroy++;
		var i, len, s;
		this.runtime.trigger(Object.getPrototypeOf(obj.plugin).cnds.OnCreated, inst);
		if (inst.is_contained)
		{
			for (i = 0, len = inst.siblings.length; i < len; i++)
			{
				s = inst.siblings[i];
				this.runtime.trigger(Object.getPrototypeOf(s.type.plugin).cnds.OnCreated, s);
			}
		}
		this.runtime.isInOnDestroy--;
		var cur_act = this.runtime.getCurrentAction();
		var reset_sol = false;
		if (cr.is_undefined(cur_act.extra.Spawn_LastExec) || cur_act.extra.Spawn_LastExec < this.runtime.execcount)
		{
			reset_sol = true;
			cur_act.extra.Spawn_LastExec = this.runtime.execcount;
		}
		var sol;
		if (obj != this.type)
		{
			sol = obj.getCurrentSol();
			sol.select_all = false;
			if (reset_sol)
			{
				sol.instances.length = 1;
				sol.instances[0] = inst;
			}
			else
				sol.instances.push(inst);
			if (inst.is_contained)
			{
				for (i = 0, len = inst.siblings.length; i < len; i++)
				{
					s = inst.siblings[i];
					sol = s.type.getCurrentSol();
					sol.select_all = false;
					if (reset_sol)
					{
						sol.instances.length = 1;
						sol.instances[0] = s;
					}
					else
						sol.instances.push(s);
				}
			}
		}
	};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.StopAnim = function ()
	{
		this.animPlaying = false;
	};
	Acts.prototype.StartAnim = function (from)
	{
		this.animPlaying = true;
		this.frameStart = this.getNowTime();
		if (from === 1 && this.cur_frame !== 0)
		{
			this.changeAnimFrame = 0;
			if (!this.inAnimTrigger)
				this.doChangeAnimFrame();
		}
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetAnim = function (animname, from)
	{
		this.changeAnimName = animname;
		this.changeAnimFrom = from;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnim();
	};
	Acts.prototype.SetAnimFrame = function (framenumber)
	{
		this.changeAnimFrame = framenumber;
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
		if (!this.inAnimTrigger)
			this.doChangeAnimFrame();
	};
	Acts.prototype.SetAnimSpeed = function (s)
	{
		this.cur_anim_speed = cr.abs(s);
		this.animForwards = (s >= 0);
		if (!this.isTicking)
		{
			this.runtime.tickMe(this);
			this.isTicking = true;
		}
	};
	Acts.prototype.SetMirrored = function (m)
	{
		var neww = cr.abs(this.width) * (m === 0 ? -1 : 1);
		if (this.width === neww)
			return;
		this.width = neww;
		this.set_bbox_changed();
	};
	Acts.prototype.SetFlipped = function (f)
	{
		var newh = cr.abs(this.height) * (f === 0 ? -1 : 1);
		if (this.height === newh)
			return;
		this.height = newh;
		this.set_bbox_changed();
	};
	Acts.prototype.SetScale = function (s)
	{
		var cur_frame = this.curFrame;
		var mirror_factor = (this.width < 0 ? -1 : 1);
		var flip_factor = (this.height < 0 ? -1 : 1);
		var new_width = cur_frame.width * s * mirror_factor;
		var new_height = cur_frame.height * s * flip_factor;
		if (this.width !== new_width || this.height !== new_height)
		{
			this.width = new_width;
			this.height = new_height;
			this.set_bbox_changed();
		}
	};
	Acts.prototype.LoadURL = function (url_, resize_)
	{
		var img = new Image();
		var self = this;
		var curFrame_ = this.curFrame;
		img.onload = function ()
		{
			if (curFrame_.texture_img.src === img.src)
			{
				if (self.runtime.glwrap && self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.runtime.redraw = true;
				self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
				return;
			}
			curFrame_.texture_img = img;
			curFrame_.offx = 0;
			curFrame_.offy = 0;
			curFrame_.width = img.width;
			curFrame_.height = img.height;
			curFrame_.spritesheeted = false;
			curFrame_.datauri = "";
			if (self.runtime.glwrap)
			{
				if (curFrame_.webGL_texture)
					self.runtime.glwrap.deleteTexture(curFrame_.webGL_texture);
				curFrame_.webGL_texture = self.runtime.glwrap.loadTexture(img, false, self.runtime.linearSampling);
				if (self.curFrame === curFrame_)
					self.curWebGLTexture = curFrame_.webGL_texture;
				self.type.updateAllCurrentTexture();
			}
			if (resize_ === 0)		// resize to image size
			{
				self.width = img.width;
				self.height = img.height;
				self.set_bbox_changed();
			}
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.Sprite.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	Acts.prototype.SetCollisions = function (set_)
	{
		this.collisionsEnabled = (set_ !== 0);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.AnimationFrame = function (ret)
	{
		ret.set_int(this.cur_frame);
	};
	Exps.prototype.AnimationFrameCount = function (ret)
	{
		ret.set_int(this.cur_animation.frames.length);
	};
	Exps.prototype.AnimationName = function (ret)
	{
		ret.set_string(this.cur_animation.name);
	};
	Exps.prototype.AnimationSpeed = function (ret)
	{
		ret.set_float(this.cur_anim_speed);
	};
	Exps.prototype.ImagePointX = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, true));
	};
	Exps.prototype.ImagePointY = function (ret, imgpt)
	{
		ret.set_float(this.getImagePoint(imgpt, false));
	};
	Exps.prototype.ImagePointCount = function (ret)
	{
		ret.set_int(this.curFrame.image_points.length);
	};
	Exps.prototype.ImageWidth = function (ret)
	{
		ret.set_float(this.curFrame.width);
	};
	Exps.prototype.ImageHeight = function (ret)
	{
		ret.set_float(this.curFrame.height);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.Text = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.Text.prototype;
	pluginProto.onCreate = function ()
	{
		pluginProto.acts.SetWidth = function (w)
		{
			if (this.width !== w)
			{
				this.width = w;
				this.text_changed = true;	// also recalculate text wrapping
				this.set_bbox_changed();
			}
		};
	};
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		var i, len, inst;
		for (i = 0, len = this.instances.length; i < len; i++)
		{
			inst = this.instances[i];
			inst.mycanvas = null;
			inst.myctx = null;
			inst.mytex = null;
		}
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
		if (this.recycled)
			this.lines.length = 0;
		else
			this.lines = [];		// for word wrapping
		this.text_changed = true;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var requestedWebFonts = {};		// already requested web fonts have an entry here
	instanceProto.onCreate = function()
	{
		this.text = this.properties[0];
		this.visible = (this.properties[1] === 0);		// 0=visible, 1=invisible
		this.font = this.properties[2];
		this.color = this.properties[3];
		this.halign = this.properties[4];				// 0=left, 1=center, 2=right
		this.valign = this.properties[5];				// 0=top, 1=center, 2=bottom
		this.wrapbyword = (this.properties[7] === 0);	// 0=word, 1=character
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
		this.line_height_offset = this.properties[8];
		this.facename = "";
		this.fontstyle = "";
		var arr = this.font.split(" ");
		this.ptSize = 0;
		this.textWidth = 0;
		this.textHeight = 0;
		var i;
		for (i = 0; i < arr.length; i++)
		{
			if (arr[i].substr(arr[i].length - 2, 2) === "pt")
			{
				this.ptSize = parseInt(arr[i].substr(0, arr[i].length - 2));
				this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
				if (i > 0)
					this.fontstyle = arr[i - 1];
				this.facename = arr[i + 1];
				for (i = i + 2; i < arr.length; i++)
					this.facename += " " + arr[i];
				break;
			}
		}
		this.mycanvas = null;
		this.myctx = null;
		this.mytex = null;
		this.need_text_redraw = false;
		this.last_render_tick = this.runtime.tickcount;
		if (this.recycled)
			this.rcTex.set(0, 0, 1, 1);
		else
			this.rcTex = new cr.rect(0, 0, 1, 1);
		if (this.runtime.glwrap)
			this.runtime.tickMe(this);
;
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"t": this.text,
			"f": this.font,
			"c": this.color,
			"ha": this.halign,
			"va": this.valign,
			"wr": this.wrapbyword,
			"lho": this.line_height_offset,
			"fn": this.facename,
			"fs": this.fontstyle,
			"ps": this.ptSize,
			"pxh": this.pxHeight,
			"tw": this.textWidth,
			"th": this.textHeight,
			"lrt": this.last_render_tick
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.text = o["t"];
		this.font = o["f"];
		this.color = o["c"];
		this.halign = o["ha"];
		this.valign = o["va"];
		this.wrapbyword = o["wr"];
		this.line_height_offset = o["lho"];
		this.facename = o["fn"];
		this.fontstyle = o["fs"];
		this.ptSize = o["ps"];
		this.pxHeight = o["pxh"];
		this.textWidth = o["tw"];
		this.textHeight = o["th"];
		this.last_render_tick = o["lrt"];
		this.text_changed = true;
		this.lastwidth = this.width;
		this.lastwrapwidth = this.width;
		this.lastheight = this.height;
	};
	instanceProto.tick = function ()
	{
		if (this.runtime.glwrap && this.mytex && (this.runtime.tickcount - this.last_render_tick >= 300))
		{
			var layer = this.layer;
            this.update_bbox();
            var bbox = this.bbox;
            if (bbox.right < layer.viewLeft || bbox.bottom < layer.viewTop || bbox.left > layer.viewRight || bbox.top > layer.viewBottom)
			{
				this.runtime.glwrap.deleteTexture(this.mytex);
				this.mytex = null;
				this.myctx = null;
				this.mycanvas = null;
			}
		}
	};
	instanceProto.onDestroy = function ()
	{
		this.myctx = null;
		this.mycanvas = null;
		if (this.runtime.glwrap && this.mytex)
			this.runtime.glwrap.deleteTexture(this.mytex);
		this.mytex = null;
	};
	instanceProto.updateFont = function ()
	{
		this.font = this.fontstyle + " " + this.ptSize.toString() + "pt " + this.facename;
		this.text_changed = true;
		this.runtime.redraw = true;
	};
	instanceProto.draw = function(ctx, glmode)
	{
		ctx.font = this.font;
		ctx.textBaseline = "top";
		ctx.fillStyle = this.color;
		ctx.globalAlpha = glmode ? 1 : this.opacity;
		var myscale = 1;
		if (glmode)
		{
			myscale = this.layer.getScale();
			ctx.save();
			ctx.scale(myscale, myscale);
		}
		if (this.text_changed || this.width !== this.lastwrapwidth)
		{
			this.type.plugin.WordWrap(this.text, this.lines, ctx, this.width, this.wrapbyword);
			this.text_changed = false;
			this.lastwrapwidth = this.width;
		}
		this.update_bbox();
		var penX = glmode ? 0 : this.bquad.tlx;
		var penY = glmode ? 0 : this.bquad.tly;
		if (this.runtime.pixel_rounding)
		{
			penX = (penX + 0.5) | 0;
			penY = (penY + 0.5) | 0;
		}
		if (this.angle !== 0 && !glmode)
		{
			ctx.save();
			ctx.translate(penX, penY);
			ctx.rotate(this.angle);
			penX = 0;
			penY = 0;
		}
		var endY = penY + this.height;
		var line_height = this.pxHeight;
		line_height += (this.line_height_offset * this.runtime.devicePixelRatio);
		var drawX;
		var i;
		if (this.valign === 1)		// center
			penY += Math.max(this.height / 2 - (this.lines.length * line_height) / 2, 0);
		else if (this.valign === 2)	// bottom
			penY += Math.max(this.height - (this.lines.length * line_height) - 2, 0);
		for (i = 0; i < this.lines.length; i++)
		{
			drawX = penX;
			if (this.halign === 1)		// center
				drawX = penX + (this.width - this.lines[i].width) / 2;
			else if (this.halign === 2)	// right
				drawX = penX + (this.width - this.lines[i].width);
			ctx.fillText(this.lines[i].text, drawX, penY);
			penY += line_height;
			if (penY >= endY - line_height)
				break;
		}
		if (this.angle !== 0 || glmode)
			ctx.restore();
		this.last_render_tick = this.runtime.tickcount;
	};
	instanceProto.drawGL = function(glw)
	{
		if (this.width < 1 || this.height < 1)
			return;
		var need_redraw = this.text_changed || this.need_text_redraw;
		this.need_text_redraw = false;
		var layer_scale = this.layer.getScale();
		var layer_angle = this.layer.getAngle();
		var rcTex = this.rcTex;
		var floatscaledwidth = layer_scale * this.width;
		var floatscaledheight = layer_scale * this.height;
		var scaledwidth = Math.ceil(floatscaledwidth);
		var scaledheight = Math.ceil(floatscaledheight);
		var windowWidth = this.runtime.width;
		var windowHeight = this.runtime.height;
		var halfw = windowWidth / 2;
		var halfh = windowHeight / 2;
		if (!this.myctx)
		{
			this.mycanvas = document.createElement("canvas");
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			this.lastwidth = scaledwidth;
			this.lastheight = scaledheight;
			need_redraw = true;
			this.myctx = this.mycanvas.getContext("2d");
		}
		if (scaledwidth !== this.lastwidth || scaledheight !== this.lastheight)
		{
			this.mycanvas.width = scaledwidth;
			this.mycanvas.height = scaledheight;
			if (this.mytex)
			{
				glw.deleteTexture(this.mytex);
				this.mytex = null;
			}
			need_redraw = true;
		}
		if (need_redraw)
		{
			this.myctx.clearRect(0, 0, scaledwidth, scaledheight);
			this.draw(this.myctx, true);
			if (!this.mytex)
				this.mytex = glw.createEmptyTexture(scaledwidth, scaledheight, this.runtime.linearSampling, this.runtime.isMobile);
			glw.videoToTexture(this.mycanvas, this.mytex, this.runtime.isMobile);
		}
		this.lastwidth = scaledwidth;
		this.lastheight = scaledheight;
		glw.setTexture(this.mytex);
		glw.setOpacity(this.opacity);
		glw.resetModelView();
		glw.translate(-halfw, -halfh);
		glw.updateModelView();
		var q = this.bquad;
		var tlx = this.layer.layerToCanvas(q.tlx, q.tly, true);
		var tly = this.layer.layerToCanvas(q.tlx, q.tly, false);
		var trx = this.layer.layerToCanvas(q.trx, q.try_, true);
		var try_ = this.layer.layerToCanvas(q.trx, q.try_, false);
		var brx = this.layer.layerToCanvas(q.brx, q.bry, true);
		var bry = this.layer.layerToCanvas(q.brx, q.bry, false);
		var blx = this.layer.layerToCanvas(q.blx, q.bly, true);
		var bly = this.layer.layerToCanvas(q.blx, q.bly, false);
		if (this.runtime.pixel_rounding || (this.angle === 0 && layer_angle === 0))
		{
			var ox = ((tlx + 0.5) | 0) - tlx;
			var oy = ((tly + 0.5) | 0) - tly
			tlx += ox;
			tly += oy;
			trx += ox;
			try_ += oy;
			brx += ox;
			bry += oy;
			blx += ox;
			bly += oy;
		}
		if (this.angle === 0 && layer_angle === 0)
		{
			trx = tlx + scaledwidth;
			try_ = tly;
			brx = trx;
			bry = tly + scaledheight;
			blx = tlx;
			bly = bry;
			rcTex.right = 1;
			rcTex.bottom = 1;
		}
		else
		{
			rcTex.right = floatscaledwidth / scaledwidth;
			rcTex.bottom = floatscaledheight / scaledheight;
		}
		glw.quadTex(tlx, tly, trx, try_, brx, bry, blx, bly, rcTex);
		glw.resetModelView();
		glw.scale(layer_scale, layer_scale);
		glw.rotateZ(-this.layer.getAngle());
		glw.translate((this.layer.viewLeft + this.layer.viewRight) / -2, (this.layer.viewTop + this.layer.viewBottom) / -2);
		glw.updateModelView();
		this.last_render_tick = this.runtime.tickcount;
	};
	var wordsCache = [];
	pluginProto.TokeniseWords = function (text)
	{
		wordsCache.length = 0;
		var cur_word = "";
		var ch;
		var i = 0;
		while (i < text.length)
		{
			ch = text.charAt(i);
			if (ch === "\n")
			{
				if (cur_word.length)
				{
					wordsCache.push(cur_word);
					cur_word = "";
				}
				wordsCache.push("\n");
				++i;
			}
			else if (ch === " " || ch === "\t" || ch === "-")
			{
				do {
					cur_word += text.charAt(i);
					i++;
				}
				while (i < text.length && (text.charAt(i) === " " || text.charAt(i) === "\t"));
				wordsCache.push(cur_word);
				cur_word = "";
			}
			else if (i < text.length)
			{
				cur_word += ch;
				i++;
			}
		}
		if (cur_word.length)
			wordsCache.push(cur_word);
	};
	var linesCache = [];
	function allocLine()
	{
		if (linesCache.length)
			return linesCache.pop();
		else
			return {};
	};
	function freeLine(l)
	{
		linesCache.push(l);
	};
	function freeAllLines(arr)
	{
		var i, len;
		for (i = 0, len = arr.length; i < len; i++)
		{
			freeLine(arr[i]);
		}
		arr.length = 0;
	};
	pluginProto.WordWrap = function (text, lines, ctx, width, wrapbyword)
	{
		if (!text || !text.length)
		{
			freeAllLines(lines);
			return;
		}
		if (width <= 2.0)
		{
			freeAllLines(lines);
			return;
		}
		if (text.length <= 100 && text.indexOf("\n") === -1)
		{
			var all_width = ctx.measureText(text).width;
			if (all_width <= width)
			{
				freeAllLines(lines);
				lines.push(allocLine());
				lines[0].text = text;
				lines[0].width = all_width;
				return;
			}
		}
		this.WrapText(text, lines, ctx, width, wrapbyword);
	};
	pluginProto.WrapText = function (text, lines, ctx, width, wrapbyword)
	{
		var wordArray;
		if (wrapbyword)
		{
			this.TokeniseWords(text);	// writes to wordsCache
			wordArray = wordsCache;
		}
		else
			wordArray = text;
		var cur_line = "";
		var prev_line;
		var line_width;
		var i;
		var lineIndex = 0;
		var line;
		for (i = 0; i < wordArray.length; i++)
		{
			if (wordArray[i] === "\n")
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = cur_line;
				line.width = ctx.measureText(cur_line).width;
				lineIndex++;
				cur_line = "";
				continue;
			}
			prev_line = cur_line;
			cur_line += wordArray[i];
			line_width = ctx.measureText(cur_line).width;
			if (line_width >= width)
			{
				if (lineIndex >= lines.length)
					lines.push(allocLine());
				line = lines[lineIndex];
				line.text = prev_line;
				line.width = ctx.measureText(prev_line).width;
				lineIndex++;
				cur_line = wordArray[i];
				if (!wrapbyword && cur_line === " ")
					cur_line = "";
			}
		}
		if (cur_line.length)
		{
			if (lineIndex >= lines.length)
				lines.push(allocLine());
			line = lines[lineIndex];
			line.text = cur_line;
			line.width = ctx.measureText(cur_line).width;
			lineIndex++;
		}
		for (i = lineIndex; i < lines.length; i++)
			freeLine(lines[i]);
		lines.length = lineIndex;
	};
	function Cnds() {};
	Cnds.prototype.CompareText = function(text_to_compare, case_sensitive)
	{
		if (case_sensitive)
			return this.text == text_to_compare;
		else
			return this.text.toLowerCase() == text_to_compare.toLowerCase();
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetText = function(param)
	{
		if (cr.is_number(param) && param < 1e9)
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_set = param.toString();
		if (this.text !== text_to_set)
		{
			this.text = text_to_set;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.AppendText = function(param)
	{
		if (cr.is_number(param))
			param = Math.round(param * 1e10) / 1e10;	// round to nearest ten billionth - hides floating point errors
		var text_to_append = param.toString();
		if (text_to_append)	// not empty
		{
			this.text += text_to_append;
			this.text_changed = true;
			this.runtime.redraw = true;
		}
	};
	Acts.prototype.SetFontFace = function (face_, style_)
	{
		var newstyle = "";
		switch (style_) {
		case 1: newstyle = "bold"; break;
		case 2: newstyle = "italic"; break;
		case 3: newstyle = "bold italic"; break;
		}
		if (face_ === this.facename && newstyle === this.fontstyle)
			return;		// no change
		this.facename = face_;
		this.fontstyle = newstyle;
		this.updateFont();
	};
	Acts.prototype.SetFontSize = function (size_)
	{
		if (this.ptSize === size_)
			return;
		this.ptSize = size_;
		this.pxHeight = Math.ceil((this.ptSize / 72.0) * 96.0) + 4;	// assume 96dpi...
		this.updateFont();
	};
	Acts.prototype.SetFontColor = function (rgb)
	{
		var newcolor = "rgb(" + cr.GetRValue(rgb).toString() + "," + cr.GetGValue(rgb).toString() + "," + cr.GetBValue(rgb).toString() + ")";
		if (newcolor === this.color)
			return;
		this.color = newcolor;
		this.need_text_redraw = true;
		this.runtime.redraw = true;
	};
	Acts.prototype.SetWebFont = function (familyname_, cssurl_)
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Text plugin: 'Set web font' not supported on this platform - the action has been ignored");
			return;		// DC todo
		}
		var self = this;
		var refreshFunc = (function () {
							self.runtime.redraw = true;
							self.text_changed = true;
						});
		if (requestedWebFonts.hasOwnProperty(cssurl_))
		{
			var newfacename = "'" + familyname_ + "'";
			if (this.facename === newfacename)
				return;	// no change
			this.facename = newfacename;
			this.updateFont();
			for (var i = 1; i < 10; i++)
			{
				setTimeout(refreshFunc, i * 100);
				setTimeout(refreshFunc, i * 1000);
			}
			return;
		}
		var wf = document.createElement("link");
		wf.href = cssurl_;
		wf.rel = "stylesheet";
		wf.type = "text/css";
		wf.onload = refreshFunc;
		document.getElementsByTagName('head')[0].appendChild(wf);
		requestedWebFonts[cssurl_] = true;
		this.facename = "'" + familyname_ + "'";
		this.updateFont();
		for (var i = 1; i < 10; i++)
		{
			setTimeout(refreshFunc, i * 100);
			setTimeout(refreshFunc, i * 1000);
		}
;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Text = function(ret)
	{
		ret.set_string(this.text);
	};
	Exps.prototype.FaceName = function (ret)
	{
		ret.set_string(this.facename);
	};
	Exps.prototype.FaceSize = function (ret)
	{
		ret.set_int(this.ptSize);
	};
	Exps.prototype.TextWidth = function (ret)
	{
		var w = 0;
		var i, len, x;
		for (i = 0, len = this.lines.length; i < len; i++)
		{
			x = this.lines[i].width;
			if (w < x)
				w = x;
		}
		ret.set_int(w);
	};
	Exps.prototype.TextHeight = function (ret)
	{
		ret.set_int(this.lines.length * this.pxHeight);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.TextBox = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.TextBox.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	var elemTypes = ["text", "password", "email", "number", "tel", "url"];
	if (navigator.userAgent.indexOf("MSIE 9") > -1)
	{
		elemTypes[2] = "text";
		elemTypes[3] = "text";
		elemTypes[4] = "text";
		elemTypes[5] = "text";
	}
	instanceProto.onCreate = function()
	{
		if (this.runtime.isDomFree)
		{
			cr.logexport("[Construct 2] Textbox plugin not supported on this platform - the object will not be created");
			return;
		}
		if (this.properties[7] === 6)	// textarea
		{
			this.elem = document.createElement("textarea");
			jQuery(this.elem).css("resize", "none");
		}
		else
		{
			this.elem = document.createElement("input");
			this.elem.type = elemTypes[this.properties[7]];
		}
		this.elem.id = this.properties[9];
		jQuery(this.elem).appendTo(this.runtime.canvasdiv ? this.runtime.canvasdiv : "body");
		this.elem["autocomplete"] = "off";
		this.elem.value = this.properties[0];
		this.elem["placeholder"] = this.properties[1];
		this.elem.title = this.properties[2];
		this.elem.disabled = (this.properties[4] === 0);
		this.elem["readOnly"] = (this.properties[5] === 1);
		this.elem["spellcheck"] = (this.properties[6] === 1);
		this.autoFontSize = (this.properties[8] !== 0);
		if (this.properties[3] === 0)
		{
			jQuery(this.elem).hide();
			this.visible = false;
		}
		var onchangetrigger = (function (self) {
			return function() {
				self.runtime.trigger(cr.plugins_.TextBox.prototype.cnds.OnTextChanged, self);
			};
		})(this);
		this.elem["oninput"] = onchangetrigger;
		if (navigator.userAgent.indexOf("MSIE") !== -1)
			this.elem["oncut"] = onchangetrigger;
		this.elem.onclick = (function (self) {
			return function(e) {
				e.stopPropagation();
				self.runtime.trigger(cr.plugins_.TextBox.prototype.cnds.OnClicked, self);
			};
		})(this);
		this.elem.ondblclick = (function (self) {
			return function(e) {
				e.stopPropagation();
				self.runtime.trigger(cr.plugins_.TextBox.prototype.cnds.OnDoubleClicked, self);
			};
		})(this);
		this.elem.addEventListener("touchstart", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchmove", function (e) {
			e.stopPropagation();
		}, false);
		this.elem.addEventListener("touchend", function (e) {
			e.stopPropagation();
		}, false);
		jQuery(this.elem).mousedown(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).mouseup(function (e) {
			e.stopPropagation();
		});
		jQuery(this.elem).keydown(function (e) {
			if (e.which !== 13 && e.which != 27)	// allow enter and escape
				e.stopPropagation();
		});
		jQuery(this.elem).keyup(function (e) {
			if (e.which !== 13 && e.which != 27)	// allow enter and escape
				e.stopPropagation();
		});
		this.updatePosition();
		this.runtime.tickMe(this);
	};
	instanceProto.saveToJSON = function ()
	{
		return {
			"text": this.elem.value,
			"placeholder": this.elem.placeholder,
			"tooltip": this.elem.title,
			"disabled": !!this.elem.disabled,
			"readonly": !!this.elem.readOnly,
			"spellcheck": !!this.elem["spellcheck"]
		};
	};
	instanceProto.loadFromJSON = function (o)
	{
		this.elem.value = o["text"];
		this.elem.placeholder = o["placeholder"];
		this.elem.title = o["tooltip"];
		this.elem.disabled = o["disabled"];
		this.elem.readOnly = o["readonly"];
		this.elem["spellcheck"] = o["spellcheck"];
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.isDomFree)
				return;
		jQuery(this.elem).remove();
		this.elem = null;
	};
	instanceProto.tick = function ()
	{
		this.updatePosition();
	};
	instanceProto.updatePosition = function ()
	{
		if (this.runtime.isDomFree)
			return;
		var left = this.layer.layerToCanvas(this.x, this.y, true);
		var top = this.layer.layerToCanvas(this.x, this.y, false);
		var right = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, true);
		var bottom = this.layer.layerToCanvas(this.x + this.width, this.y + this.height, false);
		if (!this.visible || !this.layer.visible || right <= 0 || bottom <= 0 || left >= this.runtime.width || top >= this.runtime.height)
		{
			jQuery(this.elem).hide();
			return;
		}
		if (left < 1)
			left = 1;
		if (top < 1)
			top = 1;
		if (right >= this.runtime.width)
			right = this.runtime.width - 1;
		if (bottom >= this.runtime.height)
			bottom = this.runtime.height - 1;
		jQuery(this.elem).show();
		var offx = Math.round(left) + jQuery(this.runtime.canvas).offset().left;
		var offy = Math.round(top) + jQuery(this.runtime.canvas).offset().top;
		jQuery(this.elem).offset({left: offx, top: offy});
		jQuery(this.elem).width(Math.round(right - left));
		jQuery(this.elem).height(Math.round(bottom - top));
		if (this.autoFontSize)
			jQuery(this.elem).css("font-size", (this.layer.getScale() - 0.2) + "em");
	};
	instanceProto.draw = function(ctx)
	{
	};
	instanceProto.drawGL = function(glw)
	{
	};
	function Cnds() {};
	Cnds.prototype.CompareText = function (text, case_)
	{
		if (this.runtime.isDomFree)
			return false;
		if (case_ === 0)	// insensitive
			return this.elem.value.toLowerCase() === text.toLowerCase();
		else
			return this.elem.value === text;
	};
	Cnds.prototype.OnTextChanged = function ()
	{
		return true;
	};
	Cnds.prototype.OnClicked = function ()
	{
		return true;
	};
	Cnds.prototype.OnDoubleClicked = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetText = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.value = text;
	};
	Acts.prototype.SetPlaceholder = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.placeholder = text;
	};
	Acts.prototype.SetTooltip = function (text)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.title = text;
	};
	Acts.prototype.SetVisible = function (vis)
	{
		if (this.runtime.isDomFree)
			return;
		this.visible = (vis !== 0);
	};
	Acts.prototype.SetEnabled = function (en)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.disabled = (en === 0);
	};
	Acts.prototype.SetReadOnly = function (ro)
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.readOnly = (ro === 0);
	};
	Acts.prototype.SetFocus = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.focus();
	};
	Acts.prototype.SetBlur = function ()
	{
		if (this.runtime.isDomFree)
			return;
		this.elem.blur();
	};
	Acts.prototype.SetCSSStyle = function (p, v)
	{
		if (this.runtime.isDomFree)
			return;
		jQuery(this.elem).css(p, v);
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Text = function (ret)
	{
		if (this.runtime.isDomFree)
		{
			ret.set_string("");
			return;
		}
		ret.set_string(this.elem.value);
	};
	pluginProto.exps = new Exps();
}());
;
;
cr.plugins_.TiledBg = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var pluginProto = cr.plugins_.TiledBg.prototype;
	pluginProto.Type = function(plugin)
	{
		this.plugin = plugin;
		this.runtime = plugin.runtime;
	};
	var typeProto = pluginProto.Type.prototype;
	typeProto.onCreate = function()
	{
		if (this.is_family)
			return;
		this.texture_img = new Image();
		this.texture_img.src = this.texture_file;
		this.texture_img.cr_filesize = this.texture_filesize;
		this.runtime.wait_for_textures.push(this.texture_img);
		this.pattern = null;
		this.webGL_texture = null;
	};
	typeProto.onLostWebGLContext = function ()
	{
		if (this.is_family)
			return;
		this.webGL_texture = null;
	};
	typeProto.onRestoreWebGLContext = function ()
	{
		if (this.is_family || !this.instances.length)
			return;
		if (!this.webGL_texture)
		{
			this.webGL_texture = this.runtime.glwrap.loadTexture(this.texture_img, true, this.runtime.linearSampling, this.texture_pixelformat);
		}
		var i, len;
		for (i = 0, len = this.instances.length; i < len; i++)
			this.instances[i].webGL_texture = this.webGL_texture;
	};
	typeProto.unloadTextures = function ()
	{
		if (this.is_family || this.instances.length)
			return;
		if (this.runtime.glwrap)
		{
			if (this.webGL_texture)
			{
				this.runtime.glwrap.deleteTexture(this.webGL_texture);
				this.webGL_texture = null;
			}
		}
		else
		{
			if (this.texture_img["hintUnload"])
				this.texture_img["hintUnload"]();
		}
	};
	typeProto.preloadCanvas2D = function (ctx)
	{
		ctx.drawImage(this.texture_img, 0, 0);
	};
	pluginProto.Instance = function(type)
	{
		this.type = type;
		this.runtime = type.runtime;
	};
	var instanceProto = pluginProto.Instance.prototype;
	instanceProto.onCreate = function()
	{
		this.visible = (this.properties[0] === 0);							// 0=visible, 1=invisible
		this.rcTex = new cr.rect(0, 0, 0, 0);
		this.has_own_texture = false;										// true if a texture loaded in from URL
		this.texture_img = this.type.texture_img;
		if (this.runtime.glwrap)
		{
			if (!this.type.webGL_texture)
			{
				this.type.webGL_texture = this.runtime.glwrap.loadTexture(this.type.texture_img, true, this.runtime.linearSampling, this.type.texture_pixelformat);
			}
			this.webGL_texture = this.type.webGL_texture;
		}
		else
		{
			if (this.texture_img["hintLoad"])
				this.texture_img["hintLoad"]();
			if (!this.type.pattern)
				this.type.pattern = this.runtime.ctx.createPattern(this.type.texture_img, "repeat");
			this.pattern = this.type.pattern;
		}
	};
	instanceProto.afterLoad = function ()
	{
		this.has_own_texture = false;
		this.texture_img = this.type.texture_img;
	};
	instanceProto.onDestroy = function ()
	{
		if (this.runtime.glwrap && this.has_own_texture && this.webGL_texture)
		{
			this.runtime.glwrap.deleteTexture(this.webGL_texture);
			this.webGL_texture = null;
		}
	};
	instanceProto.draw = function(ctx)
	{
		ctx.globalAlpha = this.opacity;
		ctx.save();
		ctx.fillStyle = this.pattern;
		var myx = this.x;
		var myy = this.y;
		if (this.runtime.pixel_rounding)
		{
			myx = (myx + 0.5) | 0;
			myy = (myy + 0.5) | 0;
		}
		var drawX = -(this.hotspotX * this.width);
		var drawY = -(this.hotspotY * this.height);
		var offX = drawX % this.texture_img.width;
		var offY = drawY % this.texture_img.height;
		if (offX < 0)
			offX += this.texture_img.width;
		if (offY < 0)
			offY += this.texture_img.height;
		ctx.translate(myx, myy);
		ctx.rotate(this.angle);
		ctx.translate(offX, offY);
		ctx.fillRect(drawX - offX,
					 drawY - offY,
					 this.width,
					 this.height);
		ctx.restore();
	};
	instanceProto.drawGL = function(glw)
	{
		glw.setTexture(this.webGL_texture);
		glw.setOpacity(this.opacity);
		var rcTex = this.rcTex;
		rcTex.right = this.width / this.texture_img.width;
		rcTex.bottom = this.height / this.texture_img.height;
		var q = this.bquad;
		if (this.runtime.pixel_rounding)
		{
			var ox = ((this.x + 0.5) | 0) - this.x;
			var oy = ((this.y + 0.5) | 0) - this.y;
			glw.quadTex(q.tlx + ox, q.tly + oy, q.trx + ox, q.try_ + oy, q.brx + ox, q.bry + oy, q.blx + ox, q.bly + oy, rcTex);
		}
		else
			glw.quadTex(q.tlx, q.tly, q.trx, q.try_, q.brx, q.bry, q.blx, q.bly, rcTex);
	};
	function Cnds() {};
	Cnds.prototype.OnURLLoaded = function ()
	{
		return true;
	};
	pluginProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetEffect = function (effect)
	{
		this.compositeOp = cr.effectToCompositeOp(effect);
		cr.setGLBlend(this, effect, this.runtime.gl);
		this.runtime.redraw = true;
	};
	Acts.prototype.LoadURL = function (url_)
	{
		var img = new Image();
		var self = this;
		img.onload = function ()
		{
			self.texture_img = img;
			if (self.runtime.glwrap)
			{
				if (self.has_own_texture && self.webGL_texture)
					self.runtime.glwrap.deleteTexture(self.webGL_texture);
				self.webGL_texture = self.runtime.glwrap.loadTexture(img, true, self.runtime.linearSampling);
			}
			else
			{
				self.pattern = self.runtime.ctx.createPattern(img, "repeat");
			}
			self.has_own_texture = true;
			self.runtime.redraw = true;
			self.runtime.trigger(cr.plugins_.TiledBg.prototype.cnds.OnURLLoaded, self);
		};
		if (url_.substr(0, 5) !== "data:")
			img.crossOrigin = 'anonymous';
		img.src = url_;
	};
	pluginProto.acts = new Acts();
	function Exps() {};
	pluginProto.exps = new Exps();
}());
;
;
cr.behaviors.Bullet = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Bullet.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		var speed = this.properties[0];
		this.acc = this.properties[1];
		this.g = this.properties[2];
		this.bounceOffSolid = (this.properties[3] !== 0);
		this.setAngle = (this.properties[4] !== 0);
		this.dx = Math.cos(this.inst.angle) * speed;
		this.dy = Math.sin(this.inst.angle) * speed;
		this.lastx = this.inst.x;
		this.lasty = this.inst.y;
		this.lastKnownAngle = this.inst.angle;
		this.travelled = 0;
		this.enabled = true;
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"acc": this.acc,
			"g": this.g,
			"dx": this.dx,
			"dy": this.dy,
			"lx": this.lastx,
			"ly": this.lasty,
			"lka": this.lastKnownAngle,
			"t": this.travelled,
			"e": this.enabled
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.acc = o["acc"];
		this.g = o["g"];
		this.dx = o["dx"];
		this.dy = o["dy"];
		this.lastx = o["lx"];
		this.lasty = o["ly"];
		this.lastKnownAngle = o["lka"];
		this.travelled = o["t"];
		this.enabled = o["e"];
	};
	behinstProto.tick = function ()
	{
		if (!this.enabled)
			return;
		var dt = this.runtime.getDt(this.inst);
		var s, a;
		var bounceSolid, bounceAngle;
		if (this.inst.angle !== this.lastKnownAngle)
		{
			if (this.setAngle)
			{
				s = cr.distanceTo(0, 0, this.dx, this.dy);
				this.dx = Math.cos(this.inst.angle) * s;
				this.dy = Math.sin(this.inst.angle) * s;
			}
			this.lastKnownAngle = this.inst.angle;
		}
		if (this.acc !== 0)
		{
			s = cr.distanceTo(0, 0, this.dx, this.dy);
			if (this.dx === 0 && this.dy === 0)
				a = this.inst.angle;
			else
				a = cr.angleTo(0, 0, this.dx, this.dy);
			s += this.acc * dt;
			if (s < 0)
				s = 0;
			this.dx = Math.cos(a) * s;
			this.dy = Math.sin(a) * s;
		}
		if (this.g !== 0)
			this.dy += this.g * dt;
		this.lastx = this.inst.x;
		this.lasty = this.inst.y;
		if (this.dx !== 0 || this.dy !== 0)
		{
			this.inst.x += this.dx * dt;
			this.inst.y += this.dy * dt;
			this.travelled += cr.distanceTo(0, 0, this.dx * dt, this.dy * dt)
			if (this.setAngle)
			{
				this.inst.angle = cr.angleTo(0, 0, this.dx, this.dy);
				this.inst.set_bbox_changed();
				this.lastKnownAngle = this.inst.angle;
			}
			this.inst.set_bbox_changed();
			if (this.bounceOffSolid)
			{
				bounceSolid = this.runtime.testOverlapSolid(this.inst);
				if (bounceSolid)
				{
					this.runtime.registerCollision(this.inst, bounceSolid);
					s = cr.distanceTo(0, 0, this.dx, this.dy);
					bounceAngle = this.runtime.calculateSolidBounceAngle(this.inst, this.lastx, this.lasty);
					this.dx = Math.cos(bounceAngle) * s;
					this.dy = Math.sin(bounceAngle) * s;
					this.inst.x += this.dx * dt;			// move out for one tick since the object can't have spent a tick in the solid
					this.inst.y += this.dy * dt;
					this.inst.set_bbox_changed();
					if (this.setAngle)
					{
						this.inst.angle = bounceAngle;
						this.lastKnownAngle = bounceAngle;
						this.inst.set_bbox_changed();
					}
					if (!this.runtime.pushOutSolid(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30)))
						this.runtime.pushOutSolidNearest(this.inst, 100);
				}
			}
		}
	};
	function Cnds() {};
	Cnds.prototype.CompareSpeed = function (cmp, s)
	{
		return cr.do_cmp(cr.distanceTo(0, 0, this.dx, this.dy), cmp, s);
	};
	Cnds.prototype.CompareTravelled = function (cmp, d)
	{
		return cr.do_cmp(this.travelled, cmp, d);
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.SetSpeed = function (s)
	{
		var a = cr.angleTo(0, 0, this.dx, this.dy);
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.SetAcceleration = function (a)
	{
		this.acc = a;
	};
	Acts.prototype.SetGravity = function (g)
	{
		this.g = g;
	};
	Acts.prototype.SetAngleOfMotion = function (a)
	{
		a = cr.to_radians(a);
		var s = cr.distanceTo(0, 0, this.dx, this.dy)
		this.dx = Math.cos(a) * s;
		this.dy = Math.sin(a) * s;
	};
	Acts.prototype.Bounce = function (objtype)
	{
		if (!objtype)
			return;
		var otherinst = objtype.getFirstPicked(this.inst);
		if (!otherinst)
			return;
		var dt = this.runtime.getDt(this.inst);
		var s = cr.distanceTo(0, 0, this.dx, this.dy);
		var bounceAngle = this.runtime.calculateSolidBounceAngle(this.inst, this.lastx, this.lasty, otherinst);
		this.dx = Math.cos(bounceAngle) * s;
		this.dy = Math.sin(bounceAngle) * s;
		this.inst.x += this.dx * dt;			// move out for one tick since the object can't have spent a tick in the solid
		this.inst.y += this.dy * dt;
		this.inst.set_bbox_changed();
		if (this.setAngle)
		{
			this.inst.angle = bounceAngle;
			this.lastKnownAngle = bounceAngle;
			this.inst.set_bbox_changed();
		}
		if (this.bounceOffSolid)
		{
			if (!this.runtime.pushOutSolid(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30)))
				this.runtime.pushOutSolidNearest(this.inst, 100);
		}
		else
		{
			this.runtime.pushOut(this.inst, this.dx / s, this.dy / s, Math.max(s * 2.5 * dt, 30), otherinst)
		}
	};
	Acts.prototype.SetEnabled = function (en)
	{
		this.enabled = (en === 1);
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Speed = function (ret)
	{
		var s = cr.distanceTo(0, 0, this.dx, this.dy);
		s = cr.round6dp(s);
		ret.set_float(s);
	};
	Exps.prototype.Acceleration = function (ret)
	{
		ret.set_float(this.acc);
	};
	Exps.prototype.AngleOfMotion = function (ret)
	{
		ret.set_float(cr.to_degrees(cr.angleTo(0, 0, this.dx, this.dy)));
	};
	Exps.prototype.DistanceTravelled = function (ret)
	{
		ret.set_float(this.travelled);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.EightDir = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.EightDir.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
		this.upkey = false;
		this.downkey = false;
		this.leftkey = false;
		this.rightkey = false;
		this.ignoreInput = false;
		this.simup = false;
		this.simdown = false;
		this.simleft = false;
		this.simright = false;
		this.lastuptick = -1;
		this.lastdowntick = -1;
		this.lastlefttick = -1;
		this.lastrighttick = -1;
		this.dx = 0;
		this.dy = 0;
		this.enabled = true;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.maxspeed = this.properties[0];
		this.acc = this.properties[1];
		this.dec = this.properties[2];
		this.directions = this.properties[3];	// 0=Up & down, 1=Left & right, 2=4 directions, 3=8 directions"
		this.angleMode = this.properties[4];	// 0=No,1=90-degree intervals, 2=45-degree intervals, 3=360 degree (smooth)
		this.defaultControls = (this.properties[5] === 1);	// 0=no, 1=yes
		if (this.defaultControls && !this.runtime.isDomFree)
		{
			jQuery(document).keydown(
				(function (self) {
					return function(info) {
						self.onKeyDown(info);
					};
				})(this)
			);
			jQuery(document).keyup(
				(function (self) {
					return function(info) {
						self.onKeyUp(info);
					};
				})(this)
			);
		}
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"dx": this.dx,
			"dy": this.dy,
			"enabled": this.enabled,
			"maxspeed": this.maxspeed,
			"acc": this.acc,
			"dec": this.dec,
			"ignoreInput": this.ignoreInput
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.dx = o["dx"];
		this.dy = o["dy"];
		this.enabled = o["enabled"];
		this.maxspeed = o["maxspeed"];
		this.acc = o["acc"];
		this.dec = o["dec"];
		this.ignoreInput = o["ignoreInput"];
		this.upkey = false;
		this.downkey = false;
		this.leftkey = false;
		this.rightkey = false;
		this.simup = false;
		this.simdown = false;
		this.simleft = false;
		this.simright = false;
		this.lastuptick = -1;
		this.lastdowntick = -1;
		this.lastlefttick = -1;
		this.lastrighttick = -1;
	};
	behinstProto.onKeyDown = function (info)
	{
		var tickcount = this.runtime.tickcount;
		switch (info.which) {
		case 37:	// left
			info.preventDefault();
			if (this.lastlefttick < tickcount)
				this.leftkey = true;
			break;
		case 38:	// up
			info.preventDefault();
			if (this.lastuptick < tickcount)
				this.upkey = true;
			break;
		case 39:	// right
			info.preventDefault();
			if (this.lastrighttick < tickcount)
				this.rightkey = true;
			break;
		case 40:	// down
			info.preventDefault();
			if (this.lastdowntick < tickcount)
				this.downkey = true;
			break;
		}
	};
	behinstProto.onKeyUp = function (info)
	{
		var tickcount = this.runtime.tickcount;
		switch (info.which) {
		case 37:	// left
			info.preventDefault();
			this.leftkey = false;
			this.lastlefttick = tickcount;
			break;
		case 38:	// up
			info.preventDefault();
			this.upkey = false;
			this.lastuptick = tickcount;
			break;
		case 39:	// right
			info.preventDefault();
			this.rightkey = false;
			this.lastrighttick = tickcount;
			break;
		case 40:	// down
			info.preventDefault();
			this.downkey = false;
			this.lastdowntick = tickcount;
			break;
		}
	};
	behinstProto.tick = function ()
	{
		var dt = this.runtime.getDt(this.inst);
		var left = this.leftkey || this.simleft;
		var right = this.rightkey || this.simright;
		var up = this.upkey || this.simup;
		var down = this.downkey || this.simdown;
		this.simleft = false;
		this.simright = false;
		this.simup = false;
		this.simdown = false;
		if (!this.enabled)
			return;
		var collobj = this.runtime.testOverlapSolid(this.inst);
		if (collobj)
		{
			this.runtime.registerCollision(this.inst, collobj);
			if (!this.runtime.pushOutSolidNearest(this.inst))
				return;		// must be stuck in solid
		}
		if (this.ignoreInput)
		{
			left = false;
			right = false;
			up = false;
			down = false;
		}
		if (this.directions === 0)
		{
			left = false;
			right = false;
		}
		else if (this.directions === 1)
		{
			up = false;
			down = false;
		}
		if (this.directions === 2 && (up || down))
		{
			left = false;
			right = false;
		}
		if (left == right)	// both up or both down
		{
			if (this.dx < 0)
			{
				this.dx += this.dec * dt;
				if (this.dx > 0)
					this.dx = 0;
			}
			else if (this.dx > 0)
			{
				this.dx -= this.dec * dt;
				if (this.dx < 0)
					this.dx = 0;
			}
		}
		if (up == down)
		{
			if (this.dy < 0)
			{
				this.dy += this.dec * dt;
				if (this.dy > 0)
					this.dy = 0;
			}
			else if (this.dy > 0)
			{
				this.dy -= this.dec * dt;
				if (this.dy < 0)
					this.dy = 0;
			}
		}
		if (left && !right)
		{
			if (this.dx > 0)
				this.dx -= (this.acc + this.dec) * dt;
			else
				this.dx -= this.acc * dt;
		}
		if (right && !left)
		{
			if (this.dx < 0)
				this.dx += (this.acc + this.dec) * dt;
			else
				this.dx += this.acc * dt;
		}
		if (up && !down)
		{
			if (this.dy > 0)
				this.dy -= (this.acc + this.dec) * dt;
			else
				this.dy -= this.acc * dt;
		}
		if (down && !up)
		{
			if (this.dy < 0)
				this.dy += (this.acc + this.dec) * dt;
			else
				this.dy += this.acc * dt;
		}
		var ax, ay;
		if (this.dx !== 0 || this.dy !== 0)
		{
			var speed = Math.sqrt(this.dx * this.dx + this.dy * this.dy);
			if (speed > this.maxspeed)
			{
				var a = Math.atan2(this.dy, this.dx);
				this.dx = this.maxspeed * Math.cos(a);
				this.dy = this.maxspeed * Math.sin(a);
			}
			var oldx = this.inst.x;
			var oldy = this.inst.y;
			var oldangle = this.inst.angle;
			this.inst.x += this.dx * dt;
			this.inst.set_bbox_changed();
			collobj = this.runtime.testOverlapSolid(this.inst);
			if (collobj)
			{
				this.inst.x = oldx;
				this.dx = 0;
				this.inst.set_bbox_changed();
				this.runtime.registerCollision(this.inst, collobj);
			}
			this.inst.y += this.dy * dt;
			this.inst.set_bbox_changed();
			collobj = this.runtime.testOverlapSolid(this.inst);
			if (collobj)
			{
				this.inst.y = oldy;
				this.dy = 0;
				this.inst.set_bbox_changed();
				this.runtime.registerCollision(this.inst, collobj);
			}
			ax = cr.round6dp(this.dx);
			ay = cr.round6dp(this.dy);
			if (ax !== 0 || ay !== 0)
			{
				if (this.angleMode === 1)	// 90 degree intervals
					this.inst.angle = cr.to_clamped_radians(Math.round(cr.to_degrees(Math.atan2(ay, ax)) / 90.0) * 90.0);
				else if (this.angleMode === 2)	// 45 degree intervals
					this.inst.angle = cr.to_clamped_radians(Math.round(cr.to_degrees(Math.atan2(ay, ax)) / 45.0) * 45.0);
				else if (this.angleMode === 3)	// 360 degree
					this.inst.angle = Math.atan2(ay, ax);
			}
			this.inst.set_bbox_changed();
			if (this.inst.angle != oldangle)
			{
				collobj = this.runtime.testOverlapSolid(this.inst);
				if (collobj)
				{
					this.inst.angle = oldangle;
					this.inst.set_bbox_changed();
					this.runtime.registerCollision(this.inst, collobj);
				}
			}
		}
	};
	function Cnds() {};
	Cnds.prototype.IsMoving = function ()
	{
		return this.dx !== 0 || this.dy !== 0;
	};
	Cnds.prototype.CompareSpeed = function (cmp, s)
	{
		var speed = Math.sqrt(this.dx * this.dx + this.dy * this.dy);
		return cr.do_cmp(speed, cmp, s);
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Stop = function ()
	{
		this.dx = 0;
		this.dy = 0;
	};
	Acts.prototype.Reverse = function ()
	{
		this.dx *= -1;
		this.dy *= -1;
	};
	Acts.prototype.SetIgnoreInput = function (ignoring)
	{
		this.ignoreInput = ignoring;
	};
	Acts.prototype.SetSpeed = function (speed)
	{
		if (speed < 0)
			speed = 0;
		if (speed > this.maxspeed)
			speed = this.maxspeed;
		var a = Math.atan2(this.dy, this.dx);
		this.dx = speed * Math.cos(a);
		this.dy = speed * Math.sin(a);
	};
	Acts.prototype.SetMaxSpeed = function (maxspeed)
	{
		this.maxspeed = maxspeed;
		if (this.maxspeed < 0)
			this.maxspeed = 0;
	};
	Acts.prototype.SetAcceleration = function (acc)
	{
		this.acc = acc;
		if (this.acc < 0)
			this.acc = 0;
	};
	Acts.prototype.SetDeceleration = function (dec)
	{
		this.dec = dec;
		if (this.dec < 0)
			this.dec = 0;
	};
	Acts.prototype.SimulateControl = function (ctrl)
	{
		switch (ctrl) {
		case 0:		this.simleft = true;	break;
		case 1:		this.simright = true;	break;
		case 2:		this.simup = true;		break;
		case 3:		this.simdown = true;	break;
		}
	};
	Acts.prototype.SetEnabled = function (en)
	{
		this.enabled = (en === 1);
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	Exps.prototype.Speed = function (ret)
	{
		ret.set_float(Math.sqrt(this.dx * this.dx + this.dy * this.dy));
	};
	Exps.prototype.MaxSpeed = function (ret)
	{
		ret.set_float(this.maxspeed);
	};
	Exps.prototype.Acceleration = function (ret)
	{
		ret.set_float(this.acc);
	};
	Exps.prototype.Deceleration = function (ret)
	{
		ret.set_float(this.dec);
	};
	Exps.prototype.MovingAngle = function (ret)
	{
		ret.set_float(cr.to_degrees(Math.atan2(this.dy, this.dx)));
	};
	Exps.prototype.VectorX = function (ret)
	{
		ret.set_float(this.dx);
	};
	Exps.prototype.VectorY = function (ret)
	{
		ret.set_float(this.dy);
	};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.Fade = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Fade.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		var active_at_start = this.properties[0] === 1;
		this.fadeInTime = this.properties[1];
		this.waitTime = this.properties[2];
		this.fadeOutTime = this.properties[3];
		this.destroy = this.properties[4];			// 0 = no, 1 = after fade out
		this.stage = active_at_start ? 0 : 3;		// 0 = fade in, 1 = wait, 2 = fade out, 3 = done
		if (this.recycled)
			this.stageTime.reset();
		else
			this.stageTime = new cr.KahanAdder();
		this.maxOpacity = (this.inst.opacity ? this.inst.opacity : 1.0);
		if (active_at_start)
		{
			if (this.fadeInTime === 0)
			{
				this.stage = 1;
				if (this.waitTime === 0)
					this.stage = 2;
			}
			else
			{
				this.inst.opacity = 0;
				this.runtime.redraw = true;
			}
		}
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"fit": this.fadeInTime,
			"wt": this.waitTime,
			"fot": this.fadeOutTime,
			"s": this.stage,
			"st": this.stageTime.sum,
			"mo": this.maxOpacity,
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.fadeInTime = o["fit"];
		this.waitTime = o["wt"];
		this.fadeOutTime = o["fot"];
		this.stage = o["s"];
		this.stageTime.reset();
		this.stageTime.sum = o["st"];
		this.maxOpacity = o["mo"];
	};
	behinstProto.tick = function ()
	{
		this.stageTime.add(this.runtime.getDt(this.inst));
		if (this.stage === 0)
		{
			this.inst.opacity = (this.stageTime.sum / this.fadeInTime) * this.maxOpacity;
			this.runtime.redraw = true;
			if (this.inst.opacity >= this.maxOpacity)
			{
				this.inst.opacity = this.maxOpacity;
				this.stage = 1;	// wait stage
				this.stageTime.reset();
			}
		}
		if (this.stage === 1)
		{
			if (this.stageTime.sum >= this.waitTime)
			{
				this.stage = 2;	// fade out stage
				this.stageTime.reset();
			}
		}
		if (this.stage === 2)
		{
			if (this.fadeOutTime !== 0)
			{
				this.inst.opacity = this.maxOpacity - ((this.stageTime.sum / this.fadeOutTime) * this.maxOpacity);
				this.runtime.redraw = true;
				if (this.inst.opacity < 0)
				{
					this.inst.opacity = 0;
					this.stage = 3;	// done
					this.stageTime.reset();
					this.runtime.trigger(cr.behaviors.Fade.prototype.cnds.OnFadeOutEnd, this.inst);
					if (this.destroy === 1)
						this.runtime.DestroyInstance(this.inst);
				}
			}
		}
	};
	behinstProto.doStart = function ()
	{
		this.stage = 0;
		this.stageTime.reset();
		if (this.fadeInTime === 0)
		{
			this.stage = 1;
			if (this.waitTime === 0)
				this.stage = 2;
		}
		else
		{
			this.inst.opacity = 0;
			this.runtime.redraw = true;
		}
	};
	function Cnds() {};
	Cnds.prototype.OnFadeOutEnd = function ()
	{
		return true;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.StartFade = function ()
	{
		if (this.stage === 3)
			this.doStart();
	};
	Acts.prototype.RestartFade = function ()
	{
		this.doStart();
	};
	behaviorProto.acts = new Acts();
}());
;
;
cr.behaviors.Flash = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.Flash.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.ontime = 0;
		this.offtime = 0;
		this.stage = 0;			// 0 = on, 1 = off
		this.stagetimeleft = 0;
		this.timeleft = 0;
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"ontime": this.ontime,
			"offtime": this.offtime,
			"stage": this.stage,
			"stagetimeleft": this.stagetimeleft,
			"timeleft": this.timeleft
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.ontime = o["ontime"];
		this.offtime = o["offtime"];
		this.stage = o["stage"];
		this.stagetimeleft = o["stagetimeleft"];
		this.timeleft = o["timeleft"];
	};
	behinstProto.tick = function ()
	{
		if (this.timeleft <= 0)
			return;		// not flashing
		var dt = this.runtime.getDt(this.inst);
		this.timeleft -= dt;
		if (this.timeleft <= 0)
		{
			this.timeleft = 0;
			this.inst.visible = true;
			this.runtime.redraw = true;
			this.runtime.trigger(cr.behaviors.Flash.prototype.cnds.OnFlashEnded, this.inst);
			return;
		}
		this.stagetimeleft -= dt;
		if (this.stagetimeleft <= 0)
		{
			if (this.stage === 0)
			{
				this.inst.visible = false;
				this.stage = 1;
				this.stagetimeleft += this.offtime;
			}
			else
			{
				this.inst.visible = true;
				this.stage = 0;
				this.stagetimeleft += this.ontime;
			}
			this.runtime.redraw = true;
		}
	};
	function Cnds() {};
	Cnds.prototype.IsFlashing = function ()
	{
		return this.timeleft > 0;
	};
	Cnds.prototype.OnFlashEnded = function ()
	{
		return true;
	};
	behaviorProto.cnds = new Cnds();
	function Acts() {};
	Acts.prototype.Flash = function (on_, off_, dur_)
	{
		this.ontime = on_;
		this.offtime = off_;
		this.stage = 1;		// always start off
		this.stagetimeleft = off_;
		this.timeleft = dur_;
		this.inst.visible = false;
		this.runtime.redraw = true;
	};
	Acts.prototype.StopFlashing = function ()
	{
		this.timeleft = 0;
		this.inst.visible = true;
		this.runtime.redraw = true;
		return;
	};
	behaviorProto.acts = new Acts();
	function Exps() {};
	behaviorProto.exps = new Exps();
}());
;
;
cr.behaviors.bound = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.bound.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
		this.mode = 0;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
		this.mode = this.properties[0];	// 0 = origin, 1 = edge
	};
	behinstProto.tick = function ()
	{
	};
	behinstProto.tick2 = function ()
	{
		this.inst.update_bbox();
		var bbox = this.inst.bbox;
		var layout = this.inst.layer.layout;
		var changed = false;
		if (this.mode === 0)	// origin
		{
			if (this.inst.x < 0)
			{
				this.inst.x = 0;
				changed = true;
			}
			if (this.inst.y < 0)
			{
				this.inst.y = 0;
				changed = true;
			}
			if (this.inst.x > layout.width)
			{
				this.inst.x = layout.width;
				changed = true;
			}
			if (this.inst.y > layout.height)
			{
				this.inst.y = layout.height;
				changed = true;
			}
		}
		else
		{
			if (bbox.left < 0)
			{
				this.inst.x -= bbox.left;
				changed = true;
			}
			if (bbox.top < 0)
			{
				this.inst.y -= bbox.top;
				changed = true;
			}
			if (bbox.right > layout.width)
			{
				this.inst.x -= (bbox.right - layout.width);
				changed = true;
			}
			if (bbox.bottom > layout.height)
			{
				this.inst.y -= (bbox.bottom - layout.height);
				changed = true;
			}
		}
		if (changed)
			this.inst.set_bbox_changed();
	};
}());
;
;
cr.behaviors.destroy = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.destroy.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
	};
	behinstProto.tick = function ()
	{
		this.inst.update_bbox();
		var bbox = this.inst.bbox;
		var layout = this.inst.layer.layout;
		if (bbox.right < 0 || bbox.bottom < 0 || bbox.left > layout.width || bbox.top > layout.height)
			this.runtime.DestroyInstance(this.inst);
	};
}());
;
;
cr.behaviors.scrollto = function(runtime)
{
	this.runtime = runtime;
	this.shakeMag = 0;
	this.shakeStart = 0;
	this.shakeEnd = 0;
	this.shakeMode = 0;
};
(function ()
{
	var behaviorProto = cr.behaviors.scrollto.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
	};
	behinstProto.saveToJSON = function ()
	{
		return {
			"smg": this.behavior.shakeMag,
			"ss": this.behavior.shakeStart,
			"se": this.behavior.shakeEnd,
			"smd": this.behavior.shakeMode
		};
	};
	behinstProto.loadFromJSON = function (o)
	{
		this.behavior.shakeMag = o["smg"];
		this.behavior.shakeStart = o["ss"];
		this.behavior.shakeEnd = o["se"];
		this.behavior.shakeMode = o["smd"];
	};
	behinstProto.tick = function ()
	{
	};
	behinstProto.tick2 = function ()
	{
		var all = this.behavior.my_instances.values();
		var sumx = 0, sumy = 0;
		var i, len;
		for (i = 0, len = all.length; i < len; i++)
		{
			sumx += all[i].x;
			sumy += all[i].y;
		}
		var layout = this.inst.layer.layout;
		var now = this.runtime.kahanTime.sum;
		var offx = 0, offy = 0;
		if (now >= this.behavior.shakeStart && now < this.behavior.shakeEnd)
		{
			var mag = this.behavior.shakeMag * Math.min(this.runtime.timescale, 1);
			if (this.behavior.shakeMode === 0)
				mag *= 1 - (now - this.behavior.shakeStart) / (this.behavior.shakeEnd - this.behavior.shakeStart);
			var a = Math.random() * Math.PI * 2;
			var d = Math.random() * mag;
			offx = Math.cos(a) * d;
			offy = Math.sin(a) * d;
		}
		layout.scrollToX(sumx / all.length + offx);
		layout.scrollToY(sumy / all.length + offy);
	};
	function Acts() {};
	Acts.prototype.Shake = function (mag, dur, mode)
	{
		this.behavior.shakeMag = mag;
		this.behavior.shakeStart = this.runtime.kahanTime.sum;
		this.behavior.shakeEnd = this.behavior.shakeStart + dur;
		this.behavior.shakeMode = mode;
	};
	behaviorProto.acts = new Acts();
}());
;
;
cr.behaviors.solid = function(runtime)
{
	this.runtime = runtime;
};
(function ()
{
	var behaviorProto = cr.behaviors.solid.prototype;
	behaviorProto.Type = function(behavior, objtype)
	{
		this.behavior = behavior;
		this.objtype = objtype;
		this.runtime = behavior.runtime;
	};
	var behtypeProto = behaviorProto.Type.prototype;
	behtypeProto.onCreate = function()
	{
	};
	behaviorProto.Instance = function(type, inst)
	{
		this.type = type;
		this.behavior = type.behavior;
		this.inst = inst;				// associated object instance to modify
		this.runtime = type.runtime;
		this.inst.extra.solidEnabled = true;
	};
	var behinstProto = behaviorProto.Instance.prototype;
	behinstProto.onCreate = function()
	{
	};
	behinstProto.tick = function ()
	{
	};
	function Acts() {};
	Acts.prototype.SetEnabled = function (e)
	{
		this.inst.extra.solidEnabled = !!e;
	};
	behaviorProto.acts = new Acts();
}());
cr.getProjectModel = function() { return [
	null,
	"играть",
	[
	[
		cr.plugins_.Audio,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Button,
		false,
		true,
		true,
		true,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Keyboard,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Mouse,
		true,
		false,
		false,
		false,
		false,
		false,
		false,
		false,
		false
	]
,	[
		cr.plugins_.Text,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.TiledBg,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.Sprite,
		false,
		true,
		true,
		true,
		true,
		true,
		true,
		true,
		false
	]
,	[
		cr.plugins_.Particles,
		false,
		true,
		true,
		false,
		true,
		true,
		true,
		true,
		true
	]
,	[
		cr.plugins_.TextBox,
		false,
		true,
		true,
		true,
		false,
		false,
		false,
		false,
		false
	]
	],
	[
	[
		"t0",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/tiledbackground.png", 156, 4],
		null,
		[
		],
		false,
		false,
		2,
		[]
	]
,	[
		"t1",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4,
		[]
	]
,	[
		"t2",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			41
		]
		],
		false,
		false,
		37,
		[]
	]
,	[
		"t3",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		49,
		[]
	]
,	[
		"t4",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/tiledbackground2.png", 433618, 0],
		null,
		[
		],
		false,
		false,
		63,
		[]
	]
,	[
		"t5",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			65,
			[
				["images/Лещенко-sheet0.png", 232735, 0, 0, 489, 408, 1, 0.449898, 0.446078,[],[],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			73
		]
		],
		false,
		false,
		64,
		[]
	]
,	[
		"t6",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		75,
		[]
	]
,	[
		"t7",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			77,
			[
				["images/облакодиалог-sheet0.png", 3621, 0, 0, 557, 239, 1, 0.500898, 0.535565,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		76,
		[]
	]
,	[
		"t8",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			79,
			[
				["images/Ираида-sheet0.png", 72959, 0, 0, 191, 422, 1, 0.905759, 0.165877,[],[0.0942408,0.834123,-0.905759,0.834123,-0.905759,-0.165877,0.0942408,-0.165877],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			80
		]
		],
		false,
		false,
		78,
		[]
	]
,	[
		"t9",
		cr.plugins_.Mouse,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		88,
		[]
		,[]
	]
,	[
		"t10",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		96,
		[]
	]
,	[
		"t11",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			98,
			[
				["images/sprite2-sheet0.png", 528794, 0, 0, 655, 741, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		97,
		[]
	]
,	[
		"t12",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			103,
			[
				["images/sprite3-sheet0.png", 91901, 0, 0, 283, 387, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		102,
		[]
	]
,	[
		"t13",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		108,
		[]
	]
,	[
		"t14",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		122,
		[]
	]
,	[
		"t15",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			129,
			[
				["images/demesh-sheet0.png", 588318, 0, 0, 912, 709, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		128,
		[]
	]
,	[
		"t16",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			131,
			[
				["images/sprite4-sheet0.png", 147706, 0, 0, 358, 414, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		130,
		[]
	]
,	[
		"t17",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		139,
		[]
	]
,	[
		"t18",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			145,
			[
				["images/bulavko-sheet0.png", 345050, 0, 0, 472, 673, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		144,
		[]
	]
,	[
		"t19",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			147,
			[
				["images/toha-sheet0.png", 240034, 0, 0, 518, 804, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		146,
		[]
	]
,	[
		"t20",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			149,
			[
				["images/toha2-sheet0.png", 151460, 0, 0, 371, 587, 1, 0, 0,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		148,
		[]
	]
,	[
		"t21",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		203,
		[]
	]
,	[
		"t22",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		226,
		[]
	]
,	[
		"t23",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		227,
		[]
	]
,	[
		"t24",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			4846
		]
		],
		false,
		false,
		228,
		[]
	]
,	[
		"t25",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		229,
		[]
	]
,	[
		"t26",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		303,
		[]
	]
,	[
		"t27",
		cr.plugins_.Sprite,
		false,
		[],
		3,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			368,
			[
				["images/тело-sheet0.png", 353, 0, 0, 58, 124, 1, 0.413793, 0.00806452,[],[],0]
			]
			]
		],
		[
		[
			"BoundToLayout",
			cr.behaviors.bound,
			374
		]
,		[
			"8Direction",
			cr.behaviors.EightDir,
			423
		]
,		[
			"ScrollTo",
			cr.behaviors.scrollto,
			887
		]
		],
		false,
		false,
		367,
		[]
	]
,	[
		"t28",
		cr.plugins_.Keyboard,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		369,
		[]
		,[]
	]
,	[
		"t29",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			387,
			[
				["images/рожаклимаевой-sheet0.png", 78262, 0, 0, 237, 332, 1, 0.578059, 0.990964,[],[0.421941,0.00903612,-0.578059,0.00903612,-0.578059,-0.990964,0.421941,-0.990964],0]
			]
			]
		],
		[
		],
		false,
		false,
		386,
		[]
	]
,	[
		"t30",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		389,
		[]
	]
,	[
		"t31",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		390,
		[]
	]
,	[
		"t32",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/tiledbackground3.png", 789048, 0],
		null,
		[
		],
		false,
		false,
		422,
		[]
	]
,	[
		"t33",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			425,
			[
				["images/Рожадемеша-sheet0.png", 147015, 0, 0, 340, 606, 1, 0.544118, 0.970297,[],[0.455882,0.029703,-0.544118,0.029703,-0.544118,-0.970297,0.455882,-0.970297],0]
			]
			]
		],
		[
		],
		false,
		false,
		424,
		[]
	]
,	[
		"t34",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			436,
			[
				["images/рожасироткина-sheet0.png", 60940, 0, 0, 222, 290, 1, 0.603604, 0.982759,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		435,
		[]
	]
,	[
		"t35",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			451,
			[
				["images/рожабулавки-sheet0.png", 135158, 0, 0, 387, 326, 1, 0.4677, 0.895706,[],[0.5323,0.104294,-0.4677,0.104294,-0.4677,-0.895706,0.5323,-0.895706],0]
			]
			]
		],
		[
		],
		false,
		false,
		450,
		[]
	]
,	[
		"t36",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			481,
			[
				["images/пол-sheet0.png", 120, 0, 0, 254, 4, 1, 0.507874, -2.25,[],[],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			886
		]
		],
		false,
		false,
		480,
		[]
	]
,	[
		"t37",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			483,
			[
				["images/лещенковрост-sheet0.png", 246269, 0, 0, 414, 749, 1, 0.471014, 0.53538,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		482,
		[]
	]
,	[
		"t38",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		488,
		[]
	]
,	[
		"t39",
		cr.plugins_.Button,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Flash",
			cr.behaviors.Flash,
			496
		]
		],
		false,
		false,
		489,
		[]
	]
,	[
		"t40",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Fade",
			cr.behaviors.Fade,
			527
		]
		],
		false,
		false,
		526,
		[]
	]
,	[
		"t41",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		535,
		[]
	]
,	[
		"t42",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			546,
			[
				["images/задание-sheet0.png", 148, 0, 0, 222, 105, 1, 0.513514, 0.504762,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		545,
		[]
	]
,	[
		"t43",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		547,
		[]
	]
,	[
		"t44",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		548,
		[]
	]
,	[
		"t45",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		549,
		[]
	]
,	[
		"t46",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			562,
			[
				["images/вк-sheet0.png", 33133, 0, 0, 929, 749, 1, 0.538213, 0.667557,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		561,
		[]
	]
,	[
		"t47",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			570
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			616
		]
		],
		false,
		false,
		564,
		[]
	]
,	[
		"t48",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			573
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			611
		]
		],
		false,
		false,
		565,
		[]
	]
,	[
		"t49",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			594
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			610
		]
		],
		false,
		false,
		574,
		[]
	]
,	[
		"t50",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			595
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			612
		]
		],
		false,
		false,
		575,
		[]
	]
,	[
		"t51",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			597
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			614
		]
		],
		false,
		false,
		576,
		[]
	]
,	[
		"t52",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			602
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			620
		]
		],
		false,
		false,
		577,
		[]
	]
,	[
		"t53",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			592
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			608
		]
		],
		false,
		false,
		579,
		[]
	]
,	[
		"t54",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			604
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			622
		]
		],
		false,
		false,
		580,
		[]
	]
,	[
		"t55",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			605
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			623
		]
		],
		false,
		false,
		581,
		[]
	]
,	[
		"t56",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			600
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			618
		]
		],
		false,
		false,
		582,
		[]
	]
,	[
		"t57",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			598
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			615
		]
		],
		false,
		false,
		583,
		[]
	]
,	[
		"t58",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			603
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			621
		]
		],
		false,
		false,
		584,
		[]
	]
,	[
		"t59",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			593
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			609
		]
		],
		false,
		false,
		585,
		[]
	]
,	[
		"t60",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			601
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			619
		]
		],
		false,
		false,
		586,
		[]
	]
,	[
		"t61",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			606
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			624
		]
		],
		false,
		false,
		587,
		[]
	]
,	[
		"t62",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			607
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			625
		]
		],
		false,
		false,
		588,
		[]
	]
,	[
		"t63",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			596
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			613
		]
		],
		false,
		false,
		589,
		[]
	]
,	[
		"t64",
		cr.plugins_.Text,
		false,
		[],
		2,
		0,
		null,
		null,
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			599
		]
,		[
			"BoundToLayout",
			cr.behaviors.bound,
			617
		]
		],
		false,
		false,
		590,
		[]
	]
,	[
		"t65",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		827,
		[]
	]
,	[
		"t66",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		829,
		[]
	]
,	[
		"t67",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			852,
			[
				["images/дневник-sheet0.png", 54485, 0, 0, 400, 200, 1, 0.5, 0.64,[],[],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			4325
		]
		],
		false,
		false,
		851,
		[]
	]
,	[
		"t68",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		855,
		[]
	]
,	[
		"t69",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		864,
		[]
	]
,	[
		"t70",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		870,
		[]
	]
,	[
		"t71",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/tiledbackground4.png", 551350, 0],
		null,
		[
		],
		false,
		false,
		884,
		[]
	]
,	[
		"t72",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			893,
			[
				["images/пол2-sheet0.png", 127, 0, 0, 100, 1, 1, 0.53, -4,[],[],0]
			]
			]
		],
		[
		[
			"Solid",
			cr.behaviors.solid,
			892
		]
		],
		false,
		false,
		891,
		[]
	]
,	[
		"t73",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			938,
			[
				["images/шуша-sheet0.png", 306688, 0, 0, 425, 602, 1, 0.468235, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			948
		]
		],
		false,
		false,
		937,
		[]
	]
,	[
		"t74",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		958,
		[]
	]
,	[
		"t75",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			981,
			[
				["images/шушаголова-sheet0.png", 30895, 0, 0, 195, 150, 1, 0.68718, 0.28,[],[-0.68718,0.72,-0.68718,-0.28,0.31282,-0.28,0.31282,0.72],0]
			]
			]
		],
		[
		[
			"8Direction",
			cr.behaviors.EightDir,
			984
		]
		],
		false,
		false,
		980,
		[]
	]
,	[
		"t76",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1007,
			[
				["images/пицца-sheet0.png", 247668, 0, 0, 445, 377, 1, 0.514607, 0.450928,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			1008
		]
		],
		false,
		false,
		1006,
		[]
	]
,	[
		"t77",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1034,
			[
				["images/сырок-sheet0.png", 262555, 0, 0, 772, 304, 1, 0.498705, 0.503289,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			1052
		]
		],
		false,
		false,
		1033,
		[]
	]
,	[
		"t78",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1036,
			[
				["images/слойка-sheet0.png", 84169, 0, 0, 237, 199, 1, 0.510549, 0.507538,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			1057
		]
		],
		false,
		false,
		1035,
		[]
	]
,	[
		"t79",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1038,
			[
				["images/капустка-sheet0.png", 204659, 0, 0, 397, 297, 1, 0.478589, 0.555556,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			1053
		]
		],
		false,
		false,
		1037,
		[]
	]
,	[
		"t80",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1040,
			[
				["images/лук-sheet0.png", 236322, 0, 0, 541, 352, 1, 0.550832, 0.502841,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			1058
		]
		],
		false,
		false,
		1039,
		[]
	]
,	[
		"t81",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1042,
			[
				["images/пончик-sheet0.png", 42928, 0, 0, 146, 150, 1, 0.506849, 0.553333,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			1051
		]
		],
		false,
		false,
		1041,
		[]
	]
,	[
		"t82",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1044,
			[
				["images/пончики-sheet0.png", 1629402, 0, 0, 1198, 884, 1, 0.504174, 0.5,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			1055
		]
		],
		false,
		false,
		1043,
		[]
	]
,	[
		"t83",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1046,
			[
				["images/пюрешкакотлетка-sheet0.png", 573722, 0, 0, 840, 570, 1, 0.547619, 0.477193,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			1054
		]
		],
		false,
		false,
		1045,
		[]
	]
,	[
		"t84",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1048,
			[
				["images/макарони-sheet0.png", 226757, 0, 0, 489, 361, 1, 0.554192, 0.432133,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			1056
		]
		],
		false,
		false,
		1047,
		[]
	]
,	[
		"t85",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1876,
		[]
	]
,	[
		"t86",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1971,
			[
				["images/spriteбулявка-sheet0.png", 440188, 0, 0, 604, 785, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		1970,
		[]
	]
,	[
		"t87",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			1977,
			[
				["images/дворник-sheet0.png", 49239, 0, 0, 216, 230, 1, 0.699074, 0.630435,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		1976,
		[]
	]
,	[
		"t88",
		cr.plugins_.Audio,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		1991,
		[]
		,[0,1,1,600,600,10000,1,5000,1]
	]
,	[
		"t89",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/доска.png", 449832, 0],
		null,
		[
		],
		false,
		false,
		2051,
		[]
	]
,	[
		"t90",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2054,
			[
				["images/никник-sheet0.png", 182507, 0, 0, 483, 378, 1, 0.627329, 0.399471,[],[],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			2090
		]
		],
		false,
		false,
		2053,
		[]
	]
,	[
		"t91",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2077,
		[]
	]
,	[
		"t92",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2078,
		[]
	]
,	[
		"t93",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2079,
		[]
	]
,	[
		"t94",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2150,
		[]
	]
,	[
		"t95",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2165,
			[
				["images/лицоникника-sheet0.png", 30653, 0, 0, 132, 228, 1, 0.348485, 0.732456,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2164,
		[]
	]
,	[
		"t96",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2229,
		[]
	]
,	[
		"t97",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2231,
		[]
	]
,	[
		"t98",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		2233,
		[]
	]
,	[
		"t99",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2301,
			[
				["images/лицоникадовольное-sheet0.png", 38067, 0, 0, 128, 224, 1, 0.640625, 0.553571,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			2308
		]
		],
		false,
		false,
		2300,
		[]
	]
,	[
		"t100",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2356,
			[
				["images/никкоти-sheet0.png", 71182, 0, 0, 1000, 250, 1, 0.501, 0.512,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			2358
		]
		],
		false,
		false,
		2355,
		[]
	]
,	[
		"t101",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2612,
			[
				["images/никврост-sheet0.png", 336898, 0, 0, 432, 926, 1, 0.388889, 0.446004,[],[],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			2620
		]
		],
		false,
		false,
		2611,
		[]
	]
,	[
		"t102",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Fade",
			cr.behaviors.Fade,
			2636
		]
		],
		false,
		false,
		2632,
		[]
	]
,	[
		"t103",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Fade",
			cr.behaviors.Fade,
			2635
		]
		],
		false,
		false,
		2634,
		[]
	]
,	[
		"t104",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Fade",
			cr.behaviors.Fade,
			2648
		]
		],
		false,
		false,
		2647,
		[]
	]
,	[
		"t105",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/этаж2.png", 587330, 0],
		null,
		[
		],
		false,
		false,
		2681,
		[]
	]
,	[
		"t106",
		cr.plugins_.Sprite,
		false,
		[],
		3,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2683,
			[
				["images/телотёмное-sheet0.png", 353, 0, 0, 58, 124, 1, 0.396552, 0.0241935,[],[],0]
			]
			]
		],
		[
		[
			"BoundToLayout",
			cr.behaviors.bound,
			2685
		]
,		[
			"ScrollTo",
			cr.behaviors.scrollto,
			2686
		]
,		[
			"8Direction",
			cr.behaviors.EightDir,
			2687
		]
		],
		false,
		false,
		2682,
		[]
	]
,	[
		"t107",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2725,
			[
				["images/рожаклм2-sheet0.png", 157754, 0, 0, 313, 484, 1, 0.463259, 0.931818,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2724,
		[]
	]
,	[
		"t108",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2729,
			[
				["images/высоцкий-sheet0.png", 200992, 0, 0, 291, 797, 1, 0.350515, 0.412798,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2728,
		[]
	]
,	[
		"t109",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2755,
			[
				["images/высвблизи-sheet0.png", 111003, 0, 0, 205, 542, 1, 0.526829, 0.50738,[],[],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			2757
		]
		],
		false,
		false,
		2754,
		[]
	]
,	[
		"t110",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/tiledbackground5.png", 374737, 0],
		null,
		[
		],
		false,
		false,
		2774,
		[]
	]
,	[
		"t111",
		cr.plugins_.Sprite,
		false,
		[],
		2,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2779,
			[
				["images/фиджи-sheet0.png", 11551, 0, 0, 45, 120, 1, 0.533333, 0.00833333,[],[],0]
			]
			]
		],
		[
		[
			"DestroyOutsideLayout",
			cr.behaviors.destroy,
			2780
		]
,		[
			"Bullet",
			cr.behaviors.Bullet,
			2782
		]
		],
		false,
		false,
		2778,
		[]
	]
,	[
		"t112",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2820,
			[
				["images/высоцкий2-sheet0.png", 199437, 0, 0, 245, 822, 1, 0.469388, 0.390511,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2819,
		[]
	]
,	[
		"t113",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2822,
			[
				["images/высоцкий3-sheet0.png", 206947, 0, 0, 299, 813, 1, 0.595318, 0.408364,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2821,
		[]
	]
,	[
		"t114",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2851,
			[
				["images/высоцкий4-sheet0.png", 112655, 0, 0, 186, 675, 1, 0.370968, 0.401481,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2850,
		[]
	]
,	[
		"t115",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2857,
			[
				["images/плато-sheet0.png", 181, 0, 0, 100, 100, 1, 0, 0,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2856,
		[]
	]
,	[
		"t116",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2862,
			[
				["images/стрелки-sheet0.png", 5136, 0, 0, 100, 88, 1, 0.5, 0.488636,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2861,
		[]
	]
,	[
		"t117",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2864,
			[
				["images/стрелкавправо-sheet0.png", 7000, 0, 0, 256, 232, 1, 0.515625, 0.982759,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			2874
		]
		],
		false,
		false,
		2863,
		[]
	]
,	[
		"t118",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2866,
			[
				["images/стрелкавниз-sheet0.png", 8093, 0, 0, 254, 235, 1, 0.972441, 0.502128,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			2872
		]
		],
		false,
		false,
		2865,
		[]
	]
,	[
		"t119",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2868,
			[
				["images/стрелкавверх-sheet0.png", 5387, 0, 0, 247, 228, 1, 0.0161943, 0.504386,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			2873
		]
		],
		false,
		false,
		2867,
		[]
	]
,	[
		"t120",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2870,
			[
				["images/стрелкавлево-sheet0.png", 5838, 0, 0, 259, 219, 1, 0.521236, 0.0182648,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			2871
		]
		],
		false,
		false,
		2869,
		[]
	]
,	[
		"t121",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2900,
			[
				["images/жёлтаявправо-sheet0.png", 413, 0, 0, 100, 88, 1, 0.53, 1,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		2899,
		[]
	]
,	[
		"t122",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2902,
			[
				["images/жёлтаявверх-sheet0.png", 374, 0, 0, 88, 100, 1, 0.522727, 0.99,[],[-0.522727,0.00999999,-0.522727,-0.99,0.477273,-0.99,0.477273,0.00999999],0]
			]
			]
		],
		[
		],
		false,
		false,
		2901,
		[]
	]
,	[
		"t123",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2904,
			[
				["images/жёлтаявлево-sheet0.png", 412, 0, 0, 100, 88, 1, 0.49, 0.988636,[],[0.51,0.0113636,-0.49,0.0113636,-0.49,-0.988636,0.51,-0.988636],0]
			]
			]
		],
		[
		],
		false,
		false,
		2903,
		[]
	]
,	[
		"t124",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			2906,
			[
				["images/жёлтаявниз-sheet0.png", 377, 0, 0, 88, 100, 1, 0.534091, 1,[],[0.465909,-1,0.465909,0,-0.534091,0,-0.534091,-1],0]
			]
			]
		],
		[
		],
		false,
		false,
		2905,
		[]
	]
,	[
		"t125",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3061,
			[
				["images/тазвонит-sheet0.png", 268263, 0, 0, 453, 549, 1, 0.392936, 0.502732,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3060,
		[]
	]
,	[
		"t126",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3096,
			[
				["images/братнеоч-sheet0.png", 591520, 0, 0, 586, 771, 1, 0.568259, 0.56939,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		3095,
		[]
	]
,	[
		"t127",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3112,
			[
				["images/качок-sheet0.png", 218468, 0, 0, 487, 377, 1, 0.616016, 0.596817,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3111,
		[]
	]
,	[
		"t128",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3135,
			[
				["images/качок2-sheet0.png", 67684, 0, 0, 201, 173, 1, 0.61194, 0.710983,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3134,
		[]
	]
,	[
		"t129",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3138,
			[
				["images/высвванне-sheet0.png", 389032, 0, 0, 491, 733, 1, 0.572301, 0.518417,[],[0.427699,0.481583,-0.572301,0.481583,-0.572301,-0.518417,0.427699,-0.518417],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			3139
		]
		],
		false,
		false,
		3137,
		[]
	]
,	[
		"t130",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3216,
		[]
	]
,	[
		"t131",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3217,
		[]
	]
,	[
		"t132",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3257,
			[
				["images/оловка-sheet0.png", 105786, 0, 0, 261, 557, 1, 0.544061, 0.412926,[],[],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			3888
		]
		],
		false,
		false,
		3256,
		[]
	]
,	[
		"t133",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/мемфон.png", 1247, 1],
		null,
		[
		],
		false,
		false,
		3347,
		[]
	]
,	[
		"t134",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3349,
			[
				["images/черновой-sheet0.png", 30425, 0, 0, 100, 143, 1, 0, 221.469,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		3348,
		[]
	]
,	[
		"t135",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3351,
			[
				["images/линиямемоввертикальная-sheet0.png", 565927, 0, 0, 100, 2660, 1, 0, 1,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			3354
		]
		],
		false,
		false,
		3350,
		[]
	]
,	[
		"t136",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3353,
			[
				["images/линиямемовгоризонт-sheet0.png", 541220, 0, 0, 2580, 100, 1, 1, 0,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			3355
		]
		],
		false,
		false,
		3352,
		[]
	]
,	[
		"t137",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3376,
			[
				["images/олова-sheet0.png", 101813, 0, 0, 212, 534, 1, 0.462264, 0.475655,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		3375,
		[]
	]
,	[
		"t138",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3626,
			[
				["images/супер-sheet0.png", 416887, 0, 0, 546, 546, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3625,
		[]
	]
,	[
		"t139",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3648,
			[
				["images/неплохо-sheet0.png", 415697, 0, 0, 540, 850, 1, 0.5, 0.564706,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3647,
		[]
	]
,	[
		"t140",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3659,
			[
				["images/датыпршаренныо-sheet0.png", 499436, 0, 0, 669, 717, 1, 0.538117, 0.669456,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3658,
		[]
	]
,	[
		"t141",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3660,
		[]
	]
,	[
		"t142",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3661,
		[]
	]
,	[
		"t143",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3662,
		[]
	]
,	[
		"t144",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3663,
		[]
	]
,	[
		"t145",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3664,
		[]
	]
,	[
		"t146",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3665,
		[]
	]
,	[
		"t147",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3696,
			[
				["images/класс-sheet0.png", 445583, 0, 0, 463, 725, 1, 0.580994, 0.53931,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3695,
		[]
	]
,	[
		"t148",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3698,
			[
				["images/удачанатвстороне-sheet0.png", 871998, 0, 0, 861, 697, 1, 0.557491, 0.516499,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3697,
		[]
	]
,	[
		"t149",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3727,
			[
				["images/рафаэль-sheet0.png", 154853, 0, 0, 321, 321, 1, 0.501558, 0.501558,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3726,
		[]
	]
,	[
		"t150",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3731,
			[
				["images/сосиска-sheet0.png", 657170, 0, 0, 595, 775, 1, 0.605042, 0.619355,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3730,
		[]
	]
,	[
		"t151",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3737,
			[
				["images/мемзадрот-sheet0.png", 152155, 0, 0, 340, 426, 1, 0.5, 0.70892,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3736,
		[]
	]
,	[
		"t152",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3739,
			[
				["images/шарим-sheet0.png", 165462, 0, 0, 500, 605, 1, 0.5, 0.550413,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3738,
		[]
	]
,	[
		"t153",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3765,
			[
				["images/одноклассники-sheet0.png", 1545906, 0, 0, 1024, 768, 1, 0.5, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3764,
		[]
	]
,	[
		"t154",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3816,
			[
				["images/ковалка-sheet0.png", 97382, 0, 0, 199, 531, 1, 0.643216, 0.500942,[],[],0]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			3894
		]
		],
		false,
		false,
		3815,
		[]
	]
,	[
		"t155",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3887,
			[
				["images/оловавблизи-sheet0.png", 169, 0, 0, 256, 256, 1, 0.5, 0.5,[],[],3]
			]
			]
		],
		[
		],
		false,
		false,
		3886,
		[]
	]
,	[
		"t156",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3891,
			[
				["images/облакооловки-sheet0.png", 3627, 0, 0, 557, 239, 1, 0.500898, 0.464435,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		3890,
		[]
	]
,	[
		"t157",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		3896,
		[]
	]
,	[
		"t158",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			3924,
			[
				["images/гиля-sheet0.png", 750079, 0, 0, 711, 863, 1, 0.506329, 0.556199,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		3923,
		[]
	]
,	[
		"t159",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4027,
			[
				["images/сложно1-sheet0.png", 615299, 0, 0, 960, 959, 1, 0.5, 0.500521,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		4026,
		[]
	]
,	[
		"t160",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4029,
			[
				["images/сложно2-sheet0.png", 402149, 0, 0, 660, 691, 1, 0.801515, 0.341534,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		4028,
		[]
	]
,	[
		"t161",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4031,
			[
				["images/сложно3-sheet0.png", 653727, 0, 0, 598, 855, 1, 0.501672, 0.561404,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		4030,
		[]
	]
,	[
		"t162",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4033,
			[
				["images/сложно4-sheet0.png", 557850, 0, 0, 607, 1080, 1, 0.500824, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		4032,
		[]
	]
,	[
		"t163",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4070,
			[
				["images/облако2-sheet0.png", 3621, 0, 0, 557, 239, 1, 0.500898, 0.535565,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4069,
		[]
	]
,	[
		"t164",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4080,
			[
				["images/олова1-sheet0.png", 101948, 0, 0, 212, 534, 1, 0.462264, 0.475655,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4079,
		[]
	]
,	[
		"t165",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4082,
			[
				["images/олова3-sheet0.png", 101948, 0, 0, 212, 534, 1, 0.462264, 0.475655,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4081,
		[]
	]
,	[
		"t166",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4084,
			[
				["images/олова4-sheet0.png", 101948, 0, 0, 212, 534, 1, 0.462264, 0.475655,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4083,
		[]
	]
,	[
		"t167",
		cr.plugins_.TiledBg,
		false,
		[],
		0,
		0,
		["images/пальто.png", 2365, 0],
		null,
		[
		],
		false,
		false,
		4318,
		[]
	]
,	[
		"t168",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4482,
			[
				["images/газовая-sheet0.png", 549159, 0, 0, 861, 1024, 1, 0.594657, 0.5,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		4481,
		[]
	]
,	[
		"t169",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4484,
			[
				["images/илья-sheet0.png", 564853, 0, 0, 768, 995, 1, 0.5, 0.514573,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		4483,
		[]
	]
,	[
		"t170",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4486,
			[
				["images/геля-sheet0.png", 259493, 0, 0, 592, 444, 1, 0.510135, 0.509009,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		4485,
		[]
	]
,	[
		"t171",
		cr.plugins_.TiledBg,
		false,
		[],
		1,
		0,
		["images/чёрно.png", 1221, 0],
		null,
		[
		[
			"Fade",
			cr.behaviors.Fade,
			4538
		]
		],
		false,
		false,
		4537,
		[]
	]
,	[
		"t172",
		cr.plugins_.Button,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4539,
		[]
	]
,	[
		"t173",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4575,
		[]
	]
,	[
		"t174",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4584,
		[]
	]
,	[
		"t175",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4585,
		[]
	]
,	[
		"t176",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4586,
		[]
	]
,	[
		"t177",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4587,
		[]
	]
,	[
		"t178",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4588,
		[]
	]
,	[
		"t179",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		4589,
		[]
	]
,	[
		"t180",
		cr.plugins_.Particles,
		false,
		[],
		0,
		0,
		["images/фейерверки.png", 5398, 0],
		null,
		[
		],
		false,
		false,
		4741,
		[]
	]
,	[
		"t181",
		cr.plugins_.Particles,
		false,
		[],
		0,
		0,
		["images/фейерверк2.png", 6216, 0],
		null,
		[
		],
		false,
		false,
		4742,
		[]
	]
,	[
		"t182",
		cr.plugins_.Particles,
		false,
		[],
		0,
		0,
		["images/фейерверк3.png", 4312, 0],
		null,
		[
		],
		false,
		false,
		4743,
		[]
	]
,	[
		"t183",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4754,
			[
				["images/вано-sheet0.png", 276198, 0, 0, 475, 623, 1, 0.414737, 0.484751,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			4755
		]
		],
		false,
		false,
		4753,
		[]
	]
,	[
		"t184",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4782,
			[
				["images/непростопарень-sheet0.png", 37909, 0, 0, 162, 288, 1, 0.327161, 0.440972,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			4783
		]
		],
		false,
		false,
		4781,
		[]
	]
,	[
		"t185",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4815,
			[
				["images/рок-sheet0.png", 1644, 0, 0, 23, 34, 1, 0.434783, 0.529412,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			4845
		]
		],
		false,
		false,
		4814,
		[]
	]
,	[
		"t186",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4861,
			[
				["images/витьба-sheet0.png", 639362, 0, 0, 532, 819, 1, 0.68985, 0.661783,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4860,
		[]
	]
,	[
		"t187",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4863,
			[
				["images/витьба2-sheet0.png", 662060, 0, 0, 546, 842, 1, 0.681319, 0.719715,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			4919
		]
		],
		false,
		false,
		4862,
		[]
	]
,	[
		"t188",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4865,
			[
				["images/витьбаудивл-sheet0.png", 413503, 0, 0, 429, 716, 1, 0.687646, 0.547486,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4864,
		[]
	]
,	[
		"t189",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4868,
			[
				["images/витьбаудивл2-sheet0.png", 431120, 0, 0, 520, 770, 1, 0.646154, 0.687013,[],[0.353846,0.312987,-0.646154,0.312987,-0.646154,-0.687013,0.353846,-0.687013],0]
			]
			]
		],
		[
		],
		false,
		false,
		4867,
		[]
	]
,	[
		"t190",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4872,
			[
				["images/скейт-sheet0.png", 30215, 0, 0, 149, 251, 1, 0.543624, 0.270916,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			4932
		]
		],
		false,
		false,
		4871,
		[]
	]
,	[
		"t191",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4876,
			[
				["images/скейт2-sheet0.png", 31656, 0, 0, 213, 298, 1, 0.478873, 0.758389,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4875,
		[]
	]
,	[
		"t192",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4878,
			[
				["images/рыгиквио-sheet0.png", 319692, 0, 0, 613, 637, 1, 0.574225, 0.594976,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			4927
		]
		],
		false,
		false,
		4877,
		[]
	]
,	[
		"t193",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4880,
			[
				["images/рыгикя2-sheet0.png", 381279, 0, 0, 622, 815, 1, 0.585209, 0.52638,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4879,
		[]
	]
,	[
		"t194",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4882,
			[
				["images/рыгикя3-sheet0.png", 367885, 0, 0, 583, 776, 1, 0.576329, 0.466495,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4881,
		[]
	]
,	[
		"t195",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4884,
			[
				["images/рыгикмамчиц-sheet0.png", 554042, 0, 0, 516, 828, 1, 0.596899, 0.763285,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5059
		]
		],
		false,
		false,
		4883,
		[]
	]
,	[
		"t196",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4886,
			[
				["images/рыгикмамчиц2-sheet0.png", 559780, 0, 0, 529, 830, 1, 0.500945, 0.796386,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4885,
		[]
	]
,	[
		"t197",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4888,
			[
				["images/мацуктанцы-sheet0.png", 194863, 0, 0, 342, 708, 1, 0.602339, 0.601695,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5113
		]
		],
		false,
		false,
		4887,
		[]
	]
,	[
		"t198",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4890,
			[
				["images/мацуктанцы2-sheet0.png", 195035, 0, 0, 322, 706, 1, 0.559006, 0.606232,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4889,
		[]
	]
,	[
		"t199",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4894,
			[
				["images/будапрыг2-sheet0.png", 209995, 0, 0, 317, 816, 1, 0.51735, 0.552696,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4893,
		[]
	]
,	[
		"t200",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4906,
			[
				["images/климаева1-sheet0.png", 249825, 0, 0, 594, 981, 1, 0.680135, 0.940877,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5023
		]
		],
		false,
		false,
		4905,
		[]
	]
,	[
		"t201",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4910,
			[
				["images/климаева2-sheet0.png", 256385, 0, 0, 388, 1082, 1, 0.585052, 0.911275,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		4909,
		[]
	]
,	[
		"t202",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4915,
			[
				["images/климаева3-sheet0.png", 254665, 0, 0, 388, 1082, 1, 0.438144, 0.908503,[],[0.561856,0.0914972,-0.438144,0.0914972,-0.438144,-0.908503,0.561856,-0.908503],0]
			]
			]
		],
		[
		],
		false,
		false,
		4914,
		[]
	]
,	[
		"t203",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			4996,
			[
				["images/дискошар-sheet0.png", 617689, 0, 0, 651, 823, 1, 0.494624, 0.608748,[],[0.505376,0.391252,-0.494624,0.391252,-0.494624,-0.608748,0.505376,-0.608748],0]
			]
			]
		],
		[
		],
		false,
		false,
		4995,
		[]
	]
,	[
		"t204",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5032,
			[
				["images/прудик1-sheet0.png", 121390, 0, 0, 300, 638, 1, 0.473333, 0.642633,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5036
		]
		],
		false,
		false,
		5031,
		[]
	]
,	[
		"t205",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5034,
			[
				["images/прудик2-sheet0.png", 127375, 0, 0, 318, 654, 1, 0.512579, 0.608563,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5033,
		[]
	]
,	[
		"t206",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5094,
			[
				["images/мацукфу-sheet0.png", 305748, 0, 0, 499, 766, 1, 0.482966, 0.302872,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5578
		]
		],
		false,
		false,
		5093,
		[]
	]
,	[
		"t207",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5097,
			[
				["images/мацукфу2-sheet0.png", 340495, 0, 0, 489, 799, 1, 0.556237, 0.267835,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5096,
		[]
	]
,	[
		"t208",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5137,
			[
				["images/булавкапиано-sheet0.png", 183235, 0, 0, 458, 633, 1, 0.00655022, 0.461295,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5138
		]
		],
		false,
		false,
		5136,
		[]
	]
,	[
		"t209",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5145,
			[
				["images/пиано-sheet0.png", 258513, 0, 0, 798, 809, 1, 0.986216, 0.220025,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5350
		]
		],
		false,
		false,
		5144,
		[]
	]
,	[
		"t210",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5147,
			[
				["images/пиано1-sheet0.png", 184015, 0, 0, 782, 260, 1, 0.488491, 0.1,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5146,
		[]
	]
,	[
		"t211",
		cr.plugins_.Particles,
		false,
		[],
		0,
		0,
		["images/сэнкс.png", 5194, 0],
		null,
		[
		],
		false,
		false,
		5166,
		[]
	]
,	[
		"t212",
		cr.plugins_.Particles,
		false,
		[],
		0,
		0,
		["images/сэнкс2.png", 5046, 0],
		null,
		[
		],
		false,
		false,
		5167,
		[]
	]
,	[
		"t213",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5169,
			[
				["images/лебедеваранетка-sheet0.png", 190447, 0, 0, 349, 670, 1, 0.409742, 0.71791,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5329
		]
		],
		false,
		false,
		5168,
		[]
	]
,	[
		"t214",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5172,
			[
				["images/лебедеваранетка2-sheet0.png", 171408, 0, 0, 310, 667, 1, 0.516129, 0.698651,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5171,
		[]
	]
,	[
		"t215",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5174,
			[
				["images/булавкаранетка-sheet0.png", 204111, 0, 0, 428, 776, 1, 0.5, 0.604381,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5331
		]
		],
		false,
		false,
		5173,
		[]
	]
,	[
		"t216",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5176,
			[
				["images/виоранетка-sheet0.png", 151198, 0, 0, 281, 717, 1, 0.548043, 0.523013,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5328
		]
		],
		false,
		false,
		5175,
		[]
	]
,	[
		"t217",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5178,
			[
				["images/шушаранетка-sheet0.png", 235706, 0, 0, 421, 664, 1, 0.572447, 0.661145,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5327
		]
		],
		false,
		false,
		5177,
		[]
	]
,	[
		"t218",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5180,
			[
				["images/шушаранетка2-sheet0.png", 253307, 0, 0, 336, 753, 1, 0.842262, 0.713147,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5179,
		[]
	]
,	[
		"t219",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5182,
			[
				["images/мамчицранетка-sheet0.png", 202691, 0, 0, 269, 783, 1, 0.609665, 0.582375,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5326
		]
		],
		false,
		false,
		5181,
		[]
	]
,	[
		"t220",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5184,
			[
				["images/мамчицранетка2-sheet0.png", 199958, 0, 0, 268, 783, 1, 0.608209, 0.581098,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5183,
		[]
	]
,	[
		"t221",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5186,
			[
				["images/бударанетка-sheet0.png", 183194, 0, 0, 455, 813, 1, 0.29011, 0.538745,[],[],0]
			]
			]
		],
		[
		[
			"Bullet",
			cr.behaviors.Bullet,
			5330
		]
		],
		false,
		false,
		5185,
		[]
	]
,	[
		"t222",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5188,
			[
				["images/бударанетка2-sheet0.png", 190732, 0, 0, 477, 746, 1, 0.36478, 0.560322,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5187,
		[]
	]
,	[
		"t223",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5190,
			[
				["images/бударанетка3-sheet0.png", 180079, 0, 0, 507, 666, 1, 0.29783, 0.537538,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5189,
		[]
	]
,	[
		"t224",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5193,
			[
				["images/ранетки-sheet0.png", 72565, 0, 0, 223, 310, 1, 1.56502, 1.36129,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5192,
		[]
	]
,	[
		"t225",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5195,
			[
				["images/ранетки1-sheet0.png", 73221, 0, 0, 223, 310, 1, 0.426009, 0.5,[],[0.573991,0.5,-0.426009,0.5,-0.426009,-0.5,0.573991,-0.5],0]
			]
			]
		],
		[
		],
		false,
		false,
		5194,
		[]
	]
,	[
		"t226",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5263,
			[
				["images/мацуктверк-sheet0.png", 85574, 0, 0, 187, 519, 1, 0.368984, 0.522158,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5262,
		[]
	]
,	[
		"t227",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5265,
			[
				["images/мацуктвёрк2-sheet0.png", 86935, 0, 0, 223, 516, 1, 0.44843, 0.455426,[],[],0]
			]
			]
		],
		[
		],
		false,
		false,
		5264,
		[]
	]
,	[
		"t228",
		cr.plugins_.Text,
		false,
		[],
		1,
		0,
		null,
		null,
		[
		[
			"Fade",
			cr.behaviors.Fade,
			5363
		]
		],
		false,
		false,
		5362,
		[]
	]
,	[
		"t229",
		cr.plugins_.Sprite,
		false,
		[],
		1,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5378,
			[
				["images/задроты-sheet0.png", 160985, 0, 0, 319, 318, 1, 0.501567, 0.496855,[],[],1]
			]
			]
		],
		[
		[
			"Fade",
			cr.behaviors.Fade,
			5379
		]
		],
		false,
		false,
		5377,
		[]
	]
,	[
		"t230",
		cr.plugins_.TextBox,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5383,
		[]
	]
,	[
		"t231",
		cr.plugins_.Sprite,
		false,
		[],
		0,
		0,
		null,
		[
			[
			"Default",
			5,
			false,
			1,
			0,
			false,
			5390,
			[
				["images/пока-sheet0.png", 333728, 0, 0, 626, 531, 1, 1.02236, 0.903955,[],[],1]
			]
			]
		],
		[
		],
		false,
		false,
		5389,
		[]
	]
,	[
		"t232",
		cr.plugins_.Text,
		false,
		[],
		0,
		0,
		null,
		null,
		[
		],
		false,
		false,
		5574,
		[]
	]
	],
	[
	],
	[
	[
		"играть",
		700,
		500,
		false,
		"sheet play",
		0,
		[
		[
			"Layer 0",
			0,
			1,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 702, 501, 0, 0, 1, 0, 0, 0, 0, []],
				0,
				0,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			3,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[391.5, 177.5, 0, 390, 91, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				1,
				1,
				[
				],
				[
				],
				[
					"Гимназия 56",
					1,
					"32pt Arial Narrow",
					"rgb(255,255,255)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[-146, 103, 0, 145, 48, 0, -1.6865e-005, 1, 0, 0, 0, 0, []],
				2,
				2,
				[
				],
				[
				[
					270,
					0,
					0,
					0,
					1
				]
				],
				[
					"The life of",
					0,
					"bold italic 16pt Bradley Hand ITC",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[280, 326, 0, 145, 23, 0, 0, 1, 0, 0, 0, 0, []],
				3,
				3,
				[
				],
				[
				],
				[
					0,
					"PLAY",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Вступление директриса",
		700,
		500,
		false,
		"sheet derectress",
		52,
		[
		[
			"Layer 0",
			0,
			53,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-1, -2, 0, 702, 504, 0, 0, 1, 0, 0, 0, 0, []],
				4,
				4,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			66,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[470, 113, 0, 474, 183, 0, 0, 1, 0.500898, 0.535565, 0, 0, []],
				7,
				6,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[325, 84, 0, 381, 75, 0, 0, 1, 0, 0, 0, 0, []],
				6,
				5,
				[
				],
				[
				],
				[
					"Опять опоздал????? Записываемся!! Какая фамилия, класс?",
					1,
					"11pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[560, 470, 0, 134, 24, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				9,
				[
				],
				[
				],
				[
					0,
					"Продолжить",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[246.738, 143, 0, 273, 430, 0, 0, 1, 0.905759, 0.165877, 0, 0, []],
				8,
				7,
				[
				],
				[
				[
					1,
					1,
					3,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			89,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[380, 37, 0, 201, 36, 0, 0, 1, 0, 0, 0, 0, []],
				10,
				10,
				[
				],
				[
				],
				[
					"За кого играем?",
					1,
					"bold 12pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[288, 87, 0, 190, 190, 0, 0, 1, 0, 0, 0, 0, []],
				11,
				11,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[288, 87, 0, 190, 190, 0, 0, 1, 0, 0, 0, 0, []],
				12,
				12,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[478, 87, 0, 190, 190, 0, 0, 1, 0, 0, 0, 0, []],
				15,
				15,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[478, 87, 0, 190, 190, 0, 0, 1, 0, 0, 0, 0, []],
				16,
				14,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[478, 277, 0, 190, 190, 0, 0, 1, 0, 0, 0, 0, []],
				18,
				17,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[288, 277, 0, 190, 190, 0, 0, 1, 0, 0, 0, 0, []],
				19,
				18,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[288, 277, 0, 190, 190, 0, 0, 1, 0, 0, 0, 0, []],
				20,
				19,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[478, 277, 0, 190, 190, 0, 0, 1, 0, 0, 0, 0, []],
				86,
				111,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			202,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[35, 432, 0, 352, 28, 0, 0, 1, 0, 0, 0, 0, []],
				21,
				20,
				[
				],
				[
				],
				[
					"Некогда мне играть, у меня вахта",
					1,
					"bold 8pt Arial",
					"rgb(255,0,66)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[317, 89, 0, 385, 67, 0, 0, 1, 0, 0, 0, 0, []],
				22,
				21,
				[
				],
				[
				],
				[
					"Эх, Климаева, ладно, сегодня без штрафа. Но впредь будь аккуратна!",
					1,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[384, 81, 0, 255, 60, 0, 0, 1, 0, 0, 0, 0, []],
				23,
				22,
				[
				],
				[
				],
				[
					"Демеш, ты ж спортсмен! Ладно, прощаю сегодня.",
					1,
					"11pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[314, 86, 0, 392, 76, 0, 0, 1, 0, 0, 0, 0, []],
				24,
				23,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					"Сироткин, ты когда мне серенаду с гитарой споёшь? Ладно, прощаю сегодня.",
					1,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[350, 84, 0, 325, 57, 0, 0, 1, 0, 0, 0, 0, []],
				25,
				24,
				[
				],
				[
				],
				[
					"Ой, Полина, понимаю, олимпиада - дело святое. Прощаю.",
					1,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[320, 84, 0, 377, 55, 0, 0, 1, 0, 0, 0, 0, []],
				26,
				25,
				[
				],
				[
				],
				[
					"Тебя как раз Руслана Викторовна искала. Иди от неё получай *хыхыхыхх*",
					1,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[381, 288, 0, 119, 30, 0, 0, 1, 0, 0, 0, 0, []],
				30,
				30,
				[
				],
				[
				],
				[
					"РРРРРРРР",
					1,
					"bold 8pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[580, 285, 0, 97, 30, 0, 0, 1, 0, 0, 0, 0, []],
				31,
				31,
				[
				],
				[
				],
				[
					"А щто?",
					1,
					"bold italic 10pt Arial Narrow",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[487, 100, 0, 51, 30, 0, 0, 1, 0, 0, 0, 0, []],
				17,
				16,
				[
				],
				[
				],
				[
					"БИЧ",
					1,
					"bold 11pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[379, 95, 0, 139, 24, 0, 0, 1, 0, 0, 0, 0, []],
				14,
				13,
				[
				],
				[
				],
				[
					"ШлЮпо4к@@@",
					1,
					"bold italic 8pt Arial Narrow",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"этаж1",
		2000,
		500,
		false,
		"этаж1sheet",
		313,
		[
		[
			"Layer 0",
			0,
			314,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 2004, 499, 0, 0, 1, 0, 0, 0, 0, []],
				32,
				28,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[1017, 487, 0, 2000, 1, 0, 0, 1, 0.507874, -2.25, 0, 0, []],
				36,
				35,
				[
				],
				[
				[
				]
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			485,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[811, 303, 0, 227, 423, 0, 0, 1, 0.471014, 0.53538, 0, 0, []],
				37,
				36,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[8, 11, 0, 371, 28, 0, 0, 1, 0, 0, 0, 0, []],
				38,
				37,
				[
				],
				[
				],
				[
					"УПРАВЛЕНИЕ - СТРЕЛОЧКИ)))))",
					0,
					"bold 10pt Arial Narrow",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[606, -45, 0, 147, 30, 0, 0, 1, 0, 0, 0, 0, []],
				39,
				38,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Поговорить",
					"",
					1,
					1,
					1,
					"",
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			421,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[105, 342, 0, 92, 146, 0, 0, 1, 0.413793, 0.00806452, 0, 0, []],
				27,
				26,
				[
				],
				[
				[
					1
				],
				[
					180,
					600,
					500,
					1,
					0,
					1
				],
				[
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[138.665, 352.46, 0, 111, 124, 0, 0, 1, 0.578059, 0.990964, 0, 0, []],
				29,
				29,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[137, 353, 0, 103, 150, 0, 0, 1, 0.544118, 0.970297, 0, 0, []],
				33,
				32,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[105, 342, 0, 142, 99, 0, 0, 1, 0.603604, 0.982759, 0, 0, []],
				34,
				33,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[113, 345, 0, 186, 174, 0, 0.38051, 1, 0.4677, 0.895706, 0, 0, []],
				35,
				34,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"Переписки",
		700,
		500,
		false,
		"перпискищит",
		523,
		[
		[
			"Layer 0",
			0,
			524,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-448, -1, 0, 1166, 510, 0, 0, 1, 0, 0, 0, 0, []],
				32,
				39,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[376.672, 332.346, 0, 699, 500, 0, 0, 1, 0.538213, 0.667557, 0, 0, []],
				46,
				48,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			525,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[449.45, 295.029, 0, 445, 374, 0, 0, 1, 0.449898, 0.446078, 0, 0, []],
				5,
				40,
				[
				],
				[
				[
					1,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[199.479, 184.854, 0, -393, 234, 0, 0, 1, 0.500898, 0.535565, 0, 0, []],
				7,
				41,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[76, 168, 0, 233, 33, 0, 0, 1, 0, 0, 0, 0, []],
				40,
				42,
				[
				],
				[
				[
					1,
					1,
					2,
					0,
					1
				]
				],
				[
					"Мне нужна твоя помощь!",
					0,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[60, 153, 0, 307, 74, 0, 0, 1, 0, 0, 0, 0, []],
				41,
				43,
				[
				],
				[
				],
				[
					"Наглые школьники удаляют переписки, и я не успеваю уследить за ними! ",
					1,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[880, 168, 0, 291, 190, 0, 0, 1, 0.513514, 0.504762, 0, 0, []],
				42,
				44,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[837, 92, 0, 71, 30, 0, 0, 1, 0, 0, 0, 0, []],
				43,
				45,
				[
				],
				[
				],
				[
					"Задание",
					0,
					"8pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[796, 279, 0, 73, 19, 0, 0, 1, 0, 0, 0, 0, []],
				44,
				46,
				[
				],
				[
				],
				[
					0,
					"OK",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[734, 143, 0, 307, 71, 0, 0, 1, 0, 0, 0, 0, []],
				45,
				47,
				[
				],
				[
				],
				[
					"Помоги Р.В. уличить плохих школьничков. Кликай по сообщениям, вызывающим подозрение.",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[29, 158, 0, 309, 79, 0, 0, 1, 0, 0, 0, 0, []],
				65,
				67,
				[
				],
				[
				],
				[
					"Я тут посмотрела, переписочки-то твоими оказались!",
					1,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[16, 143, 0, 296, 84, 0, 0, 1, 0, 0, 0, 0, []],
				66,
				68,
				[
				],
				[
				],
				[
					"Теперь всё, что может спасти тебя от отчисления, - хорошие отметки! Ну-ка посмотрим, что у тебя там в дневнике.",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[45, 155, 0, 247, 74, 0, 0, 1, 0, 0, 0, 0, []],
				69,
				74,
				[
				],
				[
				],
				[
					"ОХОХО! Да по тебе совет профилактики плачет! ",
					1,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[21, 134, 0, 313, 104, 0, 0, 1, 0, 0, 0, 0, []],
				70,
				75,
				[
				],
				[
				],
				[
					"Так и быть, как активному участнику в школьной общественной жизни даю тебе последний шанс. Беги исправлять отметки, балбес! ",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			560,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[517, 307, 0, 112, 23, 0, 0, 1, 0, 0, 0, 0, []],
				47,
				49,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"Чё с бухлом?",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[73, 130, 0, 64, 24, 0, 0, 1, 0, 0, 0, 0, []],
				48,
				50,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"СПАЙС",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[344, 414, 0, 125, 30, 0, 0, 1, 0, 0, 0, 0, []],
				49,
				51,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"На Красной18))",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[290, 78, 0, 92, 30, 0, 0, 1, 0, 0, 0, 0, []],
				50,
				52,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"Есть флет?",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[18, 192, 0, 134, 24, 0, 0, 1, 0, 0, 0, 0, []],
				51,
				53,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"Киньте дз обсосы",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[486, 28, 0, 134, 23, 0, 0, 1, 0, 0, 0, 0, []],
				52,
				54,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"я водяру не буду",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[117, 22, 0, 200, 30, 0, 0, 1, 0, 0, 0, 0, []],
				53,
				55,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"КТО РЕШИЛ БИО??",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[383, 129, 0, 200, 30, 0, 0, 1, 0, 0, 0, 0, []],
				54,
				56,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"фараон для школьников",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[464, 166, 0, 200, 30, 0, 0, 1, 0, 0, 0, 0, []],
				55,
				57,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"каспийский груз тема",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[41, 371, 0, 67, 30, 0, 0, 1, 0, 0, 0, 0, []],
				56,
				58,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"мутите?",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[50, 263, 0, 83, 30, 0, 0, 1, 0, 0, 0, 0, []],
				57,
				59,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"как дела?",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[548, 382, 0, 101, 30, 0, 0, 1, 0, 0, 0, 0, []],
				58,
				60,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"я на курилке",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[474, 467, 0, 200, 30, 0, 0, 1, 0, 0, 0, 0, []],
				59,
				61,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"чё по флетам слышно?",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[24, 444, 0, 103, 30, 0, 0, 1, 0, 0, 0, 0, []],
				60,
				62,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"купи мне сиг",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[163, 384, 0, 115, 30, 0, 0, 1, 0, 0, 0, 0, []],
				61,
				63,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"мне винишка",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[277, 260, 0, 149, 30, 0, 0, 1, 0, 0, 0, 0, []],
				62,
				64,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"что мима сказала?",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[218, 199, 0, 128, 30, 0, 0, 1, 0, 0, 0, 0, []],
				63,
				65,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"у меня кэш на 0",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[271, 326, 0, 99, 30, 0, 0, 1, 0, 0, 0, 0, []],
				64,
				66,
				[
				],
				[
				[
					100,
					0,
					0,
					0,
					0
				],
				[
					1
				]
				],
				[
					"что задали?",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			846,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[367, 282, 0, 491, 314, 0, 0, 1, 0.5, 0.64, 0, 0, []],
				67,
				69,
				[
				],
				[
				[
					1,
					1,
					0,
					0,
					1
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[526, 144, 0, 37, 73, 0, 0, 1, 0, 0, 0, 0, []],
				68,
				70,
				[
				],
				[
				],
				[
					"2",
					1,
					"italic 26pt Arial",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[523, 194, 0, 37, 73, 0, 0, 1, 0, 0, 0, 0, []],
				68,
				71,
				[
				],
				[
				],
				[
					"2",
					1,
					"italic 26pt Arial",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[527, 238, 0, 37, 73, 0, 0, 1, 0, 0, 0, 0, []],
				68,
				72,
				[
				],
				[
				],
				[
					"2",
					1,
					"italic 26pt Arial",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"столовка",
		700,
		500,
		false,
		"столовкащет",
		882,
		[
		[
			"Layer 0",
			0,
			883,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 700, 500, 0, 0, 1, 0, 0, 0, 0, []],
				71,
				76,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[384, 456, 0, 730, -3, 0, 0, 1, 0.53, -4, 0, 0, []],
				72,
				78,
				[
				],
				[
				[
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[533, 399, 0, 127, -3, 0, -1.59934, 1, 0.53, -4, 0, 0, []],
				72,
				79,
				[
				],
				[
				[
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[568, 250, 0, 181, 228, 0, 0.0525796, 1, 0.468235, 0.5, 0, 0, []],
				73,
				84,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			885,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[285.655, 315.992, 0, 62, 123, 0, -1.6646e-005, 1, 0.413793, 0.00806452, 0, 0, []],
				27,
				77,
				[
				],
				[
				[
					1
				],
				[
					200,
					600,
					500,
					1,
					0,
					1
				],
				[
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[305, 320, 0, 91, 142, 0, 0, 1, 0.544118, 0.970297, 0, 0, []],
				33,
				80,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[258, 324, 0, 102, 147, 0, 0, 1, 0.603604, 0.982759, 0, 0, []],
				34,
				81,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[290, 322, 0, 103, 125, 0, 0, 1, 0.578059, 0.990964, 0, 0, []],
				29,
				82,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[251, 308, 0, 164, 157, 0, 0.540398, 1, 0.4677, 0.895706, 0, 0, []],
				35,
				83,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[532, 294, 0, 305, 414, 0, -0.000359962, 1, 0.468235, 0.5, 0, 0, []],
				73,
				85,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[259, 140, 0, -411, 239, 0, 0, 1, 0.500898, 0.535565, 0, 0, []],
				7,
				86,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			957,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[84, 90, 0, 304, 112, 0, 0, 1, 0, 0, 0, 0, []],
				74,
				87,
				[
				],
				[
				],
				[
					"Господибоже, я похудела на 20 кг и теперь очень хочу есть!! Пожалуйста, помоги мне съесть всю еду в столовке!",
					1,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[373, 251, 0, 287, 171, 0, 0, 1, 0.513514, 0.504762, 0, 0, []],
				42,
				89,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[334, 171, 0, 81, 28, 0, 0, 1, 0, 0, 0, 0, []],
				43,
				90,
				[
				],
				[
				],
				[
					"Задание",
					1,
					"bold 10pt Arial Narrow",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[243, 201, 0, 266, 126, 0, 0, 1, 0, 0, 0, 0, []],
				45,
				91,
				[
				],
				[
				],
				[
					"Лови вкусняшки языком, пока Даша не вернёт свои 55 кг. Осторожно, не доведи её до анорексии! И не ешь капусту или лук!",
					1,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[339, 300, 0, 74, 20, 0, 0, 1, 0, 0, 0, 0, []],
				44,
				92,
				[
				],
				[
				],
				[
					0,
					"OK",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[11, 464, 0, 130, 24, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				93,
				[
				],
				[
				],
				[
					0,
					"Продолжить",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[145, 106, 0, 209, 69, 0, 0, 1, 0, 0, 0, 0, []],
				17,
				110,
				[
				],
				[
				],
				[
					"Ой, мы опаздываем на математику!",
					1,
					"11pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"жратва",
		700,
		500,
		false,
		"жратващет",
		965,
		[
		[
			"Layer 0",
			0,
			966,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 700, 500, 0, 0, 1, 0, 0, 0, 0, []],
				71,
				88,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[392, 456, 0, 173, 140, 0, 1.22173, 1, 0.68718, 0.28, 0, 0, []],
				75,
				94,
				[
				],
				[
				[
					300,
					600,
					500,
					1,
					0,
					1
				]
				],
				[
					0,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			979,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[98, -22, 0, 90, 74, 0, 0, 1, 0.514607, 0.450928, 0, 0, []],
				76,
				95,
				[
				],
				[
				[
					180,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[411.421, -32.4901, 0, 140, 71, 0, 0, 1, 0.498705, 0.503289, 0, 0, []],
				77,
				96,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[529.19, -140.889, 0, 90, 85, 0, 0, 1, 0.510549, 0.507538, 0, 0, []],
				78,
				97,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[21.9496, -135.556, 0, 90, 74, 0, 0, 1, 0.478589, 0.555556, 0, 0, []],
				79,
				98,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[662.364, -45.9546, 0, 109, 83, 0, 0, 1, 0.550832, 0.502841, 0, 0, []],
				80,
				99,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[231.438, -36, 0, 85, 76, 0, 0, 1, 0.506849, 0.553333, 0, 0, []],
				81,
				100,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[442.075, -122, 0, 110, 82, 0, 0, 1, 0.504174, 0.5, 0, 0, []],
				82,
				101,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[168.429, -129.751, 0, 98, 83, 0, 0, 1, 0.547619, 0.477193, 0, 0, []],
				83,
				102,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[299.904, -152.457, 0, 95, 80, 0, 0, 1, 0.554192, 0.432133, 0, 0, []],
				84,
				103,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[11, 9, 0, 128, 50, 0, 0, 1, 0, 0, 0, 0, []],
				85,
				104,
				[
				],
				[
				],
				[
					"Text",
					0,
					"bold 12pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[398, 461, 0, 176, 167.52, 0, 0, 1, 0.699074, 0.630435, 0, 0, []],
				87,
				112,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			1938,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			1950,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[344, 258, 0, 72, 24, 0, 0, 1, 0, 0, 0, 0, []],
				44,
				108,
				[
				],
				[
				],
				[
					0,
					"OK",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[384.162, 208.076, 0, 306, 185, 0, 0, 1, 0.513514, 0.504762, 0, 0, []],
				42,
				105,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[275, 190, 0, 225, 70, 0, 0, 1, 0, 0, 0, 0, []],
				6,
				109,
				[
				],
				[
				],
				[
					"Победа! Даша покушала и счастлива.",
					1,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[348, 123, 0, 57, 30, 0, 0, 1, 0, 0, 0, 0, []],
				43,
				106,
				[
				],
				[
				],
				[
					"R.I.P.",
					1,
					"bold 10pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[232, 160, 0, 188, 132, 0, 0, 1, 0, 0, 0, 0, []],
				45,
				107,
				[
				],
				[
				],
				[
					"За такую игру я сейсчас твоим родителям позвоню! Давай ещё раз.",
					1,
					"bold 8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[458.788, 192.579, 0, 129, 143, 0, 0, 1, 0.392936, 0.502732, 0, 0, []],
				125,
				190,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"математика",
		700,
		500,
		false,
		"математика",
		1968,
		[
		[
			"Layer 0",
			0,
			1969,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-4, 0, 0, 704, 500, 0, 0, 1, 0, 0, 0, 0, []],
				89,
				114,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[187.863, 273.598, 0, 478, 382, 0, 0, 1, 0.627329, 0.399471, 0, 0, []],
				90,
				115,
				[
				],
				[
				[
					1,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			2052,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			2075,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[398, 51, 0, 277, 157, 0, 0, 1, 0, 0, 0, 0, []],
				47,
				120,
				[
				],
				[
				[
					400,
					0,
					0,
					0,
					1
				],
				[
					1
				]
				],
				[
					"sin 30°?",
					1,
					"italic 37pt Bradley Hand ITC",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[399, 187, 0, 26, 27, 0, 0, 1, 0, 0, 0, 0, []],
				91,
				124,
				[
				],
				[
				],
				[
					1,
					"",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[399, 255, 0, 20, 23, 0, 0, 1, 0, 0, 0, 0, []],
				92,
				125,
				[
				],
				[
				],
				[
					1,
					"",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[399, 321, 0, 20, 22, 0, 0, 1, 0, 0, 0, 0, []],
				93,
				126,
				[
				],
				[
				],
				[
					1,
					"",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[411, 241, 0, 123, 57, 0, 0, 1, 0, 0, 0, 0, []],
				31,
				121,
				[
				],
				[
				],
				[
					" √3/2",
					1,
					"bold italic 24pt Chiller",
					"rgb(255,255,160)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[410, 303, 0, 126, 64, 0, 0, 1, 0, 0, 0, 0, []],
				17,
				122,
				[
				],
				[
				],
				[
					" √2/3",
					1,
					"bold italic 24pt Chiller",
					"rgb(255,255,160)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[449, 174, 0, 76, 58, 0, 0, 1, 0, 0, 0, 0, []],
				1,
				127,
				[
				],
				[
				],
				[
					"1/2",
					1,
					"bold italic 24pt Chiller",
					"rgb(255,255,153)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[528, 425, 0, 128, 25, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				119,
				[
				],
				[
				],
				[
					0,
					"Продолжить",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[437, 383, 0, 122, 28, 0, 0, 1, 0, 0, 0, 0, []],
				44,
				123,
				[
				],
				[
				],
				[
					0,
					"Ответить",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[176.696, 227.035, 0, 151, 207, 0, 0.0499594, 1, 0.348485, 0.732456, 0, 0, []],
				95,
				129,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[347, 49, 0, 344, 124, 0, 0, 1, 0, 0, 0, 0, []],
				70,
				130,
				[
				],
				[
				],
				[
					"Что выберет умный человек?",
					1,
					"23pt Mistral",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[439, 177, 0, 234, 44, 0, 0, 1, 0, 0, 0, 0, []],
				25,
				131,
				[
				],
				[
				],
				[
					"теорема Пифагора",
					1,
					"12pt Comic Sans MS",
					"rgb(255,255,160)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[419, 250, 0, 293, 71, 0, 0, 1, 0, 0, 0, 0, []],
				23,
				132,
				[
				],
				[
				],
				[
					"решение через дискриминант",
					1,
					"10pt Comic Sans MS",
					"rgb(255,255,153)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[445, 312, 0, 199, 39, 0, 0, 1, 0, 0, 0, 0, []],
				22,
				133,
				[
				],
				[
				],
				[
					"теорема Виета",
					1,
					"12pt Comic Sans MS",
					"rgb(255,255,160)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[345, 52, 0, 346, 136, 0, 0, 1, 0, 0, 0, 0, []],
				24,
				134,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					1
				]
				],
				[
					"Как зовут моего дачного котика?",
					1,
					"23pt Mistral",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[439, 245, 0, 204, 46, 0, 0, 1, 0, 0, 0, 0, []],
				173,
				374,
				[
				],
				[
				],
				[
					"Васька",
					1,
					"12pt Comic Sans MS",
					"rgb(255,255,153)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			2112,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-497, 247, 0, 1001, 149, 0, 0, 1, 0.501, 0.512, 0, 0, []],
				100,
				144,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[-497, 73, 0, 1000, 149, 0, 0, 1, 0.501, 0.512, 0, 0, []],
				100,
				142,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[450.474, 145.573, 0, 366, 202, 0, 0, 1, 0.500898, 0.535565, 0, 0, []],
				7,
				116,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[-496, 459, 0, 1001, 149, 0, 0, 1, 0.501, 0.512, 0, 0, []],
				100,
				143,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[1196, 355, 0, -1001, 149, 0, 0, 1, 0.501, 0.512, 0, 0, []],
				100,
				145,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[1195, 158, 0, -1001, 149, 0, 0, 1, 0.501, 0.512, 0, 0, []],
				100,
				146,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[149, 284, 0, 216, 432, 0, 0, 1, 0.388889, 0.446004, 0, 0, []],
				101,
				147,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 4",
			4,
			2478,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[325, 112, 0, 334, 106, 0, 0, 1, 0, 0, 0, 0, []],
				74,
				141,
				[
				],
				[
				],
				[
					"Ошибочки были, но 4 ставлю без разговоров. Молодец!",
					1,
					"12pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[329, 125, 0, 349, 71, 0, 0, 1, 0, 0, 0, 0, []],
				14,
				140,
				[
				],
				[
				],
				[
					"Дай я тебя поцелую!",
					1,
					"bold 15pt Arial Narrow",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[360, 117, 0, 261, 60, 0, 0, 1, 0, 0, 0, 0, []],
				65,
				117,
				[
				],
				[
				],
				[
					"Ну что, тунеядец, пришёл двойку исправлять?",
					1,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[367, 119, 0, 264, 52, 0, 0, 1, 0, 0, 0, 0, []],
				66,
				118,
				[
				],
				[
				],
				[
					"Ответишь на мои вопросы - поставлю 5.",
					1,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[436, 311, 0, 142, 42, 0, 0, 1, 0, 0, 0, 0, []],
				98,
				137,
				[
				],
				[
				],
				[
					"Асимптот",
					1,
					"14pt Comic Sans MS",
					"rgb(255,255,160)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[442, 247, 0, 149, 47, 0, 0, 1, 0, 0, 0, 0, []],
				97,
				136,
				[
				],
				[
				],
				[
					"Васька",
					1,
					"14pt Comic Sans MS",
					"rgb(255,255,160)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[445, 178, 0, 95, 40, 0, 0, 1, 0, 0, 0, 0, []],
				96,
				135,
				[
				],
				[
				],
				[
					"Пушок",
					1,
					"14pt Comic Sans MS",
					"rgb(255,255,153)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[44, 94, 0, 336, 24, 0, 0, 1, 0, 0, 0, 0, []],
				94,
				128,
				[
				],
				[
				],
				[
					"Неправильно! Тут ОДИН правильный ответ.",
					1,
					"8pt Arial",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[333, 116, 0, 311, 72, 0, 0, 1, 0, 0, 0, 0, []],
				85,
				139,
				[
				],
				[
				],
				[
					"Ставлю 5 без разговоров! Молодец!",
					1,
					"12pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[495, 275, 0, 383, 281, 0, 0, 1, 0.5, 0.64, 0, 0, []],
				67,
				148,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 5",
			5,
			2629,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[618, 195, 0, 206, 63, 0, 0, 1, 0, 0, 0, 0, []],
				68,
				150,
				[
				],
				[
				],
				[
					"2",
					1,
					"bold 19pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[619, 237, 0, 206, 63, 0, 0, 1, 0, 0, 0, 0, []],
				68,
				151,
				[
				],
				[
				],
				[
					"2",
					1,
					"bold 19pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[618, 149, 0, 182, 76, 0, 0, 1, 0, 0, 0, 0, []],
				102,
				152,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					"5",
					1,
					"bold 22pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[620, 151, 0, 203, 60, 0, 0, 1, 0, 0, 0, 0, []],
				103,
				153,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					"2",
					1,
					"bold 19pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[617, 144, 0, 135, 69, 0, 0, 1, 0, 0, 0, 0, []],
				104,
				154,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					"4",
					1,
					"bold 23pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"этаж2",
		1500,
		500,
		false,
		"этаж2щет",
		2667,
		[
		[
			"Layer 0",
			0,
			2668,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[1, -1, 0, 1501, 503, 0, 0, 1, 0, 0, 0, 0, []],
				105,
				155,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[789.7, 467, 0, 1492, 1, 0, 0, 1, 0.53, -4, 0, 0, []],
				72,
				156,
				[
				],
				[
				[
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[1114, 254, 0, 177, 353, 0, 0, 1, 0.544061, 0.412926, 0, 0, []],
				132,
				203,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[1261, 313, 0, 148, 361, 0, 0, 1, 0.643216, 0.500942, 0, 0, []],
				154,
				204,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[1023, -39, 0, 119, 24, 0, 0, 1, 0, 0, 0, 0, []],
				39,
				262,
				[
				],
				[
				[
				]
				],
				[
					0,
					"Поговорить",
					"",
					1,
					1,
					1,
					"",
					0
				]
			]
,			[
				[459, 202.854, 0, 457, 220, 0, 0, 1, 0.500898, 0.464435, 0, 0, []],
				156,
				196,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			2739,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[28.5793, 311.623, 0, 181, 201, 0, 0.456951, 1, 0.4677, 0.895706, 0, 0, []],
				35,
				161,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[67, 298, 0, 83, 175, 0, 0, 1, 0.396552, 0.0241935, 0, 0, []],
				106,
				157,
				[
				],
				[
				[
					1
				],
				[
				],
				[
					200,
					600,
					500,
					1,
					0,
					1
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[73, 292, 0, 92, 162, 0, 0, 1, 0.544118, 0.970297, 0, 0, []],
				33,
				158,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[66, 306, 0, 126, 176, 0, 0, 1, 0.463259, 0.931818, 0, 0, []],
				107,
				159,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[93.7748, 306.121, 0, 109, 188, 0, 0, 1, 0.603604, 0.982759, 0, 0, []],
				34,
				160,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[723, 274, 0, 223, 457, 0, 0, 1, 0.526829, 0.50738, 0, 0, []],
				109,
				163,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[477.471, 105.285, 0, -337, 173, 0, 0, 1, 0.500898, 0.535565, 0, 0, []],
				7,
				162,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[336, 77, 0, 257, 62, 0, 0, 1, 0, 0, 0, 0, []],
				74,
				164,
				[
				],
				[
				],
				[
					"Эх, щас бы под суисайдиков похайпить...",
					1,
					"10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[515, 431, 0, 87, 29, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				165,
				[
				],
				[
				],
				[
					0,
					"Go",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[577, 276, 0, 435, 239, 0, 0, 1, 0.5, 0.64, 0, 0, []],
				67,
				195,
				[
				],
				[
				[
					1,
					1,
					0,
					0,
					1
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[724, 239, 0, 106, 52, 0, 0, 1, 0, 0, 0, 0, []],
				68,
				197,
				[
				],
				[
				],
				[
					"2",
					1,
					"bold 18pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[718, 203, 0, 125, 57, 0, 0, 1, 0, 0, 0, 0, []],
				104,
				198,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					"4",
					1,
					"bold 19pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[720, 199, 0, 180, 58, 0, 0, 1, 0, 0, 0, 0, []],
				102,
				199,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					"5",
					1,
					"bold 20pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[722, 203, 0, 202, 56, 0, 0, 1, 0, 0, 0, 0, []],
				103,
				200,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					"2",
					1,
					"bold 19pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[722, 168, 0, 89, 57, 0, 0, 1, 0, 0, 0, 0, []],
				130,
				201,
				[
				],
				[
				],
				[
					"4",
					1,
					"bold 19pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[723, 168, 0, 84, 56, 0, 0, 1, 0, 0, 0, 0, []],
				131,
				202,
				[
				],
				[
				],
				[
					"5",
					1,
					"bold 19pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[707, 329, 0, 72, 24, 0, 0, 1, 0, 0, 0, 0, []],
				44,
				205,
				[
				],
				[
				],
				[
					0,
					"OK",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[1371, 440, 0, 110, 24, 0, 0, 1, 0, 0, 0, 0, []],
				157,
				263,
				[
				],
				[
				],
				[
					0,
					"Продолжить",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"суисайды",
		700,
		500,
		false,
		"суисайдыщет",
		2770,
		[
		[
			"Layer 0",
			0,
			2771,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 700, 500, 0, 0, 1, 0, 0, 0, 0, []],
				110,
				166,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[116, -137, 0, 41, 108, 0, 0, 1, 0.533333, 0.00833333, 0, 0, []],
				111,
				168,
				[
				],
				[
				[
				],
				[
					100,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[-95, 121, 0, 114, 144, 0, -0.924287, 1, 0.572301, 0.518417, 0, 0, []],
				129,
				194,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			2818,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[518.103, 221, 0, 210, 454, 0, 0, 1, 0.350515, 0.412798, 0, 0, []],
				108,
				172,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[524, 213, 0, 151, 446, 0, 0, 1, 0.469388, 0.390511, 0, 0, []],
				112,
				173,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[526, 221.775, 0, 198, 443, 0, 0, 1, 0.595318, 0.408364, 0, 0, []],
				113,
				174,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[487, 222, 0, 159, 461, 0, 0, 1, 0.370968, 0.401481, 0, 0, []],
				114,
				175,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[102.315, 140, 0, 264, 366, 0, 0, 1, 0, 0, 0, 0, []],
				115,
				176,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[331, 217, 0, 68, 56, 0, 0, 1, 0.53, 1, 0, 0, []],
				121,
				185,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[206, 218, 0, 53, 65, 0, 0, 1, 0.534091, 1, 0, 0, []],
				124,
				188,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[139, 217, 0, 62, 57, 0, 0, 1, 0.49, 0.988636, 0, 0, []],
				123,
				187,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[266, 217, 0, 55, 66, 0, 0, 1, 0.522727, 0.99, 0, 0, []],
				122,
				186,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			2806,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[329, 188, 0, 60, 49, 0, 0, 1, 0.5, 0.488636, 0, 0, []],
				116,
				177,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[140, 189, 0, 60, 49, 0, -3.14159, 1, 0.5, 0.488636, 0, 0, []],
				116,
				178,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[207, 188, 0, 60, 49, 0, 1.5708, 1, 0.5, 0.488636, 0, 0, []],
				116,
				179,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[264, 185, 0, 60, 49, 0, -1.5708, 1, 0.5, 0.488636, 0, 0, []],
				116,
				180,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[542, -1, 0, 205, 47, 0, 0, 1, 0, 0, 0, 0, []],
				85,
				189,
				[
				],
				[
				],
				[
					"Очки:",
					0,
					"bold 14pt Arial Black",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[6, 109, 0, 180, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				208,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[4, 298, 0, 180, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				209,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[184.568, 109, 0, 181, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				207,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[364.092, 108.861, 0, 180, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				191,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[184.137, 299, 0, 182, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				210,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[365.137, 298, 0, 182, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				211,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[546.568, 297.708, 0, 181, 194, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				212,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[544, 108, 0, 180, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				213,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[723, 109, 0, 180, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				214,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[724.727, 299, 0, 176, 194, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				215,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[3, 489, 0, 180, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				216,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[184.137, 489, 0, 182, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				217,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[365.137, 489, 0, 182, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				218,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[546, 490, 0, 180, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				219,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[725, 491, 0, 180, 191, 0, 0, 1, 0.568259, 0.56939, 0, 0, []],
				126,
				220,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[168, 5, 0, 187, 72, 0, 0, 1, 0, 0, 0, 0, []],
				6,
				221,
				[
				],
				[
				],
				[
					"Неудача",
					1,
					"italic 10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[525, 6, 0, 187, 72, 0, 0, 1, 0, 0, 0, 0, []],
				6,
				222,
				[
				],
				[
				],
				[
					"Неудача",
					1,
					"italic 10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[532, 394, 0, 187, 72, 0, 0, 1, 0, 0, 0, 0, []],
				6,
				223,
				[
				],
				[
				],
				[
					"Неудача",
					1,
					"italic 10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[356, 396, 0, 187, 72, 0, 0, 1, 0, 0, 0, 0, []],
				6,
				224,
				[
				],
				[
				],
				[
					"Неудача",
					1,
					"italic 10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[173, 397, 0, 187, 72, 0, 0, 1, 0, 0, 0, 0, []],
				6,
				225,
				[
				],
				[
				],
				[
					"Неудача",
					1,
					"italic 10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[525, 198, 0, 187, 72, 0, 0, 1, 0, 0, 0, 0, []],
				6,
				226,
				[
				],
				[
				],
				[
					"Неудача",
					1,
					"italic 10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			2920,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-81, 259, 0, 66, 59, 0, -1.5708, 1, 0.0161943, 0.504386, 0, 0, []],
				119,
				183,
				[
				],
				[
				[
					200,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[-63, 368, 0, 68, 57, 0, 3.14159, 1, 0.521236, 0.0182648, 0, 0, []],
				120,
				184,
				[
				],
				[
				[
					200,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[-123, 311, 0, 64, 63, 0, 1.5708, 1, 0.972441, 0.502128, 0, 0, []],
				118,
				182,
				[
				],
				[
				[
					200,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[-131, 369, 0, 64, 58, 0, 0, 1, 0.515625, 0.982759, 0, 0, []],
				117,
				181,
				[
				],
				[
				[
					200,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[368.189, 236.562, 0, 293, 144, 0, 0, 1, 0.513514, 0.504762, 0, 0, []],
				42,
				167,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[319, 165, 0, 126, 33, 0, 0, 1, 0, 0, 0, 0, []],
				43,
				169,
				[
				],
				[
				],
				[
					"Задание",
					0,
					"bold 11pt Arial Narrow",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[334, 272, 0, 69, 21, 0, 0, 1, 0, 0, 0, 0, []],
				44,
				170,
				[
				],
				[
				],
				[
					0,
					"OK",
					"",
					1,
					1,
					1,
					"",
					0
				]
			]
,			[
				[230, 200, 0, 279, 62, 0, 0, 1, 0, 0, 0, 0, []],
				45,
				171,
				[
				],
				[
				],
				[
					"Нажимай по соответствующим стрелкам, когда они входят в свой контур",
					0,
					"8pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[606, 251.387, 0, 163, 145, 0, 0, 1, 0.616016, 0.596817, 0, 0, []],
				127,
				192,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[164.97, 267.092, 0, 165, 145, 0, 0, 1, 0.61194, 0.710983, 0, 0, []],
				128,
				193,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[329, 7, 0, 187, 72, 0, 0, 1, 0, 0, 0, 0, []],
				6,
				206,
				[
				],
				[
				],
				[
					"Неудача",
					1,
					"italic 10pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"мемология",
		700,
		500,
		false,
		"мемологиящит",
		3333,
		[
		[
			"Layer 0",
			0,
			3334,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 700, 500, 0, 0, 1, 0, 0, 0, 0, []],
				133,
				227,
				[
				],
				[
				],
				[
					0,
					0
				]
			]
,			[
				[-1, 3165, 0, 100, 2660, 0, 0, 1, 0, 1, 0, 0, []],
				135,
				229,
				[
				],
				[
				[
					40,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[3285, -1, 0, 2580, 101, 0, 0, 1, 1, 0, 0, 0, []],
				136,
				230,
				[
				],
				[
				[
					50,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[286, 270, 0, 100, 120, 0, 0, 1, 0, 221.469, 0, 0, []],
				134,
				228,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			3364,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-1, -1, 0, 101, 101, 0, 0, 1, 0, 0, 0, 0, []],
				115,
				231,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[105, 102, 0, 398, 139, 0, 0, 1, 0, 0, 0, 0, []],
				1,
				237,
				[
				],
				[
				],
				[
					"Чем нужно протирать цветы?",
					1,
					"18pt Consolas",
					"rgb(233,233,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[117, 247, 0, 26, 24, 0, 0, 1, 0, 0, 0, 0, []],
				91,
				238,
				[
				],
				[
				],
				[
					1,
					"",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[117, 293, 0, 29, 28, 0, 0, 1, 0, 0, 0, 0, []],
				92,
				239,
				[
				],
				[
				],
				[
					1,
					"",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[117, 338, 0, 27, 24, 0, 0, 1, 0, 0, 0, 0, []],
				93,
				240,
				[
				],
				[
				],
				[
					1,
					"",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[145, 243, 0, 356, 37, 0, 0, 1, 0, 0, 0, 0, []],
				96,
				241,
				[
				],
				[
				],
				[
					"Перекисью водорода",
					1,
					"14pt Calibri",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[145, 289, 0, 359, 37, 0, 0, 1, 0, 0, 0, 0, []],
				97,
				242,
				[
				],
				[
				],
				[
					"Настойкой боярышника",
					1,
					"14pt Calibri",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[145, 333, 0, 340, 40, 0, 0, 1, 0, 0, 0, 0, []],
				98,
				243,
				[
				],
				[
				],
				[
					"Пивом",
					1,
					"14pt Calibri",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[451, 464, 0, 72, 24, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				244,
				[
				],
				[
				],
				[
					0,
					"OK",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[602, 182.5, 0, 190, 156, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				138,
				245,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[3, 61, 0, 200, 45, 0, -0.628773, 1, 0, 0, 0, 0, []],
				31,
				247,
				[
				],
				[
				],
				[
					"Memes",
					0,
					"bold 12pt Segoe Script",
					"rgb(129,86,214)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[608, 192, 0, 143, 158, 0, 0, 1, 0.5, 0.564706, 0, 0, []],
				139,
				232,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[609, 208, 0, 183, 154, 0, 0, 1, 0.538117, 0.669456, 0, 0, []],
				140,
				248,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[117, 380, 0, 21, 22, 0, 0, 1, 0, 0, 0, 0, []],
				141,
				249,
				[
				],
				[
				],
				[
					1,
					"",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[117, 420, 0, 31, 23, 0, 0, 1, 0, 0, 0, 0, []],
				142,
				250,
				[
				],
				[
				],
				[
					1,
					"",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[117, 461, 0, 26, 23, 0, 0, 1, 0, 0, 0, 0, []],
				143,
				251,
				[
				],
				[
				],
				[
					1,
					"",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[145, 375, 0, 202, 38, 0, 0, 1, 0, 0, 0, 0, []],
				144,
				252,
				[
				],
				[
				],
				[
					"Давидян",
					1,
					"14pt Calibri",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[145, 414, 0, 200, 41, 0, 0, 1, 0, 0, 0, 0, []],
				145,
				253,
				[
				],
				[
				],
				[
					"Рафик",
					1,
					"14pt Calibri",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[145, 455, 0, 200, 39, 0, 0, 1, 0, 0, 0, 0, []],
				146,
				254,
				[
				],
				[
				],
				[
					"Алжир",
					1,
					"14pt Calibri",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[619, 188.225, 0, 143, 157, 0, 0, 1, 0.580994, 0.53931, 0, 0, []],
				147,
				255,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[614, 184, 0, 186, 149, 0, 0, 1, 0.557491, 0.516499, 0, 0, []],
				148,
				256,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[601.495, 182.5, 0, 187, 156, 0, 0, 1, 0.501558, 0.501558, 0, 0, []],
				149,
				257,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[621.445, 201.284, 0, 141, 155, 0, 0, 1, 0.605042, 0.619355, 0, 0, []],
				150,
				258,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[608, 214, 0, 156, 155, 0, 0, 1, 0.5, 0.70892, 0, 0, []],
				151,
				259,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[606, 189, 0, 162, 157, 0, 0, 1, 0.5, 0.550413, 0, 0, []],
				152,
				260,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[603, 182, 0, 183, 149, 0, 0, 1, 0.5, 0.5, 0, 0, []],
				153,
				261,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[604, 190.781, 0, 189, 157, 0, 0, 1, 0.506329, 0.556199, 0, 0, []],
				158,
				264,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[602.5, 182.007, 0, 189, 156, 0, 0, 1, 0.5, 0.500521, 0, 0, []],
				159,
				73,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[659.008, 157.985, 0, 188, 155, 0, 0, 1, 0.801515, 0.341534, 0, 0, []],
				160,
				265,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[602.003, 192, 0, 190, 157, 0, 0, 1, 0.501672, 0.561404, 0, 0, []],
				161,
				266,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[387, 266.5, 0, 124, 93, 0, 0, 1, 0.594657, 0.5, 0, 0, []],
				168,
				281,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[376, 360.87, 0, 124, 94, 0, 0, 1, 0.5, 0.514573, 0, 0, []],
				169,
				282,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[377, 453.712, 0, 124, 94, 0, 0, 1, 0.510135, 0.509009, 0, 0, []],
				170,
				283,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			3612,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[453.496, 270.536, 0, -214, 117, 0, 0, 1, 0.500898, 0.535565, 0, 0, []],
				7,
				234,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[447, 363, 0, 72, 24, 0, 0, 1, 0, 0, 0, 0, []],
				44,
				236,
				[
				],
				[
				],
				[
					0,
					"OK",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[385, 252, 0, 207, 42, 0, 0, 1, 0, 0, 0, 0, []],
				94,
				235,
				[
				],
				[
				],
				[
					"Курлык",
					1,
					"bold 12pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[477.494, 171.322, 0, 397, 187, 0, 0, 1, 0.500898, 0.535565, 0, 0, []],
				163,
				268,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[396, 133, 0, 238, 81, 0, 0, 1, 0, 0, 0, 0, []],
				6,
				267,
				[
				],
				[
				],
				[
					"Я вам пятёрку по мемам принёс",
					1,
					"12pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			3798,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[99.7689, 187.754, 0, 270, 401, 0, 0.233774, 1, 0.462264, 0.475655, 0, 0, []],
				137,
				233,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[593, 319, 0, 270, 401, 0, -0.0434282, 1, 0.462264, 0.475655, 0, 0, []],
				164,
				269,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[435.011, 162.335, 0, 270, 401, 0, 0.183134, 1, 0.462264, 0.475655, 0, 0, []],
				165,
				270,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[300.551, 225.369, 0, 325, 512, 0, -0.244957, 1, 0.462264, 0.475655, 0, 0, []],
				166,
				271,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[0, 0, 0, 705, 510, 0, 0, 1, 0, 0, 0, 0, []],
				167,
				272,
				[
				],
				[
				],
				[
					1,
					0
				]
			]
			],
			[			]
		]
,		[
			"Layer 4",
			4,
			4373,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[362, 275, 0, 400, 220, 0, 0, 1, 0.5, 0.64, 0, 0, []],
				67,
				273,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[489, 239, 0, 219, 60, 0, 0, 1, 0, 0, 0, 0, []],
				103,
				280,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					"2",
					1,
					"bold 19pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[493, 268, 0, 204, 49, 0, 0, 1, 0, 0, 0, 0, []],
				70,
				284,
				[
				],
				[
				],
				[
					"Что-то ты запутался",
					1,
					"bold 12pt Arial Narrow",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[489, 240, 0, 187, 55, 0, 0, 1, 0, 0, 0, 0, []],
				102,
				277,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					"5",
					1,
					"bold 19pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[493, 247, 0, 181, 62, 0, 0, 1, 0, 0, 0, 0, []],
				104,
				275,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					"4",
					1,
					"bold 19pt Arial",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[495, 179, 0, 119, 55, 0, 0, 1, 0, 0, 0, 0, []],
				130,
				274,
				[
				],
				[
				],
				[
					"4",
					1,
					"bold 19pt Arial",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[493, 210, 0, 119, 55, 0, 0, 1, 0, 0, 0, 0, []],
				130,
				276,
				[
				],
				[
				],
				[
					"4",
					1,
					"bold 19pt Arial",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[505, 272, 0, 193, 109, 0, 0, 1, 0, 0, 0, 0, []],
				131,
				246,
				[
				],
				[
				],
				[
					"Отлично!",
					1,
					"bold 11pt Arial",
					"rgb(0,255,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[493, 172, 0, 197, 52, 0, 0, 1, 0, 0, 0, 0, []],
				65,
				278,
				[
				],
				[
				],
				[
					"5",
					1,
					"bold 19pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[488, 204, 0, 197, 52, 0, 0, 1, 0, 0, 0, 0, []],
				65,
				279,
				[
				],
				[
				],
				[
					"5",
					1,
					"bold 19pt Arial Black",
					"rgb(255,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[0, 0, 0, 700, 500, 0, 0, 1, 0, 0, 0, 0, []],
				171,
				285,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					1,
					0
				]
			]
,			[
				[569, 454, 0, 108, 25, 0, 0, 1, 0, 0, 0, 0, []],
				172,
				286,
				[
				],
				[
				],
				[
					0,
					"Продолжить",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
,	[
		"концовка",
		700,
		500,
		false,
		"концовкащет",
		4549,
		[
		[
			"Layer 0",
			0,
			4550,
			true,
			[255, 255, 255],
			false,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[0, 0, 0, 700, 500, 0, 0, 1, 0, 0, 0, 0, []],
				171,
				287,
				[
				],
				[
				[
					0,
					0,
					0,
					1,
					1
				]
				],
				[
					0,
					0
				]
			]
,			[
				[587, -19, 0, 186, 128, 0, -1.15841, 1, 0, 0.5, 0, 0, []],
				181,
				299,
				[
				],
				[
				],
				[
					130,
					50,
					0,
					300,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[89, -26, 0, 186, 128, 0, -1.76822, 1, 0, 0.5, 0, 0, []],
				181,
				303,
				[
				],
				[
				],
				[
					130,
					50,
					0,
					300,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[22, -12, 0, 128, 128, 0, -1.62956, 1, 0, 0.5, 0, 0, []],
				182,
				300,
				[
				],
				[
				],
				[
					200,
					50,
					0,
					300,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[666, -16, 0, 128, 128, 0, -1.23415, 1, 0, 0.5, 0, 0, []],
				182,
				304,
				[
				],
				[
				],
				[
					200,
					50,
					0,
					300,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[120, -21, 0, 224, 114, 0, -1.15842, 1, 0, 0.5, 0, 0, []],
				180,
				149,
				[
				],
				[
				],
				[
					130,
					50,
					0,
					300,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[534, -8, 0, 224, 114, 0, -1.64473, 1, 0, 0.5, 0, 0, []],
				180,
				302,
				[
				],
				[
				],
				[
					130,
					50,
					0,
					300,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[201, -20, 0, 128, 128, 0, -1.62956, 1, 0, 0.5, 0, 0, []],
				182,
				369,
				[
				],
				[
				],
				[
					200,
					50,
					0,
					300,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[448, -17, 0, 128, 128, 0, -1.62956, 1, 0, 0.5, 0, 0, []],
				182,
				370,
				[
				],
				[
				],
				[
					200,
					50,
					0,
					300,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[260, -22, 0, 186, 128, 0, -1.57083, 1, 0, 0.5, 0, 0, []],
				181,
				371,
				[
				],
				[
				],
				[
					130,
					50,
					0,
					300,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[408, -16, 0, 186, 128, 0, -1.46596, 1, 0, 0.5, 0, 0, []],
				181,
				372,
				[
				],
				[
				],
				[
					130,
					50,
					0,
					300,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[344, -14, 0, 224, 114, 0, -1.64473, 1, 0, 0.5, 0, 0, []],
				180,
				373,
				[
				],
				[
				],
				[
					130,
					50,
					0,
					300,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 1",
			1,
			4574,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[180.155, 310.559, 0, 436, 342, 0, 0, 1, 0.449898, 0.446078, 0, 0, []],
				5,
				288,
				[
				],
				[
				[
					1,
					1,
					0,
					0,
					1
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[477.506, 230.678, 0, 388, 207, 0, 0, 1, 0.500898, 0.535565, 0, 0, []],
				7,
				289,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[560, 454, 0, 102, 24, 0, 0, 1, 0, 0, 0, 0, []],
				13,
				291,
				[
				],
				[
				],
				[
					0,
					"Продолжить",
					"",
					0,
					1,
					1,
					"",
					0
				]
			]
,			[
				[377, 191, 0, 249, 104, 0, 0, 1, 0, 0, 0, 0, []],
				1,
				290,
				[
				],
				[
				],
				[
					"Вот видишь, можешь когда хочешь!",
					1,
					"12pt Arial",
					"rgb(0,0,0)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[11, 17, 0, 7, 30, 0, 0, 1, 0, 0, 0, 0, []],
				173,
				292,
				[
				],
				[
				],
				[
					"П о б е д а ! Т е б я  н е  в ы г н а л и  и з  ш к о л ы .",
					0,
					"8pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[12, 45, 0, 6, 30, 0, 0, 1, 0, 0, 0, 0, []],
				174,
				293,
				[
				],
				[
				],
				[
					"Т ы  з а н я л а  п е р в о е  м е с т о  н а  о л и м п и а д е  ",
					0,
					"8pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[15, 72, 0, 0, 30, 0, 0, 1, 0, 0, 0, 0, []],
				175,
				294,
				[
				],
				[
				],
				[
					"п о  в с е й  р е с п у б л и к е   и   ",
					0,
					"8pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[13, 101, 0, 6, 30, 0, 0, 1, 0, 0, 0, 0, []],
				176,
				295,
				[
				],
				[
				],
				[
					"о д о л е л а  К а т ю Н о в о х а т ь к у .",
					0,
					"8pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[13, 130, 0, 11, 30, 0, 0, 1, 0, 0, 0, 0, []],
				177,
				296,
				[
				],
				[
				],
				[
					"П о с л е  ш к о л ы  т ы  с т а л а  ",
					0,
					"8pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[10, 160, 0, 5, 30, 0, 0, 1, 0, 0, 0, 0, []],
				178,
				297,
				[
				],
				[
				],
				[
					"н",
					0,
					"8pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[10, 190, 0, 8, 30, 0, 0, 1, 0, 0, 0, 0, []],
				179,
				298,
				[
				],
				[
				],
				[
					"С т р и п т и з а .",
					0,
					"8pt Arial",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[94, 80, 0, 141, 40, 0, -0.179855, 1, 0.5, 0.5, 0, 0, []],
				24,
				307,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					"ааеее рокк",
					1,
					"12pt Arial Narrow",
					"rgb(255,255,255)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[407, 397, 0, 141, 40, 0, 0.124354, 1, 0.5, 0.5, 0, 0, []],
				24,
				309,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					"ааеее рокк",
					1,
					"12pt Arial Narrow",
					"rgb(255,255,255)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[377, 43, 0, 141, 40, 0, 0.0798289, 1, 0.5, 0.5, 0, 0, []],
				24,
				311,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					"ааеее рокк",
					1,
					"12pt Arial Narrow",
					"rgb(255,255,255)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[56, 381, 0, 141, 40, 0, -1.08246, 1, 0.5, 0.5, 0, 0, []],
				24,
				312,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					"ааеее рокк",
					1,
					"12pt Arial Narrow",
					"rgb(255,255,255)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[388, 147, 0, 141, 40, 0, -0.223478, 1, 0.5, 0.5, 0, 0, []],
				24,
				315,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					"ааеее рокк",
					1,
					"12pt Arial Narrow",
					"rgb(255,255,255)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[605, 107, 0, 141, 40, 0, 0.218669, 1, 0.5, 0.5, 0, 0, []],
				24,
				317,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					"ааеее рокк",
					1,
					"12pt Arial Narrow",
					"rgb(255,255,255)",
					0,
					0,
					1,
					0,
					0
				]
			]
,			[
				[45.0043, 237.72, 0, 29, 40, 0, -0.197397, 1, 0.434783, 0.529412, 0, 0, []],
				185,
				308,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[221, 46, 0, 27, 42, 0, 0.148889, 1, 0.434783, 0.529412, 0, 0, []],
				185,
				310,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[655, 47, 0, 29, 40, 0, 0.305878, 1, 0.434783, 0.529412, 0, 0, []],
				185,
				313,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[394, 320, 0, 29, 40, 0, -0.197397, 1, 0.434783, 0.529412, 0, 0, []],
				185,
				314,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[642, 454, 0, 29, 40, 0, 0.257323, 1, 0.434783, 0.529412, 0, 0, []],
				185,
				316,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[41, 38, 0, 29, 40, 0, -0.197397, 1, 0.434783, 0.529412, 0, 0, []],
				185,
				318,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[334, 452, 0, 31, 45, 0, -0.197397, 1, 0.434783, 0.529412, 0, 0, []],
				185,
				319,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[54, 315, 0, 128, 128, 0, -1.6332, 1, 0, 0.5, 0, 0, []],
				211,
				344,
				[
				],
				[
				],
				[
					50,
					55,
					0,
					50,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[260, 220, 0, 128, 128, 0, -1.6332, 1, 0, 0.5, 0, 0, []],
				211,
				346,
				[
				],
				[
				],
				[
					50,
					55,
					0,
					50,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[452, 227, 0, 128, 128, 0, -1.6332, 1, 0, 0.5, 0, 0, []],
				211,
				347,
				[
				],
				[
				],
				[
					50,
					55,
					0,
					50,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[656, 327, 0, 128, 128, 0, -1.6332, 1, 0, 0.5, 0, 0, []],
				211,
				348,
				[
				],
				[
				],
				[
					50,
					55,
					0,
					50,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[152, 263, 0, 128, 128, 0, -1.65393, 1, 0, 0.5, 0, 0, []],
				212,
				345,
				[
				],
				[
				],
				[
					50,
					55,
					0,
					50,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
,			[
				[562, 272, 0, 128, 128, 0, -1.65393, 1, 0, 0.5, 0, 0, []],
				212,
				349,
				[
				],
				[
				],
				[
					50,
					60,
					0,
					50,
					32,
					100,
					0,
					0,
					0,
					0,
					0,
					0,
					-150,
					0,
					0,
					800,
					0,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 2",
			2,
			4858,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[335.011, -61, 0, 136, 153, 0, 0, 1, 0.494624, 0.608748, 0, 0, []],
				203,
				337,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[348, 128, 0, 42, 66, 0, 0, 1, 0.426009, 0.5, 0, 0, []],
				225,
				361,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[-167, 294, 0, 273, 417, 0, 0, 1, 0.414737, 0.484751, 0, 0, []],
				183,
				305,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[762, 274, 0, 181, 317, 0, 0, 1, 0.327161, 0.440972, 0, 0, []],
				184,
				306,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 3",
			3,
			4859,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-330, 582, 0, 219, 304, 0, 0, 1, 0.68985, 0.661783, 0, 0, []],
				186,
				320,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[176, 725.644, 0, 219, 291, 0, 0, 1, 0.681319, 0.719715, 0, 0, []],
				187,
				321,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[-411, 424, 0, 225, 303, 0, 0, 1, 0.687646, 0.547486, 0, 0, []],
				188,
				322,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[-245, 543, 0, 258, 357, 0, 0, 1, 0.646154, 0.687013, 0, 0, []],
				189,
				323,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[541.183, -89.2809, 0, 120, 317, 0, 0, 1, 0.585052, 0.911275, 0, 0, []],
				201,
				335,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[636.732, -101.667, 0, 131, 302, 0, 0, 1, 0.438144, 0.908503, 0, 0, []],
				202,
				336,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[405, 323, 0, 50, 50, 0, 0, 1, 0, 221.469, 0, 0, []],
				134,
				340,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[786, 184, 0, 153, 274, 0, 0, 1, 0.473333, 0.642633, 0, 0, []],
				204,
				338,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[360.874, -136.563, 0, 154, 283, 0, 0, 1, 0.512579, 0.608563, 0, 0, []],
				205,
				339,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[436, 739, 0, 173, 243, 0, 0, 1, 0.478873, 0.758389, 0, 0, []],
				191,
				325,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[453, -121, 0, 163, 317, 0, -0.0499719, 1, 0.516129, 0.698651, 0, 0, []],
				214,
				351,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[293, 202, 0, 139, 361, 0, 0, 1, 0.548043, 0.523013, 0, 0, []],
				216,
				353,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[78, 193, 0, 124, 320, 0, 0, 1, 0.609665, 0.582375, 0, 0, []],
				219,
				356,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[433.327, 267.179, 0, 176, 321, 0, 0, 1, 0.409742, 0.71791, 0, 0, []],
				213,
				350,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[101, -268, 0, 122, 319, 0, 0, 1, 0.608209, 0.581098, 0, 0, []],
				220,
				357,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[931, 201, 0, 223, 245, 0, 0.156599, 1, 0.986216, 0.220025, 0, 0, []],
				209,
				343,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[900, 439, 0, 201, 301, 0, 0.0555006, 1, 0.680135, 0.940877, 0, 0, []],
				200,
				301,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 4",
			4,
			5058,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[780, 315, 0, 149, 251, 0, -0.11066, 1, 0.543624, 0.270916, 0, 0, []],
				190,
				324,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[819, 404, 0, 225, 246, 0, 0, 1, 0.574225, 0.594976, 0, 0, []],
				192,
				326,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[994, 479, 0, 190, 299, 0, 0, 1, 0.596899, 0.763285, 0, 0, []],
				195,
				329,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[-213, -107, 0, 190, 299, 0, 0, 1, 0.500945, 0.796386, 0, 0, []],
				196,
				330,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[665, 707, 0, 221, 298, 0, 0, 1, 0.585209, 0.52638, 0, 0, []],
				193,
				327,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[844, 554, 0, 225, 307, 0, 0, 1, 0.576329, 0.466495, 0, 0, []],
				194,
				328,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[885, 165, 0, 184, 281, 0, 0.17219, 1, 0.00655022, 0.461295, 0, 0, []],
				208,
				334,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[619, 217, 0, 166, 314, 0, 0, 1, 0.5, 0.604381, 0, 0, []],
				215,
				352,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[207, 309.578, 0, 149, 305, 0, 0, 1, 0.572447, 0.661145, 0, 0, []],
				217,
				354,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[327, -169.753, 0, 152, 326, 0, 0, 1, 0.842262, 0.713147, 0, 0, []],
				218,
				355,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 5",
			5,
			5170,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-75, 357, 0, 161, 312, 0, 0, 1, 0.602339, 0.601695, 0, 0, []],
				197,
				331,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[537, 320.539, 0, 225, 376, 0, 0, 1, 0.29011, 0.538745, 0, 0, []],
				221,
				358,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[430, -173, 0, 178, 363, 0, 0, 1, 0.36478, 0.560322, 0, 0, []],
				222,
				359,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[524, -230, 0, 194, 339, 0, 0, 1, 0.29783, 0.537538, 0, 0, []],
				223,
				360,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[-142, 437, 0, 144, 292, 0, 0, 1, 0.559006, 0.606232, 0, 0, []],
				198,
				332,
				[
				],
				[
				],
				[
					0,
					0,
					1
				]
			]
,			[
				[-146, 544, 0, 183, 284, 0, 0, 1, 0.556237, 0.267835, 0, 0, []],
				207,
				342,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[200, 580, 0, 198, 280, 0, 0, 1, 0.482966, 0.302872, 0, 0, []],
				206,
				341,
				[
				],
				[
				[
					0,
					0,
					0,
					0,
					0
				]
				],
				[
					0,
					0,
					1
				]
			]
			],
			[			]
		]
,		[
			"Layer 6",
			6,
			5191,
			true,
			[255, 255, 255],
			true,
			1,
			1,
			1,
			false,
			1,
			0,
			0,
			[
			[
				[-164, 183, 0, 127, 285, 0, 0, 1, 0.368984, 0.522158, 0, 0, []],
				226,
				333,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[-307, 230, 0, 167, 308, 0, 0, 1, 0.44843, 0.455426, 0, 0, []],
				227,
				362,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[250, 180, 0, 253, 105, 0, 0, 1, 0, 0, 0, 0, []],
				228,
				363,
				[
				],
				[
				[
					0,
					1,
					2,
					1,
					1
				]
				],
				[
					"The End",
					1,
					"32pt Edwardian Script ITC",
					"rgb(255,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[356.505, 121.547, 0, 287, 225, 0, 0, 1, 0.501567, 0.496855, 0, 0, []],
				229,
				364,
				[
				],
				[
				[
					0,
					1,
					0,
					0,
					1
				]
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[169, 257, 0, 376, 51, 0, 0, 1, 0, 0, 0, 0, []],
				6,
				365,
				[
				],
				[
				],
				[
					"Понравилась игра? Поделись ссылкой с другом!",
					1,
					"12pt Gabriola",
					"rgb(233,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[15, 415, 0, 409, 40, 0, 0, 1, 0, 0, 0, 0, []],
				85,
				366,
				[
				],
				[
				],
				[
					"И напиши в личку автору \"ееее рокк/репп/инди-поп/...\"",
					1,
					"11pt Gabriola",
					"rgb(233,233,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
,			[
				[97, 451, 0, 190, 24, 0, 0, 1, 0, 0, 0, 0, []],
				230,
				367,
				[
				],
				[
				],
				[
					"https://vk.com/violanosenko",
					"",
					"",
					0,
					1,
					1,
					1,
					5,
					1,
					""
				]
			]
,			[
				[542, 262, 0, 355, 241, 0, 0, 1, 1.02236, 0.903955, 0, 0, []],
				231,
				368,
				[
				],
				[
				],
				[
					1,
					0,
					1
				]
			]
,			[
				[316, 297, 0, 224, 71, 0, 0, 1, 0, 0, 0, 0, []],
				232,
				138,
				[
				],
				[
				],
				[
					"Пока!",
					1,
					"bold 19pt Gabriola",
					"rgb(233,255,255)",
					0,
					0,
					0,
					0,
					0
				]
			]
			],
			[			]
		]
		],
		[
		],
		[]
	]
	],
	[
	[
		"sheet play",
		[
		[
			0,
			null,
			false,
			3967,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				3968
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5367
				,[
				[
					2,
					["salt-n-pepa - push it",true]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				4000
				,[
				[
					2,
					["148814__vetter-balin__school-ambience",true]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				3997
				,[
				[
					2,
					["salt-n-pepa - push it",true]
				]
,				[
					3,
					1
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						"pushit"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			10,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareTime,
				null,
				0,
				false,
				false,
				false,
				23
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				11
				,[
				[
					0,
					[
						1,
						0.4
					]
				]
				]
			]
			],
			[
			[
				1,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				18
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							24
						]
,[
							0,
							234
						]
,[
							0,
							236
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			12,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareTime,
				null,
				0,
				false,
				false,
				false,
				24
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						1,
						1.4
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				27
				,[
				[
					0,
					[
						1,
						0.7
					]
				]
				]
			]
			],
			[
			[
				1,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				19
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							34
						]
,[
							0,
							240
						]
,[
							0,
							27
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			14,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareTime,
				null,
				0,
				false,
				false,
				false,
				25
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						1,
						1.8
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				28
				,[
				[
					0,
					[
						1,
						0.9
					]
				]
				]
			]
			],
			[
			[
				1,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				20
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							116
						]
,[
							0,
							33
						]
,[
							0,
							206
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			16,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareTime,
				null,
				0,
				false,
				false,
				false,
				26
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						1,
						2.4
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				29
				,[
				[
					0,
					[
						1,
						0.9
					]
				]
				]
			]
			],
			[
			[
				1,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				21
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							250
						]
,[
							0,
							235
						]
,[
							0,
							21
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			30,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareTime,
				null,
				0,
				false,
				false,
				false,
				31
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						1,
						2.9
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				32
				,[
				[
					0,
					[
						1,
						0.7
					]
				]
				]
			]
			],
			[
			[
				1,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				33
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							253
						]
,[
							0,
							61
						]
,[
							0,
							67
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			38,
			[
			[
				2,
				cr.behaviors.Bullet.prototype.cnds.CompareTravelled,
				"Bullet",
				0,
				false,
				false,
				false,
				42
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						280
					]
				]
				]
			]
			],
			[
			[
				2,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				43
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				2,
				cr.plugins_.Text.prototype.acts.SetAngle,
				null,
				44
				,[
				[
					0,
					[
						0,
						-15
					]
				]
				]
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				48
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5368
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				3,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				55
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			50,
			[
			[
				3,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				51
			]
			],
			[
			[
				3,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				56
			]
			]
		]
,		[
			0,
			null,
			false,
			59,
			[
			[
				3,
				cr.plugins_.Button.prototype.cnds.OnDestroyed,
				null,
				1,
				false,
				false,
				false,
				60
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				61
				,[
				[
					0,
					[
						1,
						1.5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				62
				,[
				[
					6,
					"Вступление директриса"
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Stop,
				null,
				4004
				,[
				[
					1,
					[
						2,
						"pushit"
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.SetPaused,
				null,
				4003
				,[
				[
					1,
					[
						2,
						"школашум"
					]
				]
,				[
					3,
					1
				]
				]
			]
			]
		]
		]
	]
,	[
		"sheet derectress",
		[
		[
			1,
			"kto",
			0,
			0,
false,false,378
		]
,		[
			0,
			null,
			false,
			3960,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				3961
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5626
				,[
				[
					2,
					["148814__vetter-balin__school-ambience",true]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						"школашум"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3999
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				83
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5625
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				6,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				87
				,[
				[
					3,
					1
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				113
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			114,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				115
			]
,			[
				6,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				251
			]
			],
			[
			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				116
				,[
				[
					3,
					0
				]
				]
			]
,			[
				6,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				117
			]
,			[
				10,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				118
				,[
				[
					3,
					1
				]
				]
			]
,			[
				11,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				119
				,[
				[
					3,
					1
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				120
				,[
				[
					3,
					0
				]
				]
			]
,			[
				15,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				134
				,[
				[
					3,
					1
				]
				]
			]
,			[
				18,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				207
				,[
				[
					3,
					1
				]
				]
			]
,			[
				19,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				208
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			99,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.IsOverObject,
				null,
				0,
				false,
				false,
				false,
				100
				,[
				[
					4,
					11
				]
				]
			]
,			[
				11,
				cr.plugins_.Sprite.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				127
			]
			],
			[
			[
				12,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				104
				,[
				[
					3,
					1
				]
				]
			]
,			[
				14,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				123
				,[
				[
					3,
					1
				]
				]
			]
,			[
				14,
				cr.plugins_.Text.prototype.acts.SetPos,
				null,
				124
				,[
				[
					0,
					[
						4,
						[
							20,
							9,
							cr.plugins_.Mouse.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							5
						]
					]
				]
,				[
					0,
					[
						20,
						9,
						cr.plugins_.Mouse.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				16,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				140
				,[
				[
					3,
					0
				]
				]
			]
,			[
				20,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				163
				,[
				[
					3,
					0
				]
				]
			]
,			[
				17,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				141
				,[
				[
					3,
					0
				]
				]
			]
,			[
				30,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				397
				,[
				[
					3,
					0
				]
				]
			]
,			[
				31,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				398
				,[
				[
					3,
					0
				]
				]
			]
,			[
				86,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1975
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			132,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.IsOverObject,
				null,
				0,
				false,
				false,
				false,
				133
				,[
				[
					4,
					15
				]
				]
			]
,			[
				15,
				cr.plugins_.Sprite.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				136
			]
			],
			[
			[
				16,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				135
				,[
				[
					3,
					1
				]
				]
			]
,			[
				12,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				137
				,[
				[
					3,
					0
				]
				]
			]
,			[
				14,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				138
				,[
				[
					3,
					0
				]
				]
			]
,			[
				17,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				142
				,[
				[
					3,
					1
				]
				]
			]
,			[
				17,
				cr.plugins_.Text.prototype.acts.SetPos,
				null,
				393
				,[
				[
					0,
					[
						4,
						[
							20,
							9,
							cr.plugins_.Mouse.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							5
						]
					]
				]
,				[
					0,
					[
						20,
						9,
						cr.plugins_.Mouse.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				20,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				162
				,[
				[
					3,
					0
				]
				]
			]
,			[
				30,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				403
				,[
				[
					3,
					0
				]
				]
			]
,			[
				31,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				404
				,[
				[
					3,
					0
				]
				]
			]
,			[
				86,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1974
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			150,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.IsOverObject,
				null,
				0,
				false,
				false,
				false,
				151
				,[
				[
					4,
					19
				]
				]
			]
,			[
				19,
				cr.plugins_.Sprite.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				155
			]
			],
			[
			[
				20,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				154
				,[
				[
					3,
					1
				]
				]
			]
,			[
				12,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				157
				,[
				[
					3,
					0
				]
				]
			]
,			[
				16,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				159
				,[
				[
					3,
					0
				]
				]
			]
,			[
				86,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1973
				,[
				[
					3,
					0
				]
				]
			]
,			[
				30,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				392
				,[
				[
					3,
					1
				]
				]
			]
,			[
				30,
				cr.plugins_.Text.prototype.acts.SetPos,
				null,
				394
				,[
				[
					0,
					[
						4,
						[
							20,
							9,
							cr.plugins_.Mouse.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							5
						]
					]
				]
,				[
					0,
					[
						20,
						9,
						cr.plugins_.Mouse.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				17,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				401
				,[
				[
					3,
					0
				]
				]
			]
,			[
				31,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				402
				,[
				[
					3,
					0
				]
				]
			]
,			[
				14,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				472
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			152,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.IsOverObject,
				null,
				0,
				false,
				false,
				false,
				153
				,[
				[
					4,
					18
				]
				]
			]
,			[
				18,
				cr.plugins_.Sprite.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				156
			]
			],
			[
			[
				86,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1972
				,[
				[
					3,
					1
				]
				]
			]
,			[
				12,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				158
				,[
				[
					3,
					0
				]
				]
			]
,			[
				16,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				160
				,[
				[
					3,
					0
				]
				]
			]
,			[
				20,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				161
				,[
				[
					3,
					0
				]
				]
			]
,			[
				31,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				395
				,[
				[
					3,
					1
				]
				]
			]
,			[
				31,
				cr.plugins_.Text.prototype.acts.SetPos,
				null,
				396
				,[
				[
					0,
					[
						4,
						[
							20,
							9,
							cr.plugins_.Mouse.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							5
						]
					]
				]
,				[
					0,
					[
						20,
						9,
						cr.plugins_.Mouse.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				17,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				399
				,[
				[
					3,
					0
				]
				]
			]
,			[
				30,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				400
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			164,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				165
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					12
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				214
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				18,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				172
			]
,			[
				15,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				173
			]
,			[
				11,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				174
			]
,			[
				20,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				175
			]
,			[
				19,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				176
			]
,			[
				86,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				1990
			]
,			[
				12,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				177
			]
,			[
				16,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				178
			]
,			[
				10,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				212
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				215
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5628
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				237
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				22,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				233
				,[
				[
					3,
					1
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				5632
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				379
				,[
				[
					11,
					"kto"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				31,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				405
			]
,			[
				30,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				406
			]
,			[
				14,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				407
			]
,			[
				17,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				408
			]
			]
		]
,		[
			0,
			null,
			false,
			166,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				167
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					16
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				216
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				18,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				179
			]
,			[
				15,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				180
			]
,			[
				11,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				181
			]
,			[
				20,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				182
			]
,			[
				19,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				183
			]
,			[
				12,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				184
			]
,			[
				16,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				185
			]
,			[
				86,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				1989
			]
,			[
				10,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				209
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				217
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5629
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				236
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				23,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				232
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5633
				,[
				[
					11,
					"kto"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				5634
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				380
				,[
				[
					11,
					"kto"
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
,			[
				31,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				409
			]
,			[
				30,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				410
			]
,			[
				14,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				411
			]
,			[
				17,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				412
			]
			]
		]
,		[
			0,
			null,
			false,
			168,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				169
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					20
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				221
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				18,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				186
			]
,			[
				15,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				187
			]
,			[
				11,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				188
			]
,			[
				20,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				189
			]
,			[
				19,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				190
			]
,			[
				12,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				191
			]
,			[
				16,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				192
			]
,			[
				86,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				1988
			]
,			[
				10,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				210
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				222
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5630
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				235
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				24,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				231
				,[
				[
					3,
					1
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				5636
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				381
				,[
				[
					11,
					"kto"
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
,			[
				31,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				413
			]
,			[
				30,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				414
			]
,			[
				14,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				415
			]
,			[
				17,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				416
			]
			]
		]
,		[
			0,
			null,
			false,
			170,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				171
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					18
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				224
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				18,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				193
			]
,			[
				15,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				194
			]
,			[
				11,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				195
			]
,			[
				20,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				196
			]
,			[
				19,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				197
			]
,			[
				12,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				198
			]
,			[
				16,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				199
			]
,			[
				86,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				1987
			]
,			[
				10,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				211
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				223
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5649
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				234
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				25,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				230
				,[
				[
					3,
					1
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				5637
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				382
				,[
				[
					11,
					"kto"
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
,			[
				31,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				417
			]
,			[
				30,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				418
			]
,			[
				14,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				419
			]
,			[
				17,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				420
			]
			]
		]
,		[
			0,
			null,
			false,
			200,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				201
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					8
				]
				]
			]
,			[
				10,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				225
			]
			],
			[
			[
				21,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				204
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				205
				,[
				[
					0,
					[
						1,
						1.6
					]
				]
				]
			]
,			[
				21,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				206
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			245,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				267
			]
,			[
				25,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				275
			]
			],
			[
			[
				25,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				268
			]
,			[
				23,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				276
			]
,			[
				22,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				277
			]
,			[
				24,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				278
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				362
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				26,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				304
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			254,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				279
			]
,			[
				23,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				296
			]
			],
			[
			[
				25,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				284
			]
,			[
				23,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				285
			]
,			[
				22,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				286
			]
,			[
				24,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				287
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				361
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				26,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				308
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			280,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				281
			]
,			[
				22,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				297
			]
			],
			[
			[
				25,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				288
			]
,			[
				23,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				289
			]
,			[
				22,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				290
			]
,			[
				24,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				291
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				360
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				26,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				306
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			282,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				283
			]
,			[
				24,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				298
			]
			],
			[
			[
				25,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				292
			]
,			[
				23,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				293
			]
,			[
				22,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				294
			]
,			[
				24,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				295
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				358
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				26,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				307
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			344,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				345
			]
,			[
				26,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				346
			]
			],
			[
			[
				7,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				356
			]
,			[
				26,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				357
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				363
				,[
				[
					6,
					"этаж1"
				]
				]
			]
			]
		]
		]
	]
,	[
		"этаж1sheet",
		[
		[
			0,
			null,
			false,
			383,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				384
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				460
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				461
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				462
			]
			]
		]
,		[
			0,
			null,
			false,
			428,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				430
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				463
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				466
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				468
			]
			]
		]
,		[
			0,
			null,
			false,
			437,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				439
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				464
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				467
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				470
			]
			]
		]
,		[
			0,
			null,
			false,
			445,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				446
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				465
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				469
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				471
			]
			]
		]
,		[
			0,
			null,
			false,
			452,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				454
			]
			],
			[
			[
				29,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				456
				,[
				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				457
				,[
				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				458
				,[
				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				459
				,[
				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			473,
			[
			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
				null,
				0,
				false,
				false,
				false,
				474
				,[
				[
					9,
					37
				]
				]
			]
			],
			[
			[
				27,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				475
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				498
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				38,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				499
			]
			]
		]
,		[
			0,
			null,
			false,
			476,
			[
			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
				null,
				0,
				false,
				false,
				false,
				477
				,[
				[
					9,
					39
				]
				]
			]
			],
			[
			[
				27,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				478
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				500
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				38,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				501
			]
			]
		]
,		[
			0,
			null,
			false,
			486,
			[
			[
				27,
				cr.plugins_.Sprite.prototype.cnds.OnCollision,
				null,
				0,
				false,
				false,
				true,
				487
				,[
				[
					4,
					37
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				491
				,[
				[
					4,
					39
				]
,				[
					5,
					[
						0,
						2
					]
				]
,				[
					0,
					[
						0,
						606
					]
				]
,				[
					0,
					[
						0,
						53
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			505,
			[
			[
				27,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				506
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						4,
						[
							20,
							37,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							180
						]
					]
				]
				]
			]
			],
			[
			[
				39,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				507
			]
			]
		]
,		[
			0,
			null,
			false,
			509,
			[
			[
				27,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				510
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						5,
						[
							20,
							37,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							200
						]
					]
				]
				]
			]
			],
			[
			[
				39,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				511
			]
			]
		]
,		[
			0,
			null,
			false,
			512,
			[
			[
				39,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				513
			]
			],
			[
			[
				39,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				514
			]
,			[
				37,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				515
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				522
				,[
				[
					6,
					"Переписки"
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5641
				,[
				[
					2,
					["я не пьющий",true]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5642
				,[
				[
					2,
					["вк сообщенька",false]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5643
				,[
				[
					2,
					["я не пьющий",true]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						-500
					]
				]
,				[
					1,
					[
						2,
						"непью"
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"перпискищит",
		[
		[
			1,
			"sms",
			0,
			0,
false,false,779
		]
,		[
			0,
			null,
			false,
			528,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				529
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				530
				,[
				[
					4,
					13
				]
,				[
					5,
					[
						0,
						1
					]
				]
,				[
					0,
					[
						0,
						15
					]
				]
,				[
					0,
					[
						0,
						470
					]
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				531
				,[
				[
					3,
					1
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5639
				,[
				[
					2,
					["вк сообщенька",false]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5651
				,[
				[
					11,
					"sms"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			532,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				533
			]
			],
			[
			[
				40,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				534
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				537
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				41,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				536
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			538,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				539
			]
,			[
				41,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				541
			]
			],
			[
			[
				13,
				cr.plugins_.Button.prototype.acts.SetPos,
				null,
				540
				,[
				[
					0,
					[
						0,
						-50
					]
				]
,				[
					0,
					[
						0,
						-700
					]
				]
				]
			]
,			[
				41,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				542
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				543
				,[
				[
					3,
					0
				]
				]
			]
,			[
				5,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				544
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				550
				,[
				[
					4,
					42
				]
,				[
					5,
					[
						0,
						1
					]
				]
,				[
					0,
					[
						0,
						344
					]
				]
,				[
					0,
					[
						0,
						233
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				551
				,[
				[
					4,
					45
				]
,				[
					5,
					[
						0,
						1
					]
				]
,				[
					0,
					[
						0,
						202
					]
				]
,				[
					0,
					[
						0,
						205
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				552
				,[
				[
					4,
					43
				]
,				[
					5,
					[
						0,
						1
					]
				]
,				[
					0,
					[
						0,
						305
					]
				]
,				[
					0,
					[
						0,
						146
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				553
				,[
				[
					4,
					44
				]
,				[
					5,
					[
						0,
						1
					]
				]
,				[
					0,
					[
						0,
						310
					]
				]
,				[
					0,
					[
						0,
						290
					]
				]
				]
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1122
				,[
				[
					3,
					1
				]
				]
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				1123
				,[
				[
					3,
					1
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				1124
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			554,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				555
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Stop,
				null,
				3963
				,[
				[
					1,
					[
						2,
						"школашум"
					]
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				556
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				557
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				558
			]
,			[
				43,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				559
			]
,			[
				46,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				567
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				626
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				55,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				627
				,[
				[
					3,
					1
				]
				]
			]
,			[
				56,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				628
				,[
				[
					3,
					1
				]
				]
			]
,			[
				57,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				629
				,[
				[
					3,
					1
				]
				]
			]
,			[
				58,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				630
				,[
				[
					3,
					1
				]
				]
			]
,			[
				59,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				631
				,[
				[
					3,
					1
				]
				]
			]
,			[
				60,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				632
				,[
				[
					3,
					1
				]
				]
			]
,			[
				61,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				633
				,[
				[
					3,
					1
				]
				]
			]
,			[
				62,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				634
				,[
				[
					3,
					1
				]
				]
			]
,			[
				63,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				635
				,[
				[
					3,
					1
				]
				]
			]
,			[
				64,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				636
				,[
				[
					3,
					1
				]
				]
			]
,			[
				47,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				637
				,[
				[
					3,
					1
				]
				]
			]
,			[
				48,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				638
				,[
				[
					3,
					1
				]
				]
			]
,			[
				49,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				639
				,[
				[
					3,
					1
				]
				]
			]
,			[
				50,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				640
				,[
				[
					3,
					1
				]
				]
			]
,			[
				51,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				641
				,[
				[
					3,
					1
				]
				]
			]
,			[
				52,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				642
				,[
				[
					3,
					1
				]
				]
			]
,			[
				53,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				643
				,[
				[
					3,
					1
				]
				]
			]
,			[
				54,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				644
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3302
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			645,
			[
			[
				55,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				646
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				652
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				55,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				651
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			653,
			[
			[
				56,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				654
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				655
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				56,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				656
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			657,
			[
			[
				57,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				658
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				659
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				57,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				660
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			661,
			[
			[
				58,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				662
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				663
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				58,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				664
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			665,
			[
			[
				59,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				666
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				667
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				59,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				668
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			669,
			[
			[
				60,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				670
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				671
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				60,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				672
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			673,
			[
			[
				61,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				674
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				675
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				61,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				676
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			677,
			[
			[
				62,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				678
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				679
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				62,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				680
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			681,
			[
			[
				63,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				682
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				683
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				63,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				684
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			685,
			[
			[
				64,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				686
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				687
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				64,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				688
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			689,
			[
			[
				47,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				690
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				691
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				47,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				692
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			693,
			[
			[
				48,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				694
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				695
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				48,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				696
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			697,
			[
			[
				49,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				698
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				699
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				49,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				700
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			701,
			[
			[
				50,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				702
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				703
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				50,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				704
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			705,
			[
			[
				51,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				706
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				707
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				51,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				708
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			709,
			[
			[
				52,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				710
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				711
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				52,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				712
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			713,
			[
			[
				53,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				714
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				715
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				53,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				716
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			717,
			[
			[
				54,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				718
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				719
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				54,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				720
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							0
						]
,[
							0,
							360
						]
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			721,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				722
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					59
				]
				]
			]
,			[
				59,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				789
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5613
				,[
				[
					2,
					["вк сообщенька",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						50
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				59,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				723
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							250
						]
,[
							0,
							0
						]
,[
							0,
							0
						]
						]
					]
				]
				]
			]
,			[
				59,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				748
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				749
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				59,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				750
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				780
				,[
				[
					11,
					"sms"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			724,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				725
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					49
				]
				]
			]
,			[
				49,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				790
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5616
				,[
				[
					2,
					["вк сообщенька",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						50
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				49,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				726
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							250
						]
,[
							0,
							0
						]
,[
							0,
							0
						]
						]
					]
				]
				]
			]
,			[
				49,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				751
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				752
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				49,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				753
			]
			]
		]
,		[
			0,
			null,
			false,
			727,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				728
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					48
				]
				]
			]
,			[
				48,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				791
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5614
				,[
				[
					2,
					["вк сообщенька",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						50
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				48,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				729
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							250
						]
,[
							0,
							0
						]
,[
							0,
							0
						]
						]
					]
				]
				]
			]
,			[
				48,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				754
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				755
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				48,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				756
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				782
				,[
				[
					11,
					"sms"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			730,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				731
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					50
				]
				]
			]
,			[
				50,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				792
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5615
				,[
				[
					2,
					["вк сообщенька",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						50
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				50,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				732
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							250
						]
,[
							0,
							0
						]
,[
							0,
							0
						]
						]
					]
				]
				]
			]
,			[
				50,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				757
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				758
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				50,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				759
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				783
				,[
				[
					11,
					"sms"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			733,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				734
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					47
				]
				]
			]
,			[
				47,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				793
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5618
				,[
				[
					2,
					["вк сообщенька",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						50
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				47,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				735
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							250
						]
,[
							0,
							0
						]
,[
							0,
							0
						]
						]
					]
				]
				]
			]
,			[
				47,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				762
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				761
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				47,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				760
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				784
				,[
				[
					11,
					"sms"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			736,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				737
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					60
				]
				]
			]
,			[
				60,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				794
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5621
				,[
				[
					2,
					["вк сообщенька",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						50
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				60,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				738
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							250
						]
,[
							0,
							0
						]
,[
							0,
							0
						]
						]
					]
				]
				]
			]
,			[
				60,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				763
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				764
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				60,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				765
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				785
				,[
				[
					11,
					"sms"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			739,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				740
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					52
				]
				]
			]
,			[
				52,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				795
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5622
				,[
				[
					2,
					["вк сообщенька",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						50
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				52,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				741
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							250
						]
,[
							0,
							0
						]
,[
							0,
							0
						]
						]
					]
				]
				]
			]
,			[
				52,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				766
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				767
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				52,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				768
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				786
				,[
				[
					11,
					"sms"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			742,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				743
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					58
				]
				]
			]
,			[
				58,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				796
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5623
				,[
				[
					2,
					["вк сообщенька",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						50
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				58,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				744
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							250
						]
,[
							0,
							0
						]
,[
							0,
							0
						]
						]
					]
				]
				]
			]
,			[
				58,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				769
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				770
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				58,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				771
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				787
				,[
				[
					11,
					"sms"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			745,
			[
			[
				9,
				cr.plugins_.Mouse.prototype.cnds.OnObjectClicked,
				null,
				1,
				false,
				false,
				false,
				746
				,[
				[
					3,
					0
				]
,				[
					3,
					0
				]
,				[
					4,
					61
				]
				]
			]
,			[
				61,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				797
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5624
				,[
				[
					2,
					["вк сообщенька",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						50
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				61,
				cr.plugins_.Text.prototype.acts.SetFontColor,
				null,
				747
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.rgb
						,[
[
							0,
							250
						]
,[
							0,
							0
						]
,[
							0,
							0
						]
						]
					]
				]
				]
			]
,			[
				61,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				772
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				773
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				61,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				774
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				788
				,[
				[
					11,
					"sms"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			775,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				776
				,[
				[
					11,
					"sms"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						8
					]
				]
				]
			]
			],
			[
			[
				55,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				798
			]
,			[
				56,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				802
			]
,			[
				57,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				803
			]
,			[
				62,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				808
			]
,			[
				63,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				809
			]
,			[
				64,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				810
			]
,			[
				51,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				815
			]
,			[
				53,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				817
			]
,			[
				54,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				818
			]
,			[
				49,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				845
			]
,			[
				61,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				930
			]
,			[
				58,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				931
			]
,			[
				52,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				932
			]
,			[
				60,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				933
			]
,			[
				47,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				934
			]
,			[
				50,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				935
			]
,			[
				48,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				936
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				819
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				46,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				820
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				821
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				822
				,[
				[
					4,
					5
				]
,				[
					5,
					[
						0,
						1
					]
				]
,				[
					0,
					[
						0,
						450
					]
				]
,				[
					0,
					[
						0,
						295
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				823
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				825
				,[
				[
					11,
					"sms"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				826
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				830
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				65,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				831
				,[
				[
					3,
					1
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetPos,
				null,
				832
				,[
				[
					0,
					[
						0,
						3
					]
				]
,				[
					0,
					[
						0,
						470
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Stop,
				null,
				3305
				,[
				[
					1,
					[
						2,
						"вк"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			833,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				834
			]
,			[
				65,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				835
			]
			],
			[
			[
				65,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				836
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				838
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				66,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				837
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			839,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				840
			]
,			[
				66,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				842
			]
			],
			[
			[
				66,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				843
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				844
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				853
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				67,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				854
				,[
				[
					3,
					1
				]
				]
			]
,			[
				68,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				856
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			857,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				858
			]
,			[
				67,
				cr.plugins_.Sprite.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				859
			]
			],
			[
			[
				67,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				860
			]
,			[
				68,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				861
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				862
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				863
				,[
				[
					3,
					1
				]
				]
			]
,			[
				69,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				865
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			866,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				867
			]
,			[
				69,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				868
			]
			],
			[
			[
				69,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				869
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				871
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				872
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			873,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				874
			]
,			[
				70,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				875
			]
			],
			[
			[
				7,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				876
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				877
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				878
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				5,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				879
			]
,			[
				5,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				880
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				881
				,[
				[
					6,
					"столовка"
				]
				]
			]
			]
		]
		]
	]
,	[
		"столовкащет",
		[
		[
			0,
			null,
			false,
			894,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				895
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				896
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				897
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				898
			]
			]
		]
,		[
			0,
			null,
			false,
			899,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				900
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				901
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				902
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				903
			]
			]
		]
,		[
			0,
			null,
			false,
			904,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				905
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				906
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				907
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				908
			]
			]
		]
,		[
			0,
			null,
			false,
			909,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				910
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
			],
			[
			[
				29,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				911
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				912
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				913
			]
			]
		]
,		[
			0,
			null,
			false,
			914,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				915
			]
			],
			[
			[
				29,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				916
				,[
				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				917
				,[
				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				918
				,[
				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				919
				,[
				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						27,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			920,
			[
			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
				null,
				0,
				false,
				false,
				false,
				921
				,[
				[
					9,
					37
				]
				]
			]
			],
			[
			[
				27,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				922
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				923
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			925,
			[
			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
				null,
				0,
				false,
				false,
				false,
				926
				,[
				[
					9,
					39
				]
				]
			]
			],
			[
			[
				27,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				927
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				928
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			939,
			[
			[
				27,
				cr.plugins_.Sprite.prototype.cnds.OnCollision,
				null,
				0,
				false,
				false,
				true,
				940
				,[
				[
					4,
					73
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5673
				,[
				[
					11,
					"весшуши"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						35
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				941
				,[
				[
					4,
					39
				]
,				[
					5,
					[
						0,
						2
					]
				]
,				[
					0,
					[
						0,
						540
					]
				]
,				[
					0,
					[
						0,
						100
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			942,
			[
			[
				27,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				943
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						5,
						[
							20,
							73,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							200
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5674
				,[
				[
					11,
					"весшуши"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						35
					]
				]
				]
			]
			],
			[
			[
				39,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				944
			]
			]
		]
,		[
			0,
			null,
			false,
			945,
			[
			[
				39,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				946
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5675
				,[
				[
					11,
					"весшуши"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						35
					]
				]
				]
			]
			],
			[
			[
				39,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				947
			]
,			[
				73,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				949
			]
,			[
				27,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				950
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				951
			]
,			[
				29,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				952
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				953
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				954
			]
,			[
				73,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				955
				,[
				[
					3,
					1
				]
				]
			]
,			[
				73,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				956
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				959
				,[
				[
					3,
					1
				]
				]
			]
,			[
				74,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				960
				,[
				[
					3,
					1
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				961
				,[
				[
					3,
					1
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.SetPaused,
				null,
				3313
				,[
				[
					1,
					[
						2,
						"школашум"
					]
				]
,				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			962,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				963
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5676
				,[
				[
					11,
					"весшуши"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						35
					]
				]
				]
			]
			],
			[
			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				976
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				964
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				74,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				977
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				968
				,[
				[
					3,
					0
				]
				]
			]
,			[
				73,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				969
				,[
				[
					3,
					0
				]
				]
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				970
				,[
				[
					3,
					1
				]
				]
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				971
				,[
				[
					3,
					1
				]
				]
			]
,			[
				43,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				978
				,[
				[
					3,
					1
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				972
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			973,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				974
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				1949
				,[
				[
					11,
					"весшуши"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						35
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				975
				,[
				[
					6,
					"жратва"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1953,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				1954
				,[
				[
					11,
					"весшуши"
				]
,				[
					8,
					4
				]
,				[
					7,
					[
						0,
						35
					]
				]
				]
			]
			],
			[
			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				1958
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				1959
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				1960
			]
,			[
				29,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				1961
			]
,			[
				27,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				1962
			]
,			[
				73,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1955
				,[
				[
					3,
					1
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1956
				,[
				[
					3,
					1
				]
				]
			]
,			[
				17,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				1963
				,[
				[
					3,
					1
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				1964
				,[
				[
					3,
					1
				]
				]
			]
,			[
				43,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				2046
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				2047
			]
			]
		]
,		[
			0,
			null,
			false,
			1965,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				1966
			]
,			[
				17,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				1967
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				2050
				,[
				[
					6,
					"математика"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3307,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				3308
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3321
				,[
				[
					11,
					"весшуши"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						35
					]
				]
				]
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				3322
				,[
				[
					2,
					["148814__vetter-balin__school-ambience",true]
				]
,				[
					3,
					1
				]
,				[
					0,
					[
						0,
						50
					]
				]
,				[
					1,
					[
						2,
						"школашум"
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"жратващет",
		[
		[
			1,
			"колвоигр",
			0,
			0,
false,false,3062
		]
,		[
			1,
			"котлетки",
			0,
			0,
false,false,2014
		]
,		[
			1,
			"весшуши",
			0,
			35,
false,false,1875
		]
,		[
			0,
			null,
			false,
			1009,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				1010
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5653
				,[
				[
					11,
					"котлетки"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5654
				,[
				[
					11,
					"весшуши"
				]
,				[
					7,
					[
						0,
						35
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5369
				,[
				[
					2,
					["17d020b1aaf07d75cbcca86df57dd59e",true]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5370
				,[
				[
					2,
					["котлеткихаха",false]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5371
				,[
				[
					2,
					["поторопись.ogg",false]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5372
				,[
				[
					2,
					["спюрешкоц.ogg",false]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5373
				,[
				[
					2,
					["Загадки - Неправильный ответ (mp3cut.net)",false]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5604
				,[
				[
					2,
					["wavlibrarynet_sound14304 (mp3cut.net)",false]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5605
				,[
				[
					2,
					["100 к 1 неправильный ответ - Без названия (mp3cut.net)",false]
				]
				]
			]
,			[
				76,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1011
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1568
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				77,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1569
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				77,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1570
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1585
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				81,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1571
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				81,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1572
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1586
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				79,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1577
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				79,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1578
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1590
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				83,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1581
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				83,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1582
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1588
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				82,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1573
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				82,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1574
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1587
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				78,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1575
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				78,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1576
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1589
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				80,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1579
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				80,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1580
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1591
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				84,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1583
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				84,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1584
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			985,
			[
			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
				null,
				0,
				false,
				false,
				false,
				986
				,[
				[
					9,
					37
				]
				]
			]
			],
			[
			[
				75,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				987
				,[
				[
					3,
					0
				]
				]
			]
,			[
				75,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				993
				,[
				[
					0,
					[
						0,
						290
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			989,
			[
			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
				null,
				0,
				false,
				false,
				false,
				990
				,[
				[
					9,
					39
				]
				]
			]
			],
			[
			[
				75,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				991
				,[
				[
					3,
					1
				]
				]
			]
,			[
				75,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				994
				,[
				[
					0,
					[
						0,
						70
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1979,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				1980
			]
			],
			[
			[
				87,
				cr.plugins_.Sprite.prototype.acts.SetPosToObject,
				null,
				1981
				,[
				[
					4,
					75
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			997,
			[
			[
				75,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				998
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
				null,
				0,
				false,
				false,
				false,
				1000
				,[
				[
					9,
					37
				]
				]
			]
			],
			[
			[
				75,
				cr.behaviors.EightDir.prototype.acts.SetSpeed,
				"8Direction",
				1001
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1002,
			[
			[
				75,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1003
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						700
					]
				]
				]
			]
,			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
				null,
				0,
				false,
				false,
				false,
				1004
				,[
				[
					9,
					39
				]
				]
			]
			],
			[
			[
				75,
				cr.behaviors.EightDir.prototype.acts.SetSpeed,
				"8Direction",
				1005
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1019,
			[
			[
				76,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1020
				,[
				[
					8,
					4
				]
,				[
					0,
					[
						0,
						500
					]
				]
				]
			]
			],
			[
			[
				76,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1614
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				76,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1613
				,[
				[
					3,
					0
				]
				]
			]
,			[
				76,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1022
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1024
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				76,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1615
				,[
				[
					3,
					1
				]
				]
			]
,			[
				76,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1617
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				76,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1616
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1536,
			[
			[
				84,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1537
				,[
				[
					8,
					4
				]
,				[
					0,
					[
						0,
						500
					]
				]
				]
			]
			],
			[
			[
				84,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1618
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				84,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1619
				,[
				[
					3,
					0
				]
				]
			]
,			[
				84,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1539
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1592
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				84,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1620
				,[
				[
					3,
					1
				]
				]
			]
,			[
				84,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1621
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				84,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1622
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1540,
			[
			[
				81,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1541
				,[
				[
					8,
					4
				]
,				[
					0,
					[
						0,
						500
					]
				]
				]
			]
			],
			[
			[
				81,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1623
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				81,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1624
				,[
				[
					3,
					0
				]
				]
			]
,			[
				81,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1543
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1593
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				81,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1625
				,[
				[
					3,
					1
				]
				]
			]
,			[
				81,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1626
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				81,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1627
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1544,
			[
			[
				82,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1545
				,[
				[
					8,
					4
				]
,				[
					0,
					[
						0,
						500
					]
				]
				]
			]
			],
			[
			[
				82,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1628
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				82,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1629
				,[
				[
					3,
					0
				]
				]
			]
,			[
				82,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1547
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1594
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				82,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1630
				,[
				[
					3,
					1
				]
				]
			]
,			[
				82,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1631
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				82,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1632
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1548,
			[
			[
				83,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1549
				,[
				[
					8,
					4
				]
,				[
					0,
					[
						0,
						500
					]
				]
				]
			]
			],
			[
			[
				83,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1633
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				83,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1634
				,[
				[
					3,
					0
				]
				]
			]
,			[
				83,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1551
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1595
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				83,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1635
				,[
				[
					3,
					1
				]
				]
			]
,			[
				83,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1636
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				83,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1637
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1552,
			[
			[
				79,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1553
				,[
				[
					8,
					4
				]
,				[
					0,
					[
						0,
						500
					]
				]
				]
			]
			],
			[
			[
				79,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1638
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				79,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1639
				,[
				[
					3,
					0
				]
				]
			]
,			[
				79,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1555
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1596
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				79,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1640
				,[
				[
					3,
					1
				]
				]
			]
,			[
				79,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1641
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				79,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1642
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1556,
			[
			[
				80,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1557
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						500
					]
				]
				]
			]
			],
			[
			[
				80,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1643
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				80,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1644
				,[
				[
					3,
					0
				]
				]
			]
,			[
				80,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1559
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1597
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				80,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1645
				,[
				[
					3,
					1
				]
				]
			]
,			[
				80,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1646
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				80,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1647
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1560,
			[
			[
				78,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1561
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						500
					]
				]
				]
			]
			],
			[
			[
				78,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1648
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				78,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1649
				,[
				[
					3,
					0
				]
				]
			]
,			[
				78,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1563
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1598
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				78,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1650
				,[
				[
					3,
					1
				]
				]
			]
,			[
				78,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1651
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				78,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1652
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1564,
			[
			[
				77,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1565
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						500
					]
				]
				]
			]
			],
			[
			[
				77,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1653
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				77,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1654
				,[
				[
					3,
					0
				]
				]
			]
,			[
				77,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1567
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1599
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				77,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1655
				,[
				[
					3,
					1
				]
				]
			]
,			[
				77,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1656
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				77,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1657
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1026,
			[
			[
				76,
				cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
				null,
				0,
				false,
				false,
				false,
				1027
				,[
				[
					4,
					75
				]
				]
			]
,			[
				76,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1032
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						450
					]
				]
				]
			]
,			[
				76,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1049
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						5,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							35
						]
					]
				]
				]
			]
,			[
				76,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1050
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						4,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							35
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				1884
				,[
				[
					11,
					"весшуши"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5606
				,[
				[
					2,
					["wavlibrarynet_sound14304 (mp3cut.net)",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						2030
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				76,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1849
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				76,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1850
				,[
				[
					3,
					0
				]
				]
			]
,			[
				76,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1851
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1852
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				76,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1853
				,[
				[
					3,
					1
				]
				]
			]
,			[
				76,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1854
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				76,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1855
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1730,
			[
			[
				77,
				cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
				null,
				0,
				false,
				false,
				false,
				1731
				,[
				[
					4,
					75
				]
				]
			]
,			[
				77,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1732
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						450
					]
				]
				]
			]
,			[
				77,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1733
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						5,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							50
						]
					]
				]
				]
			]
,			[
				77,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1734
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						4,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							50
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				1885
				,[
				[
					11,
					"весшуши"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5607
				,[
				[
					2,
					["wavlibrarynet_sound14304 (mp3cut.net)",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						30
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				77,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1842
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				77,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1843
				,[
				[
					3,
					0
				]
				]
			]
,			[
				77,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1844
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1845
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				77,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1846
				,[
				[
					3,
					1
				]
				]
			]
,			[
				77,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1847
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				77,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1848
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1739,
			[
			[
				83,
				cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
				null,
				0,
				false,
				false,
				false,
				1740
				,[
				[
					4,
					75
				]
				]
			]
,			[
				83,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1741
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						445
					]
				]
				]
			]
,			[
				83,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1742
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						5,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							45
						]
					]
				]
				]
			]
,			[
				83,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1743
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						4,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							45
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				1886
				,[
				[
					11,
					"весшуши"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				83,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1814
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				83,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1815
				,[
				[
					3,
					0
				]
				]
			]
,			[
				83,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1816
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.SetPaused,
				null,
				3973
				,[
				[
					1,
					[
						2,
						"марио"
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				87,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1983
				,[
				[
					3,
					1
				]
				]
			]
,			[
				75,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1984
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1817
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.SetPaused,
				null,
				3974
				,[
				[
					1,
					[
						2,
						"марио"
					]
				]
,				[
					3,
					1
				]
				]
			]
,			[
				87,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1985
				,[
				[
					3,
					0
				]
				]
			]
,			[
				75,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1986
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2037
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				83,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1818
				,[
				[
					3,
					1
				]
				]
			]
,			[
				83,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1819
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				83,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1820
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1996,
			[
			[
				87,
				cr.plugins_.Sprite.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				2036
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2016
				,[
				[
					11,
					"котлетки"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				2013
				,[
				[
					2,
					["спюрешкоц.ogg",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						500
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2015
				,[
				[
					11,
					"котлетки"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2040
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2043
				,[
				[
					11,
					"котлетки"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2017,
			[
			[
				87,
				cr.plugins_.Sprite.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				2038
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2022
				,[
				[
					11,
					"котлетки"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				2023
				,[
				[
					2,
					["котлеткихаха",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						500
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2024
				,[
				[
					11,
					"котлетки"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2041
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2044
				,[
				[
					11,
					"котлетки"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2025,
			[
			[
				87,
				cr.plugins_.Sprite.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				2039
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2030
				,[
				[
					11,
					"котлетки"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				2031
				,[
				[
					2,
					["поторопись.ogg",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						500
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2045
				,[
				[
					11,
					"котлетки"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2042
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2032
				,[
				[
					11,
					"котлетки"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2033,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2034
				,[
				[
					11,
					"котлетки"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						6
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2035
				,[
				[
					11,
					"котлетки"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1748,
			[
			[
				81,
				cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
				null,
				0,
				false,
				false,
				false,
				1749
				,[
				[
					4,
					75
				]
				]
			]
,			[
				81,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1750
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						450
					]
				]
				]
			]
,			[
				81,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1751
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						5,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							30
						]
					]
				]
				]
			]
,			[
				81,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1752
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						4,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							30
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				1887
				,[
				[
					11,
					"весшуши"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5608
				,[
				[
					2,
					["wavlibrarynet_sound14304 (mp3cut.net)",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						30
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				81,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1800
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				81,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1801
				,[
				[
					3,
					0
				]
				]
			]
,			[
				81,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1802
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1803
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				81,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1804
				,[
				[
					3,
					1
				]
				]
			]
,			[
				81,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1805
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				81,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1806
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1757,
			[
			[
				82,
				cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
				null,
				0,
				false,
				false,
				false,
				1758
				,[
				[
					4,
					75
				]
				]
			]
,			[
				82,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1759
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						450
					]
				]
				]
			]
,			[
				82,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1760
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						5,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							25
						]
					]
				]
				]
			]
,			[
				82,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1761
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						4,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							25
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				1888
				,[
				[
					11,
					"весшуши"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5609
				,[
				[
					2,
					["wavlibrarynet_sound14304 (mp3cut.net)",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						30
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				82,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1807
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				82,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1808
				,[
				[
					3,
					0
				]
				]
			]
,			[
				82,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1809
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1810
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				82,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1811
				,[
				[
					3,
					1
				]
				]
			]
,			[
				82,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1812
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				82,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1813
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1766,
			[
			[
				79,
				cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
				null,
				0,
				false,
				false,
				false,
				1767
				,[
				[
					4,
					75
				]
				]
			]
,			[
				79,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1768
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						450
					]
				]
				]
			]
,			[
				79,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1769
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						5,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							20
						]
					]
				]
				]
			]
,			[
				79,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1770
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						4,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							20
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				1891
				,[
				[
					11,
					"весшуши"
				]
,				[
					7,
					[
						0,
						-4
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5612
				,[
				[
					2,
					["100 к 1 неправильный ответ - Без названия (mp3cut.net)",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						20
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				79,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1828
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				79,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1829
				,[
				[
					3,
					0
				]
				]
			]
,			[
				79,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1830
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1831
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				79,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1832
				,[
				[
					3,
					1
				]
				]
			]
,			[
				79,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1833
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				79,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1834
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1775,
			[
			[
				80,
				cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
				null,
				0,
				false,
				false,
				false,
				1776
				,[
				[
					4,
					75
				]
				]
			]
,			[
				80,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1777
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						450
					]
				]
				]
			]
,			[
				80,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1778
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						5,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							25
						]
					]
				]
				]
			]
,			[
				80,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1779
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						4,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							25
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				1890
				,[
				[
					11,
					"весшуши"
				]
,				[
					7,
					[
						0,
						-4
					]
				]
				]
			]
,			[
				80,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1835
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				80,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1836
				,[
				[
					3,
					0
				]
				]
			]
,			[
				80,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1837
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1838
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				80,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1839
				,[
				[
					3,
					1
				]
				]
			]
,			[
				80,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1840
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				80,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1841
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1784,
			[
			[
				84,
				cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
				null,
				0,
				false,
				false,
				false,
				1785
				,[
				[
					4,
					75
				]
				]
			]
,			[
				84,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1786
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						450
					]
				]
				]
			]
,			[
				84,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1787
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						5,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							25
						]
					]
				]
				]
			]
,			[
				84,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1788
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						4,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							25
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				1889
				,[
				[
					11,
					"весшуши"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5610
				,[
				[
					2,
					["wavlibrarynet_sound14304 (mp3cut.net)",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						30
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				84,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1793
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				84,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1794
				,[
				[
					3,
					0
				]
				]
			]
,			[
				84,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1795
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1796
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				84,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1797
				,[
				[
					3,
					1
				]
				]
			]
,			[
				84,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1798
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				84,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1799
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1856,
			[
			[
				78,
				cr.plugins_.Sprite.prototype.cnds.IsOverlapping,
				null,
				0,
				false,
				false,
				false,
				1857
				,[
				[
					4,
					75
				]
				]
			]
,			[
				78,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				1858
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						450
					]
				]
				]
			]
,			[
				78,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1859
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						5,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							25
						]
					]
				]
				]
			]
,			[
				78,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				1860
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						4,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							25
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				1892
				,[
				[
					11,
					"весшуши"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5611
				,[
				[
					2,
					["wavlibrarynet_sound14304 (mp3cut.net)",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						30
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				78,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1868
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				78,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1869
				,[
				[
					3,
					0
				]
				]
			]
,			[
				78,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				1870
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							650
						]
						]
					]
				]
,				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1871
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				78,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1872
				,[
				[
					3,
					1
				]
				]
			]
,			[
				78,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				1873
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				78,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				1874
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1877,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				1878
			]
			],
			[
			[
				85,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				1879
				,[
				[
					7,
					[
						23,
						"весшуши"
					]
				]
				]
			]
,			[
				85,
				cr.plugins_.Text.prototype.acts.AppendText,
				null,
				1880
				,[
				[
					7,
					[
						2,
						" kg"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1919,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				1920
				,[
				[
					11,
					"весшуши"
				]
,				[
					8,
					3
				]
,				[
					7,
					[
						0,
						25
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5375
				,[
				[
					11,
					"весшуши"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						15
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3067
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.SetPaused,
				null,
				3975
				,[
				[
					1,
					[
						2,
						"марио"
					]
				]
,				[
					3,
					0
				]
				]
			]
,			[
				75,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				1921
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1922
				,[
				[
					3,
					1
				]
				]
			]
,			[
				43,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				1923
				,[
				[
					3,
					1
				]
				]
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				1924
				,[
				[
					3,
					1
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				1925
				,[
				[
					3,
					1
				]
				]
			]
,			[
				125,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3068
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5374
				,[
				[
					11,
					"весшуши"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				4813
				,[
				[
					2,
					["Загадки - Неправильный ответ (mp3cut.net)",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						"провал"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1926,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				1927
			]
,			[
				45,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				1952
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5664
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1930
				,[
				[
					3,
					0
				]
				]
			]
,			[
				43,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				1931
				,[
				[
					3,
					0
				]
				]
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				1932
				,[
				[
					3,
					0
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				1933
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.RestartLayout,
				null,
				1928
			]
			]
		]
,		[
			0,
			null,
			false,
			1935,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				1936
				,[
				[
					11,
					"весшуши"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						55
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				1940
			]
			],
			[
			[
				75,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				2048
				,[
				[
					3,
					1
				]
				]
			]
,			[
				75,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				2049
				,[
				[
					0,
					[
						0,
						70
					]
				]
				]
			]
,			[
				75,
				cr.plugins_.Sprite.prototype.acts.MoveToLayer,
				null,
				1937
				,[
				[
					5,
					[
						0,
						2
					]
				]
				]
			]
,			[
				75,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				1939
				,[
				[
					0,
					[
						4,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.Width,
							false,
							null
						]
						,[
							0,
							1
						]
					]
				]
,				[
					0,
					[
						4,
						[
							20,
							75,
							cr.plugins_.Sprite.prototype.exps.Height,
							false,
							null
						]
						,[
							0,
							2
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				1941
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				1942
				,[
				[
					3,
					1
				]
				]
			]
,			[
				6,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				1943
				,[
				[
					3,
					1
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				1944
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			1945,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				1946
			]
,			[
				6,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				1947
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				1948
				,[
				[
					6,
					"столовка"
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.SetPaused,
				null,
				5581
				,[
				[
					1,
					[
						2,
						"марио"
					]
				]
,				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3063,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3064
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				3065
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				3066
				,[
				[
					11,
					"весшуши"
				]
,				[
					7,
					[
						0,
						-2
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3964,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				3965
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				3966
				,[
				[
					2,
					["17d020b1aaf07d75cbcca86df57dd59e",true]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						-5
					]
				]
,				[
					1,
					[
						2,
						"марио"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3977,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutEnd,
				null,
				1,
				false,
				false,
				false,
				3978
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Stop,
				null,
				3979
				,[
				[
					1,
					[
						2,
						"марио"
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"математика",
		[
		[
			1,
			"отметказаматем",
			0,
			0,
false,false,2649
		]
,		[
			1,
			"ошибочки",
			0,
			0,
false,false,2371
		]
,		[
			1,
			"ответик",
			0,
			1,
false,false,2128
		]
,		[
			0,
			null,
			false,
			2125,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				2126
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5655
				,[
				[
					11,
					"отметказаматем"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5656
				,[
				[
					11,
					"ошибочки"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5657
				,[
				[
					11,
					"ответик"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Stop,
				null,
				5582
				,[
				[
					1,
					[
						2,
						"марио"
					]
				]
				]
			]
,			[
				47,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				2127
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5396
				,[
				[
					2,
					["100 к 1 неправильный ответ - Без названия (mp3cut.net)",false]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5397
				,[
				[
					2,
					["7ddbcb6823f615fa82aa08c7dbbebc65 (mp3cut.net)2",false]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2091,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				2092
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2093
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				2094
				,[
				[
					3,
					1
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2095
				,[
				[
					3,
					1
				]
				]
			]
,			[
				65,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2096
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2057,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				2058
			]
,			[
				65,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				2060
			]
			],
			[
			[
				65,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				2059
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2061
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				66,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2070
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2062,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				2063
			]
,			[
				66,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				2064
			]
			],
			[
			[
				66,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				2089
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				2074
				,[
				[
					3,
					0
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2097
				,[
				[
					3,
					0
				]
				]
			]
,			[
				47,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2080
				,[
				[
					3,
					1
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				2081
				,[
				[
					3,
					1
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				2082
				,[
				[
					3,
					1
				]
				]
			]
,			[
				93,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				2083
				,[
				[
					3,
					1
				]
				]
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2085
				,[
				[
					3,
					1
				]
				]
			]
,			[
				31,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2084
				,[
				[
					3,
					1
				]
				]
			]
,			[
				17,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2086
				,[
				[
					3,
					1
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				2149
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			5398,
			[
			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				5400
			]
,			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				5415
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				5413,
				[
				[
					44,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					5416
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5417
					,[
					[
						11,
						"ответик"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					5412
					,[
					[
						11,
						"ошибочки"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5585
					,[
					[
						11,
						"ответик"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					5431
					,[
					[
						2,
						["100 к 1 неправильный ответ - Без названия (mp3cut.net)",false]
					]
,					[
						3,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					91,
					cr.plugins_.Button.prototype.acts.SetChecked,
					null,
					5588
					,[
					[
						3,
						0
					]
					]
				]
,				[
					92,
					cr.plugins_.Button.prototype.acts.SetChecked,
					null,
					5429
					,[
					[
						3,
						0
					]
					]
				]
,				[
					93,
					cr.plugins_.Button.prototype.acts.SetChecked,
					null,
					5430
					,[
					[
						3,
						0
					]
					]
				]
,				[
					94,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					5432
					,[
					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					5433
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5586
					,[
					[
						11,
						"ответик"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					5587
					,[
					[
						0,
						[
							1,
							1.5
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					5434
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5418,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				5422
			]
,			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				5420
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				5425
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5423
				,[
				[
					11,
					"ответик"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				5419
			]
			],
			[
			[
				94,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5435
				,[
				[
					3,
					0
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5436
				,[
				[
					2,
					["7ddbcb6823f615fa82aa08c7dbbebc65 (mp3cut.net)2",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				95,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5426
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5427
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5486
				,[
				[
					3,
					0
				]
				]
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5438
				,[
				[
					3,
					1
				]
				]
			]
,			[
				47,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				5439
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				5443
			]
,			[
				31,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				5444
			]
,			[
				17,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				5445
			]
,			[
				25,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5446
				,[
				[
					3,
					1
				]
				]
			]
,			[
				23,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5447
				,[
				[
					3,
					1
				]
				]
			]
,			[
				22,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5448
				,[
				[
					3,
					1
				]
				]
			]
,			[
				95,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5428
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5449
				,[
				[
					11,
					"ответик"
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			5450,
			[
			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				5451
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				5452
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				5453,
				[
				[
					44,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					5454
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5455
					,[
					[
						11,
						"ответик"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5589
					,[
					[
						11,
						"ответик"
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					5456
					,[
					[
						11,
						"ошибочки"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					92,
					cr.plugins_.Button.prototype.acts.SetChecked,
					null,
					5457
					,[
					[
						3,
						0
					]
					]
				]
,				[
					93,
					cr.plugins_.Button.prototype.acts.SetChecked,
					null,
					5592
					,[
					[
						3,
						0
					]
					]
				]
,				[
					91,
					cr.plugins_.Button.prototype.acts.SetChecked,
					null,
					5458
					,[
					[
						3,
						0
					]
					]
				]
,				[
					88,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					5459
					,[
					[
						2,
						["100 к 1 неправильный ответ - Без названия (mp3cut.net)",false]
					]
,					[
						3,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					5460
					,[
					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					5461
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5590
					,[
					[
						11,
						"ответик"
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					5591
					,[
					[
						0,
						[
							1,
							1.5
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					5462
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5463,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				5464
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5465
				,[
				[
					11,
					"ответик"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
,			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				5466
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				5467
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				5468
			]
			],
			[
			[
				94,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5469
				,[
				[
					3,
					0
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5470
				,[
				[
					2,
					["7ddbcb6823f615fa82aa08c7dbbebc65 (mp3cut.net)2",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				95,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5471
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5472
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				93,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5485
				,[
				[
					3,
					0
				]
				]
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				5475
			]
,			[
				25,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				5480
				,[
				[
					7,
					[
						2,
						"Пушок"
					]
				]
				]
			]
,			[
				23,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				5481
			]
,			[
				22,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				5482
				,[
				[
					7,
					[
						2,
						"Асимптот"
					]
				]
				]
			]
,			[
				24,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5484
				,[
				[
					3,
					1
				]
				]
			]
,			[
				173,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5603
				,[
				[
					3,
					1
				]
				]
			]
,			[
				95,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5473
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5483
				,[
				[
					11,
					"ответик"
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			5488,
			[
			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				5489
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				5490
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				5491,
				[
				[
					44,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					5492
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					5493
					,[
					[
						11,
						"ответик"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5594
					,[
					[
						11,
						"ответик"
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.AddVar,
					null,
					5494
					,[
					[
						11,
						"ошибочки"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
,				[
					93,
					cr.plugins_.Button.prototype.acts.SetChecked,
					null,
					5495
					,[
					[
						3,
						0
					]
					]
				]
,				[
					92,
					cr.plugins_.Button.prototype.acts.SetChecked,
					null,
					5593
					,[
					[
						3,
						0
					]
					]
				]
,				[
					91,
					cr.plugins_.Button.prototype.acts.SetChecked,
					null,
					5496
					,[
					[
						3,
						0
					]
					]
				]
,				[
					88,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					5497
					,[
					[
						2,
						["100 к 1 неправильный ответ - Без названия (mp3cut.net)",false]
					]
,					[
						3,
						0
					]
,					[
						0,
						[
							0,
							0
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					5498
					,[
					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					5499
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					5595
					,[
					[
						11,
						"ответик"
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					5596
					,[
					[
						0,
						[
							1,
							1.5
						]
					]
					]
				]
,				[
					94,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					5500
					,[
					[
						3,
						0
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5501,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				5502
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5503
				,[
				[
					11,
					"ответик"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				5506
			]
,			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				5504
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				5505
			]
			],
			[
			[
				94,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5508
				,[
				[
					3,
					0
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5507
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5519
				,[
				[
					11,
					"ответик"
				]
,				[
					7,
					[
						0,
						6
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2284,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				2348
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2349
				,[
				[
					11,
					"ответик"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						6
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5645
				,[
				[
					11,
					"ответик"
				]
,				[
					7,
					[
						0,
						7
					]
				]
				]
			]
,			[
				95,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2288
				,[
				[
					3,
					1
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				4734
				,[
				[
					2,
					["7ddbcb6823f615fa82aa08c7dbbebc65 (mp3cut.net)2",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				2343
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4735
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				2313
				,[
				[
					2,
					["nyan_cat_-_nyan_cat_music",true]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						"nyancat"
					]
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				2479
			]
,			[
				24,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				5551
			]
,			[
				25,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				5552
			]
,			[
				173,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				5553
			]
,			[
				22,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				5554
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2302
				,[
				[
					3,
					1
				]
				]
			]
,			[
				14,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2303
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2363
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				14,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2306
				,[
				[
					3,
					0
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				2390,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2391
					,[
					[
						11,
						"ошибочки"
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2650
					,[
					[
						11,
						"отметказаматем"
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					74,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					2392
					,[
					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2397
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					74,
					cr.plugins_.Text.prototype.acts.Destroy,
					null,
					2438
				]
,				[
					7,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2412
					,[
					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2413
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					90,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2414
					,[
					[
						3,
						0
					]
					]
				]
,				[
					95,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2415
					,[
					[
						3,
						0
					]
					]
				]
,				[
					91,
					cr.plugins_.Button.prototype.acts.Destroy,
					null,
					2416
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2417
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					92,
					cr.plugins_.Button.prototype.acts.Destroy,
					null,
					2418
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2419
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					93,
					cr.plugins_.Button.prototype.acts.Destroy,
					null,
					2420
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2421
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					44,
					cr.plugins_.Button.prototype.acts.Destroy,
					null,
					2422
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2461
					,[
					[
						0,
						[
							1,
							1.5
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					2592,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.CompareY,
						null,
						0,
						false,
						false,
						false,
						2593
						,[
						[
							8,
							0
						]
,						[
							0,
							[
								0,
								247
							]
						]
						]
					]
					],
					[
					[
						100,
						cr.behaviors.Bullet.prototype.acts.SetSpeed,
						"Bullet",
						2594
						,[
						[
							0,
							[
								0,
								200
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					2595,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.CompareY,
						null,
						0,
						false,
						false,
						false,
						2596
						,[
						[
							8,
							0
						]
,						[
							0,
							[
								0,
								73
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						2597
						,[
						[
							0,
							[
								0,
								3
							]
						]
						]
					]
,					[
						100,
						cr.behaviors.Bullet.prototype.acts.SetSpeed,
						"Bullet",
						2598
						,[
						[
							0,
							[
								0,
								200
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					2599,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.CompareY,
						null,
						0,
						false,
						false,
						false,
						2600
						,[
						[
							8,
							0
						]
,						[
							0,
							[
								0,
								355
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						2601
						,[
						[
							0,
							[
								0,
								4
							]
						]
						]
					]
,					[
						100,
						cr.behaviors.Bullet.prototype.acts.SetSpeed,
						"Bullet",
						2602
						,[
						[
							0,
							[
								0,
								200
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					2603,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.CompareY,
						null,
						0,
						false,
						false,
						false,
						2604
						,[
						[
							8,
							0
						]
,						[
							0,
							[
								0,
								459
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						2605
						,[
						[
							0,
							[
								0,
								5
							]
						]
						]
					]
,					[
						100,
						cr.behaviors.Bullet.prototype.acts.SetSpeed,
						"Bullet",
						2606
						,[
						[
							0,
							[
								0,
								200
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					2607,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.CompareY,
						null,
						0,
						false,
						false,
						false,
						2608
						,[
						[
							8,
							0
						]
,						[
							0,
							[
								0,
								158
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						2609
						,[
						[
							0,
							[
								0,
								6
							]
						]
						]
					]
,					[
						100,
						cr.behaviors.Bullet.prototype.acts.SetSpeed,
						"Bullet",
						2610
						,[
						[
							0,
							[
								0,
								200
							]
						]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				2393,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2394
					,[
					[
						11,
						"ошибочки"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					2651
					,[
					[
						11,
						"отметказаматем"
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
,				[
					85,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					2395
					,[
					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2398
					,[
					[
						0,
						[
							0,
							3
						]
					]
					]
				]
,				[
					7,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2425
					,[
					[
						3,
						0
					]
					]
				]
,				[
					85,
					cr.plugins_.Text.prototype.acts.Destroy,
					null,
					2439
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2426
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					90,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2427
					,[
					[
						3,
						0
					]
					]
				]
,				[
					95,
					cr.plugins_.Sprite.prototype.acts.SetVisible,
					null,
					2428
					,[
					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2430
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					92,
					cr.plugins_.Button.prototype.acts.Destroy,
					null,
					2431
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2432
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					93,
					cr.plugins_.Button.prototype.acts.Destroy,
					null,
					2433
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2434
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					44,
					cr.plugins_.Button.prototype.acts.Destroy,
					null,
					2435
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					2436
					,[
					[
						0,
						[
							1,
							1.5
						]
					]
					]
				]
				]
				,[
				[
					0,
					null,
					false,
					2447,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.CompareY,
						null,
						0,
						false,
						false,
						false,
						2448
						,[
						[
							8,
							0
						]
,						[
							0,
							[
								0,
								247
							]
						]
						]
					]
					],
					[
					[
						100,
						cr.behaviors.Bullet.prototype.acts.SetSpeed,
						"Bullet",
						2452
						,[
						[
							0,
							[
								0,
								200
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					2444,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.CompareY,
						null,
						0,
						false,
						false,
						false,
						2445
						,[
						[
							8,
							0
						]
,						[
							0,
							[
								0,
								73
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						2453
						,[
						[
							0,
							[
								0,
								3
							]
						]
						]
					]
,					[
						100,
						cr.behaviors.Bullet.prototype.acts.SetSpeed,
						"Bullet",
						2446
						,[
						[
							0,
							[
								0,
								200
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					2507,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.CompareY,
						null,
						0,
						false,
						false,
						false,
						2508
						,[
						[
							8,
							0
						]
,						[
							0,
							[
								0,
								355
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						2509
						,[
						[
							0,
							[
								0,
								4
							]
						]
						]
					]
,					[
						100,
						cr.behaviors.Bullet.prototype.acts.SetSpeed,
						"Bullet",
						2531
						,[
						[
							0,
							[
								0,
								200
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					2503,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.CompareY,
						null,
						0,
						false,
						false,
						false,
						2504
						,[
						[
							8,
							0
						]
,						[
							0,
							[
								0,
								459
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						2505
						,[
						[
							0,
							[
								0,
								5
							]
						]
						]
					]
,					[
						100,
						cr.behaviors.Bullet.prototype.acts.SetSpeed,
						"Bullet",
						2506
						,[
						[
							0,
							[
								0,
								200
							]
						]
						]
					]
					]
				]
,				[
					0,
					null,
					false,
					2576,
					[
					[
						100,
						cr.plugins_.Sprite.prototype.cnds.CompareY,
						null,
						0,
						false,
						false,
						false,
						2577
						,[
						[
							8,
							0
						]
,						[
							0,
							[
								0,
								158
							]
						]
						]
					]
					],
					[
					[
						-1,
						cr.system_object.prototype.acts.Wait,
						null,
						2578
						,[
						[
							0,
							[
								0,
								6
							]
						]
						]
					]
,					[
						100,
						cr.behaviors.Bullet.prototype.acts.SetSpeed,
						"Bullet",
						2579
						,[
						[
							0,
							[
								0,
								200
							]
						]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2360,
			[
			],
			[
			]
		]
,		[
			0,
			null,
			false,
			2547,
			[
			[
				100,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2548
				,[
				[
					8,
					0
				]
,				[
					0,
					[
						0,
						247
					]
				]
				]
			]
,			[
				100,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				2553
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						499
					]
				]
				]
			]
			],
			[
			[
				100,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				2554
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2555,
			[
			[
				100,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2556
				,[
				[
					8,
					0
				]
,				[
					0,
					[
						0,
						73
					]
				]
				]
			]
,			[
				100,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				2562
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						499
					]
				]
				]
			]
			],
			[
			[
				100,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				2563
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2564,
			[
			[
				100,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2565
				,[
				[
					8,
					0
				]
,				[
					0,
					[
						0,
						459
					]
				]
				]
			]
,			[
				100,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				2568
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						499
					]
				]
				]
			]
			],
			[
			[
				100,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				2567
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2580,
			[
			[
				100,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2581
				,[
				[
					8,
					0
				]
,				[
					0,
					[
						0,
						158
					]
				]
				]
			]
,			[
				100,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				2590
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						0,
						208
					]
				]
				]
			]
			],
			[
			[
				100,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				2584
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2585,
			[
			[
				100,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2586
				,[
				[
					8,
					0
				]
,				[
					0,
					[
						0,
						355
					]
				]
				]
			]
,			[
				100,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				2591
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						0,
						208
					]
				]
				]
			]
			],
			[
			[
				100,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				2589
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2660
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				101,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2614
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2625
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				2645
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2615,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				2616
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				101,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				2617
				,[
				[
					0,
					[
						0,
						8
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2618
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				101,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				2619
				,[
				[
					0,
					[
						0,
						-8
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2627,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				2628
			]
,			[
				100,
				cr.behaviors.Bullet.prototype.cnds.CompareTravelled,
				"Bullet",
				0,
				false,
				false,
				false,
				2644
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						50
					]
				]
				]
			]
			],
			[
			[
				67,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2637
				,[
				[
					3,
					1
				]
				]
			]
,			[
				68,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2638
				,[
				[
					3,
					1
				]
				]
			]
,			[
				103,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2639
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2640
				,[
				[
					0,
					[
						1,
						1.5
					]
				]
				]
			]
,			[
				103,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				2641
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2642
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				2652,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2653
					,[
					[
						11,
						"отметказаматем"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
				],
				[
				[
					104,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					2658
					,[
					[
						3,
						1
					]
					]
				]
,				[
					104,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					2659
				]
				]
			]
,			[
				0,
				null,
				false,
				2654,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					2655
					,[
					[
						11,
						"отметказаматем"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
				],
				[
				[
					102,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					2656
					,[
					[
						3,
						1
					]
					]
				]
,				[
					102,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					2657
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2673,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				2674
			]
,			[
				102,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				2675
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				2676
				,[
				[
					6,
					"этаж2"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2677,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				2678
			]
,			[
				104,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				2679
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				2680
				,[
				[
					6,
					"этаж2"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2972,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutEnd,
				null,
				1,
				false,
				false,
				false,
				2973
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Stop,
				null,
				2974
				,[
				[
					1,
					[
						2,
						"nyancat"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3320
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2518,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				2519
			]
,			[
				100,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2520
				,[
				[
					8,
					0
				]
,				[
					0,
					[
						0,
						355
					]
				]
				]
			]
			],
			[
			[
				100,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				2523
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2542,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				2543
			]
,			[
				100,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2544
				,[
				[
					8,
					0
				]
,				[
					0,
					[
						0,
						158
					]
				]
				]
			]
			],
			[
			[
				100,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				2545
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"этаж2щет",
		[
		[
			1,
			"хде",
			0,
			0,
false,false,3210
		]
,		[
			0,
			null,
			false,
			2690,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2691
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2692
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2693
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2694
			]
			]
		]
,		[
			0,
			null,
			false,
			2695,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2696
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				107,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2697
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2698
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2699
			]
			]
		]
,		[
			0,
			null,
			false,
			2700,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2701
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
			],
			[
			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2703
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2704
			]
,			[
				107,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2726
			]
			]
		]
,		[
			0,
			null,
			false,
			2705,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2706
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
			],
			[
			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2708
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2709
			]
,			[
				107,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2727
			]
			]
		]
,		[
			0,
			null,
			false,
			2710,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				2711
			]
			],
			[
			[
				107,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				2712
				,[
				[
					0,
					[
						20,
						106,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						106,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				2713
				,[
				[
					0,
					[
						20,
						106,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						106,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				2714
				,[
				[
					0,
					[
						20,
						106,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						106,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				2715
				,[
				[
					0,
					[
						20,
						106,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						106,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2716,
			[
			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
				null,
				0,
				false,
				false,
				false,
				2717
				,[
				[
					9,
					37
				]
				]
			]
			],
			[
			[
				106,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				2718
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2720,
			[
			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.IsKeyDown,
				null,
				0,
				false,
				false,
				false,
				2721
				,[
				[
					9,
					39
				]
				]
			]
			],
			[
			[
				106,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				2722
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2730,
			[
			[
				106,
				cr.plugins_.Sprite.prototype.cnds.OnCollision,
				null,
				0,
				false,
				false,
				true,
				2731
				,[
				[
					4,
					109
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3857
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				2732
				,[
				[
					4,
					39
				]
,				[
					5,
					[
						0,
						1
					]
				]
,				[
					0,
					[
						0,
						540
					]
				]
,				[
					0,
					[
						0,
						30
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2733,
			[
			[
				106,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				2734
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						5,
						[
							20,
							109,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							200
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3858
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				39,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				2735
			]
			]
		]
,		[
			0,
			null,
			false,
			2736,
			[
			[
				106,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				2737
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						4,
						[
							20,
							109,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							170
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3859
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				39,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				2738
			]
			]
		]
,		[
			0,
			null,
			false,
			2740,
			[
			[
				39,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				2741
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3866
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				39,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				2742
			]
,			[
				109,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				2762
			]
,			[
				109,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				2763
				,[
				[
					0,
					[
						4,
						[
							20,
							106,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							228
						]
					]
				]
				]
			]
,			[
				106,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2744
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2745
			]
,			[
				107,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2746
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2747
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2748
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				2764
				,[
				[
					0,
					[
						5,
						[
							20,
							109,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							263
						]
					]
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2751
				,[
				[
					3,
					1
				]
				]
			]
,			[
				74,
				cr.plugins_.Text.prototype.acts.SetX,
				null,
				2766
				,[
				[
					0,
					[
						5,
						[
							20,
							7,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							141
						]
					]
				]
				]
			]
,			[
				74,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2752
				,[
				[
					3,
					1
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetX,
				null,
				2767
				,[
				[
					0,
					[
						5,
						[
							20,
							109,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							211
						]
					]
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				2753
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3211
				,[
				[
					11,
					"хде"
				]
,				[
					7,
					[
						20,
						106,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2768,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				2769
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3867
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2772
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				2773
				,[
				[
					6,
					"суисайды"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3205,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3206
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				109,
				cr.plugins_.Sprite.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				3860
			]
			],
			[
			[
				109,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3207
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				3208
			]
,			[
				39,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3209
				,[
				[
					3,
					0
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.SetPaused,
				null,
				3300
				,[
				[
					1,
					[
						2,
						"школашум"
					]
				]
,				[
					3,
					1
				]
				]
			]
,			[
				106,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				3212
				,[
				[
					0,
					[
						23,
						"хде"
					]
				]
				]
			]
,			[
				67,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				3213
				,[
				[
					0,
					[
						23,
						"хде"
					]
				]
				]
			]
,			[
				67,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3214
				,[
				[
					3,
					1
				]
				]
			]
,			[
				68,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3218
				,[
				[
					3,
					1
				]
				]
			]
,			[
				103,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3245
				,[
				[
					3,
					1
				]
				]
			]
,			[
				68,
				cr.plugins_.Text.prototype.acts.SetX,
				null,
				3250
				,[
				[
					0,
					[
						4,
						[
							20,
							67,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							146
						]
					]
				]
				]
			]
,			[
				103,
				cr.plugins_.Text.prototype.acts.SetX,
				null,
				3251
				,[
				[
					0,
					[
						4,
						[
							20,
							67,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							146
						]
					]
				]
				]
			]
,			[
				102,
				cr.plugins_.Text.prototype.acts.SetX,
				null,
				3252
				,[
				[
					0,
					[
						4,
						[
							20,
							67,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							146
						]
					]
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetX,
				null,
				3253
				,[
				[
					0,
					[
						4,
						[
							20,
							67,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							146
						]
					]
				]
				]
			]
,			[
				104,
				cr.plugins_.Text.prototype.acts.SetX,
				null,
				3254
				,[
				[
					0,
					[
						4,
						[
							20,
							67,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							146
						]
					]
				]
				]
			]
,			[
				130,
				cr.plugins_.Text.prototype.acts.SetX,
				null,
				3255
				,[
				[
					0,
					[
						4,
						[
							20,
							67,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							146
						]
					]
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.SetX,
				null,
				3261
				,[
				[
					0,
					[
						4,
						[
							20,
							67,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							130
						]
					]
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3834
				,[
				[
					3,
					1
				]
				]
			]
,			[
				106,
				cr.behaviors.EightDir.prototype.acts.SetIgnoreInput,
				"8Direction",
				3325
				,[
				[
					3,
					1
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				3219,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3220
					,[
					[
						11,
						"отметказаматем"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
				],
				[
				[
					130,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					3223
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				3221,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3222
					,[
					[
						11,
						"отметказаматем"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
				],
				[
				[
					131,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					3224
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				3234,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3235
					,[
					[
						11,
						"отметкафизра"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3246
					,[
					[
						0,
						[
							1,
							1.5
						]
					]
					]
				]
,				[
					103,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3247
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3248
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
,				[
					104,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					3241
					,[
					[
						3,
						1
					]
					]
				]
,				[
					104,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3242
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3262
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					44,
					cr.plugins_.Button.prototype.acts.SetVisible,
					null,
					3264
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				3239,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3240
					,[
					[
						11,
						"отметкафизра"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3331
					,[
					[
						0,
						[
							1,
							1.5
						]
					]
					]
				]
,				[
					103,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3332
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3249
					,[
					[
						0,
						[
							0,
							2
						]
					]
					]
				]
,				[
					102,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					3243
					,[
					[
						3,
						1
					]
					]
				]
,				[
					102,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					3244
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3263
					,[
					[
						0,
						[
							1,
							0.5
						]
					]
					]
				]
,				[
					44,
					cr.plugins_.Button.prototype.acts.SetVisible,
					null,
					3265
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3266,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3267
			]
			],
			[
			[
				67,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3268
			]
,			[
				68,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				3269
			]
,			[
				103,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				3270
			]
,			[
				130,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				3286
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				3287
			]
,			[
				104,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				3288
			]
,			[
				102,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				3289
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				3292
			]
,			[
				106,
				cr.behaviors.EightDir.prototype.acts.SetIgnoreInput,
				"8Direction",
				3326
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3294,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				3295
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				3323
				,[
				[
					2,
					["148814__vetter-balin__school-ambience",true]
				]
,				[
					3,
					1
				]
,				[
					0,
					[
						0,
						50
					]
				]
,				[
					1,
					[
						2,
						"школашум"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3297,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutEnd,
				null,
				1,
				false,
				false,
				false,
				3298
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.SetPaused,
				null,
				3299
				,[
				[
					1,
					[
						2,
						"школашум"
					]
				]
,				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3817,
			[
			[
				106,
				cr.plugins_.Sprite.prototype.cnds.OnCollision,
				null,
				0,
				false,
				false,
				true,
				3818
				,[
				[
					4,
					132
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3829
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				3819
				,[
				[
					4,
					39
				]
,				[
					5,
					[
						0,
						1
					]
				]
,				[
					0,
					[
						0,
						1178
					]
				]
,				[
					0,
					[
						0,
						55
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3847,
			[
			[
				106,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				3848
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						5,
						[
							20,
							132,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							150
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3849
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				39,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				3850
			]
			]
		]
,		[
			0,
			null,
			false,
			3851,
			[
			[
				106,
				cr.plugins_.Sprite.prototype.cnds.CompareX,
				null,
				0,
				false,
				false,
				false,
				3852
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						4,
						[
							20,
							132,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							250
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3853
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				39,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				3854
			]
			]
		]
,		[
			0,
			null,
			false,
			3868,
			[
			[
				39,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3869
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3870
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				39,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				3871
			]
,			[
				132,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				3873
				,[
				[
					0,
					[
						0,
						263
					]
				]
,				[
					0,
					[
						0,
						488
					]
				]
				]
			]
,			[
				132,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				3872
			]
,			[
				106,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3874
			]
,			[
				35,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3875
			]
,			[
				107,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3876
			]
,			[
				34,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3877
			]
,			[
				33,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3878
			]
,			[
				154,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				3895
			]
,			[
				156,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3880
				,[
				[
					3,
					1
				]
				]
			]
,			[
				74,
				cr.plugins_.Text.prototype.acts.SetWidth,
				null,
				3897
				,[
				[
					0,
					[
						4,
						[
							20,
							74,
							cr.plugins_.Text.prototype.exps.Width,
							false,
							null
						]
						,[
							0,
							50
						]
					]
				]
				]
			]
,			[
				74,
				cr.plugins_.Text.prototype.acts.SetY,
				null,
				3893
				,[
				[
					0,
					[
						5,
						[
							20,
							156,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
						,[
							0,
							12
						]
					]
				]
				]
			]
,			[
				74,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3892
				,[
				[
					7,
					[
						2,
						"Что-то с мемами у вас не очень"
					]
				]
				]
			]
,			[
				74,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3882
				,[
				[
					3,
					1
				]
				]
			]
,			[
				157,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3884
				,[
				[
					3,
					1
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				3901,
				[
				[
					106,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					3902
					,[
					[
						8,
						3
					]
,					[
						0,
						[
							0,
							1150
						]
					]
					]
				]
				],
				[
				[
					132,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3889
					,[
					[
						0,
						[
							5,
							[
								20,
								106,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								1,
								173.456
							]
						]
					]
,					[
						0,
						[
							1,
							260.452
						]
					]
					]
				]
,				[
					156,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3879
					,[
					[
						0,
						[
							5,
							[
								4,
								[
									20,
									132,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
								,[
									0,
									459
								]
							]
							,[
								0,
								176
							]
						]
					]
,					[
						0,
						[
							1,
							202.854
						]
					]
					]
				]
,				[
					74,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					3881
					,[
					[
						0,
						[
							5,
							[
								20,
								156,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								0,
								120
							]
						]
					]
					]
				]
,				[
					157,
					cr.plugins_.Button.prototype.acts.SetX,
					null,
					3883
					,[
					[
						0,
						[
							4,
							[
								20,
								132,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								0,
								400
							]
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				3905,
				[
				[
					106,
					cr.plugins_.Sprite.prototype.cnds.CompareX,
					null,
					0,
					false,
					false,
					false,
					3906
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							1150
						]
					]
					]
				]
				],
				[
				[
					132,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3907
					,[
					[
						0,
						[
							1,
							976.544
						]
					]
,					[
						0,
						[
							1,
							260.452
						]
					]
					]
				]
,				[
					156,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3908
					,[
					[
						0,
						[
							5,
							[
								4,
								[
									20,
									132,
									cr.plugins_.Sprite.prototype.exps.X,
									false,
									null
								]
								,[
									0,
									459
								]
							]
							,[
								0,
								176
							]
						]
					]
,					[
						0,
						[
							1,
							202.854
						]
					]
					]
				]
,				[
					74,
					cr.plugins_.Text.prototype.acts.SetX,
					null,
					3909
					,[
					[
						0,
						[
							5,
							[
								20,
								156,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								0,
								120
							]
						]
					]
					]
				]
,				[
					157,
					cr.plugins_.Button.prototype.acts.SetX,
					null,
					3911
					,[
					[
						0,
						[
							4,
							[
								20,
								132,
								cr.plugins_.Sprite.prototype.exps.X,
								false,
								null
							]
							,[
								0,
								400
							]
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3898,
			[
			[
				157,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3899
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				3900
				,[
				[
					6,
					"мемология"
				]
				]
			]
			]
		]
		]
	]
,	[
		"суисайдыщет",
		[
		[
			1,
			"пук",
			0,
			0,
false,false,3327
		]
,		[
			1,
			"отметкафизра",
			0,
			0,
false,false,3225
		]
,		[
			1,
			"времяигры",
			0,
			0,
false,false,3086
		]
,		[
			1,
			"ашыпке",
			0,
			0,
false,false,2979
		]
,		[
			1,
			"chore",
			0,
			0,
false,false,2963
		]
,		[
			1,
			"хрень",
			0,
			0,
false,false,2845
		]
,		[
			0,
			null,
			false,
			3069,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				3070
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5658
				,[
				[
					11,
					"пук"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5659
				,[
				[
					11,
					"отметкафизра"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5660
				,[
				[
					11,
					"времяигры"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5661
				,[
				[
					11,
					"ашыпке"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5662
				,[
				[
					11,
					"chore"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5663
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5376
				,[
				[
					2,
					["Голубь прошёл игру - Курлык курлык",false]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2802,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				2803
			]
			],
			[
			[
				111,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				2804
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2786,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				2787
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2849
				,[
				[
					11,
					"пук"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				2788
				,[
				[
					4,
					111
				]
,				[
					5,
					[
						0,
						0
					]
				]
,				[
					0,
					[
						0,
						50
					]
				]
,				[
					0,
					[
						0,
						-105
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				2789
				,[
				[
					4,
					111
				]
,				[
					5,
					[
						0,
						0
					]
				]
,				[
					0,
					[
						0,
						265
					]
				]
,				[
					0,
					[
						0,
						-105
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				2790
				,[
				[
					4,
					111
				]
,				[
					5,
					[
						0,
						0
					]
				]
,				[
					0,
					[
						0,
						461
					]
				]
,				[
					0,
					[
						0,
						-105
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				2791
				,[
				[
					4,
					111
				]
,				[
					5,
					[
						0,
						0
					]
				]
,				[
					0,
					[
						0,
						650
					]
				]
,				[
					0,
					[
						0,
						-105
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2801
				,[
				[
					0,
					[
						1,
						1.5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				2798
				,[
				[
					4,
					111
				]
,				[
					5,
					[
						0,
						0
					]
				]
,				[
					0,
					[
						0,
						162
					]
				]
,				[
					0,
					[
						0,
						-105
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				2799
				,[
				[
					4,
					111
				]
,				[
					5,
					[
						0,
						0
					]
				]
,				[
					0,
					[
						0,
						362
					]
				]
,				[
					0,
					[
						0,
						-105
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				2800
				,[
				[
					4,
					111
				]
,				[
					5,
					[
						0,
						0
					]
				]
,				[
					0,
					[
						0,
						554
					]
				]
,				[
					0,
					[
						0,
						-105
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2812,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				2813
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3000
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2814
				,[
				[
					3,
					0
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				2815
				,[
				[
					3,
					0
				]
				]
			]
,			[
				43,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2816
				,[
				[
					3,
					0
				]
				]
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2817
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2846
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2848
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				108,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2835
				,[
				[
					3,
					0
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				2975
				,[
				[
					2,
					["suicideboys-smoked_out_loced_out (online-audio-converter.com)",true]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						160
					]
				]
,				[
					1,
					[
						2,
						"smokedout"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3260
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3328
				,[
				[
					11,
					"пук"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2836,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				2837
				,[
				[
					0,
					[
						1,
						0.8
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2847
				,[
				[
					11,
					"пук"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				112,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2839
				,[
				[
					3,
					1
				]
				]
			]
,			[
				113,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2838
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2840
				,[
				[
					0,
					[
						1,
						0.4
					]
				]
				]
			]
,			[
				112,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2841
				,[
				[
					3,
					0
				]
				]
			]
,			[
				113,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2842
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2875,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				2876
			]
			],
			[
			[
				119,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				2877
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				120,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				2878
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				118,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				2879
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				117,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				2880
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2881,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2884
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				2949
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							2
						]
,[
							0,
							7
						]
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3339
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							3
						]
,[
							0,
							6
						]
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				2883
				,[
				[
					4,
					117
				]
,				[
					5,
					[
						0,
						3
					]
				]
,				[
					0,
					[
						0,
						331
					]
				]
,				[
					0,
					[
						0,
						535
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2885,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2887
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				3072
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							2
						]
,[
							0,
							7
						]
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3338
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							4
						]
,[
							0,
							8
						]
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				2888
				,[
				[
					4,
					120
				]
,				[
					5,
					[
						0,
						3
					]
				]
,				[
					0,
					[
						0,
						139
					]
				]
,				[
					0,
					[
						0,
						535
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2889,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2891
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				3073
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							2
						]
,[
							0,
							7
						]
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3337
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							1
						]
,[
							0,
							4
						]
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				2892
				,[
				[
					4,
					119
				]
,				[
					5,
					[
						0,
						3
					]
				]
,				[
					0,
					[
						0,
						266
					]
				]
,				[
					0,
					[
						0,
						535
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2893,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2895
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				3074
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							2
						]
,[
							0,
							7
						]
						]
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2919
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							2
						]
,[
							0,
							5
						]
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				2896
				,[
				[
					4,
					118
				]
,				[
					5,
					[
						0,
						3
					]
				]
,				[
					0,
					[
						0,
						205
					]
				]
,				[
					0,
					[
						0,
						535
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2907,
			[
			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.OnKey,
				null,
				1,
				false,
				false,
				false,
				2910
				,[
				[
					9,
					39
				]
				]
			]
,			[
				117,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2908
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						0,
						260
					]
				]
				]
			]
,			[
				117,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2909
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						165
					]
				]
				]
			]
			],
			[
			[
				121,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2911
				,[
				[
					3,
					1
				]
				]
			]
,			[
				117,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2914
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2912
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				121,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2913
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2968
				,[
				[
					11,
					"chore"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2921,
			[
			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.OnKey,
				null,
				1,
				false,
				false,
				false,
				2922
				,[
				[
					9,
					37
				]
				]
			]
,			[
				120,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2923
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						0,
						260
					]
				]
				]
			]
,			[
				120,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2924
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						165
					]
				]
				]
			]
			],
			[
			[
				123,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2925
				,[
				[
					3,
					1
				]
				]
			]
,			[
				120,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2926
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2927
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				123,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2945
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2969
				,[
				[
					11,
					"chore"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2929,
			[
			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.OnKey,
				null,
				1,
				false,
				false,
				false,
				2930
				,[
				[
					9,
					38
				]
				]
			]
,			[
				119,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2931
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						0,
						265
					]
				]
				]
			]
,			[
				119,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2932
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						165
					]
				]
				]
			]
			],
			[
			[
				122,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2933
				,[
				[
					3,
					1
				]
				]
			]
,			[
				119,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2934
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2935
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				122,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2946
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2970
				,[
				[
					11,
					"chore"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2937,
			[
			[
				28,
				cr.plugins_.Keyboard.prototype.cnds.OnKey,
				null,
				1,
				false,
				false,
				false,
				2938
				,[
				[
					9,
					40
				]
				]
			]
,			[
				118,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2939
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						0,
						265
					]
				]
				]
			]
,			[
				118,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2940
				,[
				[
					8,
					5
				]
,				[
					0,
					[
						0,
						165
					]
				]
				]
			]
			],
			[
			[
				124,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2941
				,[
				[
					3,
					1
				]
				]
			]
,			[
				118,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2942
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				2943
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				124,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2944
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2971
				,[
				[
					11,
					"chore"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2951,
			[
			[
				119,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2952
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						0,
						145
					]
				]
				]
			]
			],
			[
			[
				119,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2953
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2980
				,[
				[
					11,
					"ашыпке"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2954,
			[
			[
				120,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2955
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						0,
						145
					]
				]
				]
			]
			],
			[
			[
				120,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2956
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2981
				,[
				[
					11,
					"ашыпке"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2957,
			[
			[
				117,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2958
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						0,
						145
					]
				]
				]
			]
			],
			[
			[
				117,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2959
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2982
				,[
				[
					11,
					"ашыпке"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2960,
			[
			[
				118,
				cr.plugins_.Sprite.prototype.cnds.CompareY,
				null,
				0,
				false,
				false,
				false,
				2961
				,[
				[
					8,
					3
				]
,				[
					0,
					[
						0,
						145
					]
				]
				]
			]
			],
			[
			[
				118,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2962
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				2983
				,[
				[
					11,
					"ашыпке"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2964,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				2965
			]
			],
			[
			[
				85,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				2967
				,[
				[
					7,
					[
						2,
						"Очки:"
					]
				]
				]
			]
,			[
				85,
				cr.plugins_.Text.prototype.acts.AppendText,
				null,
				2966
				,[
				[
					7,
					[
						23,
						"chore"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			2984,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				2985
				,[
				[
					11,
					"ашыпке"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						5,
						[
							7,
							[
								23,
								"chore"
							]
							,[
								0,
								2
							]
						]
						,[
							7,
							[
								23,
								"chore"
							]
							,[
								0,
								10
							]
						]
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3097
				,[
				[
					11,
					"ашыпке"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						7
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				2987
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				119,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2988
			]
,			[
				120,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2989
			]
,			[
				117,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2990
			]
,			[
				118,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				2991
			]
,			[
				112,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2992
				,[
				[
					3,
					0
				]
				]
			]
,			[
				113,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2993
				,[
				[
					3,
					0
				]
				]
			]
,			[
				114,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2994
				,[
				[
					3,
					1
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.SetSilent,
				null,
				2995
				,[
				[
					3,
					0
				]
				]
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				2996
				,[
				[
					3,
					1
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				2997
				,[
				[
					3,
					1
				]
				]
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				2999
				,[
				[
					7,
					[
						2,
						"Что-то ты, братик, не очень. Давай ещё раз."
					]
				]
				]
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				2998
				,[
				[
					3,
					1
				]
				]
			]
,			[
				126,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3098
				,[
				[
					3,
					1
				]
				]
			]
,			[
				6,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3335
				,[
				[
					3,
					1
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				4812
				,[
				[
					2,
					["Загадки - Неправильный ответ (mp3cut.net)",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						"провал"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3001,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3002
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3003
				,[
				[
					11,
					"ашыпке"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3094
				,[
				[
					11,
					"времяигры"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				3085
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3007
				,[
				[
					11,
					"ашыпке"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3008
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3009
				,[
				[
					11,
					"chore"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3004
				,[
				[
					3,
					0
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3005
				,[
				[
					3,
					0
				]
				]
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3006
				,[
				[
					3,
					0
				]
				]
			]
,			[
				114,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3010
				,[
				[
					3,
					0
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.SetSilent,
				null,
				3011
				,[
				[
					3,
					1
				]
				]
			]
,			[
				126,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3099
				,[
				[
					3,
					0
				]
				]
			]
,			[
				6,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3336
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3079,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3080
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				3986
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5555
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						5
					]
				]
				]
			]
			],
			[
			[
				119,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				3081
				,[
				[
					0,
					[
						0,
						150
					]
				]
				]
			]
,			[
				120,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				3082
				,[
				[
					0,
					[
						0,
						150
					]
				]
				]
			]
,			[
				118,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				3083
				,[
				[
					0,
					[
						0,
						150
					]
				]
				]
			]
,			[
				117,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				3084
				,[
				[
					0,
					[
						0,
						150
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3087,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3088
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				3089
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				3090
				,[
				[
					11,
					"времяигры"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3091,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3092
				,[
				[
					11,
					"времяигры"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						50
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3093
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3121
				,[
				[
					11,
					"ашыпке"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				119,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3114
			]
,			[
				120,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3115
			]
,			[
				117,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3116
			]
,			[
				118,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3117
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3329
				,[
				[
					0,
					[
						0,
						8
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3330
				,[
				[
					11,
					"пук"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				42,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3100
				,[
				[
					3,
					1
				]
				]
			]
,			[
				45,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3103
				,[
				[
					3,
					1
				]
				]
			]
,			[
				127,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3113
				,[
				[
					3,
					1
				]
				]
			]
,			[
				128,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3136
				,[
				[
					3,
					1
				]
				]
			]
,			[
				112,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3118
				,[
				[
					3,
					0
				]
				]
			]
,			[
				113,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3119
				,[
				[
					3,
					0
				]
				]
			]
,			[
				114,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3120
				,[
				[
					3,
					0
				]
				]
			]
,			[
				108,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3133
				,[
				[
					3,
					1
				]
				]
			]
,			[
				115,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3123
				,[
				[
					3,
					0
				]
				]
			]
,			[
				116,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3124
				,[
				[
					3,
					0
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				3104,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3105
					,[
					[
						11,
						"chore"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							70
						]
					]
					]
				]
				],
				[
				[
					45,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					3102
					,[
					[
						7,
						[
							2,
							"Всё, чётенько потанчили. Получай 4 по физре"
						]
					]
					]
				]
,				[
					44,
					cr.plugins_.Button.prototype.acts.SetVisible,
					null,
					3109
					,[
					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3226
					,[
					[
						11,
						"отметкафизра"
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				3106,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					3107
					,[
					[
						11,
						"chore"
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							70
						]
					]
					]
				]
				],
				[
				[
					45,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					3108
					,[
					[
						7,
						[
							2,
							"Всё, чётенько потанчили. Получай 5 по физре"
						]
					]
					]
				]
,				[
					44,
					cr.plugins_.Button.prototype.acts.SetVisible,
					null,
					3110
					,[
					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					3227
					,[
					[
						11,
						"отметкафизра"
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				3994,
				[
				[
					88,
					cr.plugins_.Audio.prototype.cnds.IsTagPlaying,
					null,
					0,
					false,
					false,
					false,
					3995
					,[
					[
						1,
						[
							2,
							"smokedout"
						]
					]
					]
				]
				],
				[
				[
					88,
					cr.plugins_.Audio.prototype.acts.SetMuted,
					null,
					4018
					,[
					[
						1,
						[
							2,
							"smokedout"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					88,
					cr.plugins_.Audio.prototype.acts.Stop,
					null,
					4025
					,[
					[
						1,
						[
							2,
							"smokedout"
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Audio.prototype.acts.Play,
					null,
					3996
					,[
					[
						2,
						["Голубь прошёл игру - Курлык курлык",false]
					]
,					[
						3,
						0
					]
,					[
						0,
						[
							0,
							10
						]
					]
,					[
						1,
						[
							2,
							""
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3140,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				3141
				,[
				[
					0,
					[
						0,
						30
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3142
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				129,
				cr.plugins_.Sprite.prototype.acts.SetY,
				null,
				3152
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							90
						]
,[
							0,
							420
						]
						]
					]
				]
				]
			]
,			[
				129,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				3150
				,[
				[
					3,
					0
				]
				]
			]
,			[
				129,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3151
				,[
				[
					0,
					[
						0,
						50
					]
				]
				]
			]
,			[
				129,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				3149
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				129,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				3143
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3145
				,[
				[
					0,
					[
						0,
						15
					]
				]
				]
			]
,			[
				129,
				cr.plugins_.Sprite.prototype.acts.SetY,
				null,
				3153
				,[
				[
					0,
					[
						19,
						cr.system_object.prototype.exps.random
						,[
[
							0,
							90
						]
,[
							0,
							420
						]
						]
					]
				]
				]
			]
,			[
				129,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				3146
				,[
				[
					3,
					0
				]
				]
			]
,			[
				129,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3148
				,[
				[
					0,
					[
						0,
						260
					]
				]
				]
			]
,			[
				129,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				3147
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3201,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3202
			]
,			[
				128,
				cr.plugins_.Sprite.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				3203
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				3204
				,[
				[
					6,
					"этаж2"
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3340,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3341
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				3342
			]
			],
			[
			[
				119,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				3343
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
,			[
				120,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				3344
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
,			[
				118,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				3345
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
,			[
				117,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				3346
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
			]
		]
		]
	]
,	[
		"мемологиящит",
		[
		[
			0,
			null,
			false,
			3356,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				3357
			]
			],
			[
			[
				135,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				3358
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				136,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				3359
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3360,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				3361
				,[
				[
					0,
					[
						1,
						66.5
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				3362
				,[
				[
					4,
					135
				]
,				[
					5,
					[
						0,
						0
					]
				]
,				[
					0,
					[
						0,
						-1
					]
				]
,				[
					0,
					[
						0,
						3160
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3371,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				3372
				,[
				[
					0,
					[
						1,
						51.6
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.CreateObject,
				null,
				3374
				,[
				[
					4,
					136
				]
,				[
					5,
					[
						0,
						0
					]
				]
,				[
					0,
					[
						0,
						3280
					]
				]
,				[
					0,
					[
						0,
						-1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3377,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				3378
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3573
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3620
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4056
				,[
				[
					0,
					[
						0,
						140
					]
				]
,				[
					0,
					[
						0,
						299
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3428
				,[
				[
					0,
					[
						1,
						338.19
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3379
				,[
				[
					0,
					[
						0,
						680
					]
				]
,				[
					0,
					[
						0,
						478
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3380
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3381
				,[
				[
					0,
					[
						0,
						604
					]
				]
,				[
					0,
					[
						0,
						421
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3382
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3383
				,[
				[
					0,
					[
						1,
						9.454
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3384
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3385
				,[
				[
					0,
					[
						1,
						345.962
					]
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3568
				,[
				[
					3,
					1
				]
				]
			]
,			[
				94,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3569
				,[
				[
					3,
					1
				]
				]
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3570
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3574,
			[
			[
				44,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3575
			]
			],
			[
			[
				7,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3607
			]
,			[
				94,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				3608
			]
,			[
				44,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				3609
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3576
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3613
				,[
				[
					3,
					1
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3614
				,[
				[
					3,
					1
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3615
				,[
				[
					3,
					1
				]
				]
			]
,			[
				93,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3616
				,[
				[
					3,
					1
				]
				]
			]
,			[
				96,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3617
				,[
				[
					3,
					1
				]
				]
			]
,			[
				97,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3618
				,[
				[
					3,
					1
				]
				]
			]
,			[
				98,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3619
				,[
				[
					3,
					1
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3629
				,[
				[
					3,
					1
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3577
				,[
				[
					0,
					[
						1,
						9.454
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3578
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3579
				,[
				[
					0,
					[
						1,
						345.962
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3580
				,[
				[
					0,
					[
						1,
						9.454
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3581
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3582
				,[
				[
					0,
					[
						1,
						345.962
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3583
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3584
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3585
				,[
				[
					0,
					[
						1,
						359.998
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3586
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetY,
				null,
				3587
				,[
				[
					0,
					[
						0,
						480
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3588
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetY,
				null,
				3589
				,[
				[
					0,
					[
						0,
						550
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3590
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetY,
				null,
				3591
				,[
				[
					0,
					[
						0,
						700
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3592
				,[
				[
					0,
					[
						0,
						10
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3593
				,[
				[
					0,
					[
						1,
						62.103
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3594
				,[
				[
					0,
					[
						0,
						9
					]
				]
,				[
					0,
					[
						0,
						166
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3595
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3596
				,[
				[
					0,
					[
						1,
						98.53
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3597
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3598
				,[
				[
					0,
					[
						1,
						77.471
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3599
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3600
				,[
				[
					0,
					[
						1,
						93.012
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3601
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3602
				,[
				[
					0,
					[
						1,
						62.103
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3603
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3604
				,[
				[
					0,
					[
						1,
						98.53
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3605
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3606
				,[
				[
					0,
					[
						0,
						-147
					]
				]
,				[
					0,
					[
						0,
						228
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3611
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3402,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				3403
				,[
				[
					0,
					[
						0,
						60
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3610
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3430
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3429
				,[
				[
					0,
					[
						0,
						193
					]
				]
,				[
					0,
					[
						0,
						528
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3431
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3432
				,[
				[
					0,
					[
						1,
						18.437
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3433
				,[
				[
					0,
					[
						0,
						217
					]
				]
,				[
					0,
					[
						0,
						527
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3434
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3435
				,[
				[
					0,
					[
						1,
						343.302
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3436
				,[
				[
					0,
					[
						0,
						305
					]
				]
,				[
					0,
					[
						0,
						521
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3437
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3438
				,[
				[
					0,
					[
						1,
						12.098
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3439
				,[
				[
					0,
					[
						0,
						361
					]
				]
,				[
					0,
					[
						0,
						518
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3440
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3441
				,[
				[
					0,
					[
						1,
						344.748
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3442
				,[
				[
					0,
					[
						0,
						431
					]
				]
,				[
					0,
					[
						0,
						515
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3443
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3444
				,[
				[
					0,
					[
						1,
						21.253
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3445
				,[
				[
					0,
					[
						0,
						463
					]
				]
,				[
					0,
					[
						0,
						512
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3446
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3447
				,[
				[
					0,
					[
						1,
						345.071
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3448
				,[
				[
					0,
					[
						0,
						556
					]
				]
,				[
					0,
					[
						0,
						488
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3454
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3455
				,[
				[
					0,
					[
						1,
						15.947
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3456
				,[
				[
					0,
					[
						0,
						610
					]
				]
,				[
					0,
					[
						0,
						475
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3457
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				3458
				,[
				[
					0,
					[
						1,
						340.348
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				3459
				,[
				[
					0,
					[
						0,
						688
					]
				]
,				[
					0,
					[
						0,
						464
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3460
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetY,
				null,
				3461
				,[
				[
					0,
					[
						0,
						700
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3480
				,[
				[
					0,
					[
						0,
						10
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				4513,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4514
					,[
					[
						11,
						"хрень"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3495
					,[
					[
						0,
						[
							1,
							62.103
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3496
					,[
					[
						0,
						[
							0,
							9
						]
					]
,					[
						0,
						[
							0,
							166
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3497
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3498
					,[
					[
						0,
						[
							1,
							98.53
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3499
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3500
					,[
					[
						0,
						[
							1,
							77.471
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3501
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3502
					,[
					[
						0,
						[
							1,
							93.012
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3503
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3504
					,[
					[
						0,
						[
							1,
							62.103
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3505
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3506
					,[
					[
						0,
						[
							1,
							98.53
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3507
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3508
					,[
					[
						0,
						[
							0,
							-147
						]
					]
,					[
						0,
						[
							0,
							228
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3509
					,[
					[
						0,
						[
							0,
							10
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4515,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4516
					,[
					[
						11,
						"хрень"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3510
					,[
					[
						0,
						[
							1,
							62.103
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3511
					,[
					[
						0,
						[
							0,
							9
						]
					]
,					[
						0,
						[
							0,
							166
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3512
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3513
					,[
					[
						0,
						[
							1,
							98.53
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3514
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3515
					,[
					[
						0,
						[
							1,
							77.471
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3516
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3517
					,[
					[
						0,
						[
							1,
							93.012
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3518
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3519
					,[
					[
						0,
						[
							1,
							62.103
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3520
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3521
					,[
					[
						0,
						[
							1,
							98.53
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3522
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3523
					,[
					[
						0,
						[
							0,
							-147
						]
					]
,					[
						0,
						[
							0,
							228
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3524
					,[
					[
						0,
						[
							0,
							20
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4517,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4518
					,[
					[
						11,
						"хрень"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3525
					,[
					[
						0,
						[
							1,
							338.19
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3526
					,[
					[
						0,
						[
							0,
							680
						]
					]
,					[
						0,
						[
							0,
							478
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3527
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetPos,
					null,
					3528
					,[
					[
						0,
						[
							0,
							604
						]
					]
,					[
						0,
						[
							0,
							421
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3529
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3530
					,[
					[
						0,
						[
							1,
							9.454
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3531
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3532
					,[
					[
						0,
						[
							1,
							345.962
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3533
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3534
					,[
					[
						0,
						[
							1,
							9.454
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3535
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3536
					,[
					[
						0,
						[
							1,
							345.962
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3537
					,[
					[
						0,
						[
							1,
							9.454
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3538
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3539
					,[
					[
						0,
						[
							1,
							345.962
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3540
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3541
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetAngle,
					null,
					3542
					,[
					[
						0,
						[
							1,
							359.998
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3543
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					3544
					,[
					[
						0,
						[
							0,
							480
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3545
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					3546
					,[
					[
						0,
						[
							0,
							550
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					3547
					,[
					[
						0,
						[
							1,
							0.3
						]
					]
					]
				]
,				[
					137,
					cr.plugins_.Sprite.prototype.acts.SetY,
					null,
					3548
					,[
					[
						0,
						[
							0,
							700
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			4374,
			[
			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4375
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4377
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				4382,
				[
				[
					13,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					4399
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4383
					,[
					[
						11,
						"колвоигр"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4400
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps["int"]
							,[
[
								19,
								cr.system_object.prototype.exps.random
								,[
[
									0,
									1
								]
,[
									1,
									3.99
								]
								]
							]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					4391
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4406
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4384,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4385
				,[
				[
					11,
					"пук"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				4408
				,[
				[
					11,
					"ашыпке"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				159,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4390
				,[
				[
					3,
					1
				]
				]
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4508
				,[
				[
					7,
					[
						2,
						"Неправильно!"
					]
				]
				]
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4509
				,[
				[
					3,
					1
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5568
				,[
				[
					3,
					0
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5569
				,[
				[
					3,
					0
				]
				]
			]
,			[
				93,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5570
				,[
				[
					3,
					0
				]
				]
			]
,			[
				141,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5571
				,[
				[
					3,
					0
				]
				]
			]
,			[
				142,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5572
				,[
				[
					3,
					0
				]
				]
			]
,			[
				143,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5573
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4407
				,[
				[
					0,
					[
						1,
						1.5
					]
				]
				]
			]
,			[
				159,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4392
				,[
				[
					3,
					0
				]
				]
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4510
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4386,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4387
				,[
				[
					11,
					"пук"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				4409
				,[
				[
					11,
					"ашыпке"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				160,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4393
				,[
				[
					3,
					1
				]
				]
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4506
				,[
				[
					7,
					[
						2,
						"Сложна..."
					]
				]
				]
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4507
				,[
				[
					3,
					1
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5562
				,[
				[
					3,
					0
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5563
				,[
				[
					3,
					0
				]
				]
			]
,			[
				93,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5564
				,[
				[
					3,
					0
				]
				]
			]
,			[
				141,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5565
				,[
				[
					3,
					0
				]
				]
			]
,			[
				142,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5566
				,[
				[
					3,
					0
				]
				]
			]
,			[
				143,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5567
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4394
				,[
				[
					0,
					[
						1,
						1.5
					]
				]
				]
			]
,			[
				160,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4395
				,[
				[
					3,
					0
				]
				]
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4511
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4388,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4389
				,[
				[
					11,
					"пук"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.AddVar,
				null,
				4410
				,[
				[
					11,
					"ашыпке"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4505
				,[
				[
					7,
					[
						2,
						"Что-то ты запутался"
					]
				]
				]
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4504
				,[
				[
					3,
					1
				]
				]
			]
,			[
				161,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4396
				,[
				[
					3,
					1
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5556
				,[
				[
					3,
					0
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5557
				,[
				[
					3,
					0
				]
				]
			]
,			[
				93,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5558
				,[
				[
					3,
					0
				]
				]
			]
,			[
				141,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5559
				,[
				[
					3,
					0
				]
				]
			]
,			[
				142,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5560
				,[
				[
					3,
					0
				]
				]
			]
,			[
				143,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				5561
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4397
				,[
				[
					0,
					[
						1,
						1.5
					]
				]
				]
			]
,			[
				161,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4398
				,[
				[
					3,
					0
				]
				]
			]
,			[
				70,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4512
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3621,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3624
			]
,			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				3622
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3623
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4401
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4402
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3636
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						10
					]
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3627
				,[
				[
					3,
					1
				]
				]
			]
,			[
				148,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3734
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3630
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				148,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3735
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3631
				,[
				[
					3,
					0
				]
				]
			]
,			[
				93,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				3633
				,[
				[
					3,
					0
				]
				]
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3634
				,[
				[
					7,
					[
						2,
						"Где лучше всего культурно отдыхать с товарищами?"
					]
				]
				]
			]
,			[
				96,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3635
				,[
				[
					7,
					[
						2,
						"На дроздах"
					]
				]
				]
			]
,			[
				97,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3637
				,[
				[
					7,
					[
						2,
						"В ''Гараже''"
					]
				]
				]
			]
,			[
				98,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3638
				,[
				[
					7,
					[
						2,
						"На Немиге"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5666
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			4411,
			[
			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4412
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4413
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				4414,
				[
				[
					13,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					4415
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4416
					,[
					[
						11,
						"колвоигр"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4417
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps["int"]
							,[
[
								19,
								cr.system_object.prototype.exps.random
								,[
[
									0,
									1
								]
,[
									1,
									3.99
								]
								]
							]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					4418
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4419
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3639,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3641
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				3640
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3642
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
,			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4479
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4480
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3645
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						20
					]
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3646
				,[
				[
					3,
					1
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3649
				,[
				[
					7,
					[
						2,
						"Так держать!"
					]
				]
				]
			]
,			[
				138,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3928
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3651
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				3678
				,[
				[
					3,
					0
				]
				]
			]
,			[
				138,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3929
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3653
				,[
				[
					3,
					0
				]
				]
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3654
				,[
				[
					7,
					[
						2,
						"С чем бы спутать фамилию(имя) Жаафара?(3 ответа)"
					]
				]
				]
			]
,			[
				96,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3655
				,[
				[
					7,
					[
						2,
						"Джанаший"
					]
				]
				]
			]
,			[
				97,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3656
				,[
				[
					7,
					[
						2,
						"Рафаэль"
					]
				]
				]
			]
,			[
				98,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3657
				,[
				[
					7,
					[
						2,
						"Абибек"
					]
				]
				]
			]
,			[
				144,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3666
				,[
				[
					3,
					1
				]
				]
			]
,			[
				145,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3667
				,[
				[
					3,
					1
				]
				]
			]
,			[
				146,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3668
				,[
				[
					3,
					1
				]
				]
			]
,			[
				141,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3669
				,[
				[
					3,
					1
				]
				]
			]
,			[
				142,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3670
				,[
				[
					3,
					1
				]
				]
			]
,			[
				143,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3671
				,[
				[
					3,
					1
				]
				]
			]
,			[
				149,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3728
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5667
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			4420,
			[
			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4421
			]
,			[
				142,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4422
			]
,			[
				143,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4431
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				4423,
				[
				[
					13,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					4424
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4425
					,[
					[
						11,
						"колвоигр"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4426
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps["int"]
							,[
[
								19,
								cr.system_object.prototype.exps.random
								,[
[
									0,
									1
								]
,[
									1,
									3.99
								]
								]
							]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					4427
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4428
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3672,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3674
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3675
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				3673
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				3676
			]
,			[
				141,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				3677
			]
,			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4476
			]
,			[
				142,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4477
			]
,			[
				143,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4478
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3699
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						30
					]
				]
				]
			]
,			[
				149,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3729
			]
,			[
				140,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3679
				,[
				[
					3,
					1
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3681
				,[
				[
					7,
					[
						2,
						"Да ты шаришь!"
					]
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3680
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3682
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				3723
				,[
				[
					3,
					0
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				3724
				,[
				[
					3,
					0
				]
				]
			]
,			[
				141,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				3725
				,[
				[
					3,
					0
				]
				]
			]
,			[
				140,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3683
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3684
				,[
				[
					3,
					0
				]
				]
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3685
				,[
				[
					7,
					[
						2,
						"Чем подозрительны школьные сосиски?"
					]
				]
				]
			]
,			[
				96,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3686
				,[
				[
					7,
					[
						2,
						"Они безвкусны"
					]
				]
				]
			]
,			[
				97,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3687
				,[
				[
					7,
					[
						2,
						"Красные точки"
					]
				]
				]
			]
,			[
				98,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3688
				,[
				[
					7,
					[
						2,
						"Торчит крысиный хвостик"
					]
				]
				]
			]
,			[
				144,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3689
				,[
				[
					3,
					0
				]
				]
			]
,			[
				145,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3690
				,[
				[
					3,
					0
				]
				]
			]
,			[
				146,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3691
				,[
				[
					3,
					0
				]
				]
			]
,			[
				141,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3692
				,[
				[
					3,
					0
				]
				]
			]
,			[
				142,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3693
				,[
				[
					3,
					0
				]
				]
			]
,			[
				143,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				3694
				,[
				[
					3,
					0
				]
				]
			]
,			[
				150,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3732
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5668
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			4432,
			[
			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4433
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4434
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				4435,
				[
				[
					13,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					4436
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4437
					,[
					[
						11,
						"колвоигр"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4438
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps["int"]
							,[
[
								19,
								cr.system_object.prototype.exps.random
								,[
[
									0,
									1
								]
,[
									1,
									3.99
								]
								]
							]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					4439
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4440
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3700,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3701
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3703
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				3704
			]
,			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4474
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4475
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3706
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						40
					]
				]
				]
			]
,			[
				150,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3733
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3930
				,[
				[
					7,
					[
						2,
						"Неплохо"
					]
				]
				]
			]
,			[
				147,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3931
				,[
				[
					3,
					1
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3709
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3710
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				3918
				,[
				[
					3,
					0
				]
				]
			]
,			[
				147,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3932
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3712
				,[
				[
					3,
					0
				]
				]
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3933
				,[
				[
					7,
					[
						2,
						"Кто из географов упал со стула?"
					]
				]
				]
			]
,			[
				96,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3934
				,[
				[
					7,
					[
						2,
						"Газовая"
					]
				]
				]
			]
,			[
				98,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3935
				,[
				[
					7,
					[
						2,
						"Илья"
					]
				]
				]
			]
,			[
				145,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3936
				,[
				[
					7,
					[
						2,
						"Гиля"
					]
				]
				]
			]
,			[
				169,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4487
				,[
				[
					3,
					1
				]
				]
			]
,			[
				170,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4488
				,[
				[
					3,
					1
				]
				]
			]
,			[
				168,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4489
				,[
				[
					3,
					1
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				4490
				,[
				[
					3,
					0
				]
				]
			]
,			[
				142,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				4492
				,[
				[
					3,
					1
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				4493
				,[
				[
					3,
					0
				]
				]
			]
,			[
				97,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4500
				,[
				[
					3,
					0
				]
				]
			]
,			[
				145,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4502
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5669
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			4441,
			[
			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4442
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4443
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				4444,
				[
				[
					13,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					4445
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4446
					,[
					[
						11,
						"колвоигр"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4447
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps["int"]
							,[
[
								19,
								cr.system_object.prototype.exps.random
								,[
[
									0,
									1
								]
,[
									1,
									3.99
								]
								]
							]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					4448
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4449
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3740,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3741
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3742
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
,			[
				142,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				3743
			]
,			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4472
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4473
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3744
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						50
					]
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3941
				,[
				[
					7,
					[
						2,
						"Да!"
					]
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3942
				,[
				[
					3,
					1
				]
				]
			]
,			[
				158,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3943
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3944
				,[
				[
					0,
					[
						0,
						4
					]
				]
				]
			]
,			[
				93,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				3945
				,[
				[
					3,
					0
				]
				]
			]
,			[
				158,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3946
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3749
				,[
				[
					3,
					0
				]
				]
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3750
				,[
				[
					7,
					[
						2,
						"Кто изображён внизу на фото?"
					]
				]
				]
			]
,			[
				96,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3751
				,[
				[
					7,
					[
						2,
						"Высоцкий"
					]
				]
				]
			]
,			[
				97,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3752
				,[
				[
					7,
					[
						2,
						"Толмачёв Алексей Александрович"
					]
				]
				]
			]
,			[
				98,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3753
				,[
				[
					7,
					[
						2,
						"Чаво"
					]
				]
				]
			]
,			[
				153,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3766
				,[
				[
					3,
					1
				]
				]
			]
,			[
				169,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4494
				,[
				[
					3,
					0
				]
				]
			]
,			[
				170,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4495
				,[
				[
					3,
					0
				]
				]
			]
,			[
				168,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4496
				,[
				[
					3,
					0
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				4497
				,[
				[
					3,
					1
				]
				]
			]
,			[
				142,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				4498
				,[
				[
					3,
					0
				]
				]
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				4499
				,[
				[
					3,
					1
				]
				]
			]
,			[
				97,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4501
				,[
				[
					3,
					1
				]
				]
			]
,			[
				145,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4503
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5670
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						5
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			4450,
			[
			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4451
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4452
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				4453,
				[
				[
					13,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					4454
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4455
					,[
					[
						11,
						"колвоигр"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4456
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps["int"]
							,[
[
								19,
								cr.system_object.prototype.exps.random
								,[
[
									0,
									1
								]
,[
									1,
									3.99
								]
								]
							]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					4457
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4458
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3767,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3768
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3769
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						5
					]
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				3770
			]
,			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4470
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4471
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3771
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						60
					]
				]
				]
			]
,			[
				153,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3799
				,[
				[
					3,
					0
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3947
				,[
				[
					7,
					[
						2,
						"Да ты мемный задрот"
					]
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3948
				,[
				[
					3,
					1
				]
				]
			]
,			[
				151,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3949
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3950
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				3920
				,[
				[
					3,
					0
				]
				]
			]
,			[
				151,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3953
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3777
				,[
				[
					3,
					0
				]
				]
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3794
				,[
				[
					7,
					[
						2,
						"Лучший праздник?"
					]
				]
				]
			]
,			[
				96,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3795
				,[
				[
					7,
					[
						2,
						"День 14 февраля"
					]
				]
				]
			]
,			[
				97,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3796
				,[
				[
					7,
					[
						2,
						"День Учителя"
					]
				]
				]
			]
,			[
				98,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3797
				,[
				[
					7,
					[
						2,
						"Пасха"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				4073
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5671
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						6
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			true,
			4459,
			[
			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4460
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				4461
			]
			],
			[
			]
			,[
			[
				0,
				null,
				false,
				4462,
				[
				[
					13,
					cr.plugins_.Button.prototype.cnds.OnClicked,
					null,
					1,
					false,
					false,
					false,
					4463
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4464
					,[
					[
						11,
						"колвоигр"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							6
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4465
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							19,
							cr.system_object.prototype.exps["int"]
							,[
[
								19,
								cr.system_object.prototype.exps.random
								,[
[
									0,
									1
								]
,[
									1,
									3.99
								]
								]
							]
							]
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					4466
					,[
					[
						0,
						[
							1,
							0.1
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4467
					,[
					[
						11,
						"пук"
					]
,					[
						7,
						[
							0,
							0
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3783,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				3784
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				3785
				,[
				[
					11,
					"колвоигр"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						6
					]
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				false,
				false,
				3786
			]
,			[
				93,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4468
			]
,			[
				92,
				cr.plugins_.Button.prototype.cnds.IsChecked,
				null,
				0,
				false,
				true,
				false,
				4469
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				3787
				,[
				[
					11,
					"колвоигр"
				]
,				[
					7,
					[
						0,
						70
					]
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3806
				,[
				[
					3,
					1
				]
				]
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				3805
				,[
				[
					7,
					[
						2,
						"Если бы тебе давали 1$ за каждый разгаданный мем"
					]
				]
				]
			]
,			[
				152,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				3807
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				3808
				,[
				[
					0,
					[
						0,
						4
					]
				]
				]
			]
,			[
				91,
				cr.plugins_.Button.prototype.acts.SetChecked,
				null,
				3922
				,[
				[
					3,
					0
				]
				]
			]
,			[
				152,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				3809
			]
,			[
				131,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				3810
				,[
				[
					3,
					0
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Stop,
				null,
				3917
				,[
				[
					1,
					[
						2,
						"мемы"
					]
				]
				]
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4035
			]
,			[
				94,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4036
			]
,			[
				96,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4048
			]
,			[
				97,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4037
			]
,			[
				98,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4038
			]
,			[
				144,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4039
			]
,			[
				145,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4040
			]
,			[
				146,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4041
			]
,			[
				91,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				4042
			]
,			[
				92,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				4043
			]
,			[
				93,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				4044
			]
,			[
				141,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				4045
			]
,			[
				142,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				4046
			]
,			[
				143,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				4047
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				4034
				,[
				[
					2,
					["Зеленый слоник - Братишка курлык - курлык (mp3cut.net)",true]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						"brat"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				4057
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				4117
			]
			]
			,[
			[
				0,
				null,
				false,
				4519,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4520
					,[
					[
						11,
						"ашыпке"
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
				],
				[
				[
					6,
					cr.plugins_.Text.prototype.acts.SetText,
					null,
					4521
					,[
					[
						7,
						[
							2,
							"Я вам четвёрку по мемам принёс"
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			3912,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				3913
			]
			],
			[
			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				3914
				,[
				[
					2,
					["armour breaker - Мемы",true]
				]
,				[
					3,
					1
				]
,				[
					0,
					[
						0,
						160
					]
				]
,				[
					1,
					[
						2,
						"мемы"
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4172
				,[
				[
					0,
					[
						0,
						-150
					]
				]
,				[
					0,
					[
						0,
						250
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4173
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4174
				,[
				[
					0,
					[
						0,
						138
					]
				]
,				[
					0,
					[
						0,
						217
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4175
				,[
				[
					0,
					[
						0,
						138
					]
				]
,				[
					0,
					[
						0,
						217
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4176
				,[
				[
					0,
					[
						0,
						350
					]
				]
,				[
					0,
					[
						0,
						-150
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4177
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4178
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4179
				,[
				[
					0,
					[
						0,
						850
					]
				]
,				[
					0,
					[
						0,
						250
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4180
				,[
				[
					0,
					[
						0,
						138
					]
				]
,				[
					0,
					[
						0,
						217
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4050,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4051
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				4072
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4054
				,[
				[
					0,
					[
						0,
						319
					]
				]
,				[
					0,
					[
						0,
						506
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4058
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4060
				,[
				[
					0,
					[
						0,
						213
					]
				]
,				[
					0,
					[
						0,
						550
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4061
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4055
				,[
				[
					0,
					[
						0,
						213
					]
				]
,				[
					0,
					[
						0,
						422
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4062
				,[
				[
					0,
					[
						1,
						0.1
					]
				]
				]
			]
,			[
				163,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4071
				,[
				[
					3,
					1
				]
				]
			]
,			[
				6,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4067
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4074
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				6,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4075
			]
,			[
				163,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				4076
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4077
				,[
				[
					0,
					[
						0,
						294
					]
				]
,				[
					0,
					[
						0,
						427
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4078
				,[
				[
					0,
					[
						0,
						267
					]
				]
,				[
					0,
					[
						0,
						381
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4085
				,[
				[
					0,
					[
						1,
						0.8
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4086
				,[
				[
					0,
					[
						0,
						261
					]
				]
,				[
					0,
					[
						0,
						382
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4087
				,[
				[
					0,
					[
						0,
						350
					]
				]
,				[
					0,
					[
						0,
						384
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				4088
				,[
				[
					0,
					[
						0,
						-50
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetY,
				null,
				4089
				,[
				[
					0,
					[
						0,
						-50
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				4090
				,[
				[
					0,
					[
						0,
						750
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4091
				,[
				[
					0,
					[
						1,
						0.8
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4092
				,[
				[
					0,
					[
						0,
						212
					]
				]
,				[
					0,
					[
						0,
						331
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				4093
				,[
				[
					0,
					[
						0,
						50
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetY,
				null,
				4094
				,[
				[
					0,
					[
						0,
						40
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				4095
				,[
				[
					0,
					[
						0,
						650
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4096
				,[
				[
					0,
					[
						1,
						0.8
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4097
				,[
				[
					0,
					[
						0,
						138
					]
				]
,				[
					0,
					[
						0,
						217
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4101
				,[
				[
					0,
					[
						0,
						350
					]
				]
,				[
					0,
					[
						0,
						370
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				4098
				,[
				[
					0,
					[
						0,
						179
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetY,
				null,
				4099
				,[
				[
					0,
					[
						0,
						130
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetX,
				null,
				4100
				,[
				[
					0,
					[
						0,
						524
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4103
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4106
				,[
				[
					0,
					[
						0,
						450
					]
				]
,				[
					0,
					[
						0,
						363
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4113
				,[
				[
					0,
					[
						0,
						315
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4112
				,[
				[
					0,
					[
						0,
						260
					]
				]
,				[
					0,
					[
						0,
						347
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4110
				,[
				[
					0,
					[
						0,
						40
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4108
				,[
				[
					0,
					[
						0,
						245
					]
				]
,				[
					0,
					[
						0,
						145
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4115
				,[
				[
					0,
					[
						0,
						135
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4111
				,[
				[
					0,
					[
						0,
						449
					]
				]
,				[
					0,
					[
						0,
						158
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4114
				,[
				[
					0,
					[
						0,
						230
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4116
				,[
				[
					0,
					[
						1,
						0.8
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4118
				,[
				[
					0,
					[
						0,
						534
					]
				]
,				[
					0,
					[
						0,
						250
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4119
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4120
				,[
				[
					0,
					[
						0,
						350
					]
				]
,				[
					0,
					[
						0,
						370
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4121
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4122
				,[
				[
					0,
					[
						0,
						179
					]
				]
,				[
					0,
					[
						0,
						250
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4123
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4124
				,[
				[
					0,
					[
						0,
						350
					]
				]
,				[
					0,
					[
						0,
						130
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4125
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4126
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4127
				,[
				[
					0,
					[
						0,
						450
					]
				]
,				[
					0,
					[
						0,
						363
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4128
				,[
				[
					0,
					[
						0,
						315
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4129
				,[
				[
					0,
					[
						0,
						260
					]
				]
,				[
					0,
					[
						0,
						347
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4130
				,[
				[
					0,
					[
						0,
						40
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4131
				,[
				[
					0,
					[
						0,
						245
					]
				]
,				[
					0,
					[
						0,
						145
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4132
				,[
				[
					0,
					[
						0,
						135
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4133
				,[
				[
					0,
					[
						0,
						449
					]
				]
,				[
					0,
					[
						0,
						158
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4134
				,[
				[
					0,
					[
						0,
						230
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4135
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4136
				,[
				[
					0,
					[
						0,
						534
					]
				]
,				[
					0,
					[
						0,
						250
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4137
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4138
				,[
				[
					0,
					[
						0,
						350
					]
				]
,				[
					0,
					[
						0,
						370
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4139
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4140
				,[
				[
					0,
					[
						0,
						179
					]
				]
,				[
					0,
					[
						0,
						250
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4141
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4142
				,[
				[
					0,
					[
						0,
						350
					]
				]
,				[
					0,
					[
						0,
						130
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4143
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4144
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4145
				,[
				[
					0,
					[
						0,
						450
					]
				]
,				[
					0,
					[
						0,
						363
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4146
				,[
				[
					0,
					[
						0,
						315
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4147
				,[
				[
					0,
					[
						0,
						260
					]
				]
,				[
					0,
					[
						0,
						347
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4148
				,[
				[
					0,
					[
						0,
						40
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4149
				,[
				[
					0,
					[
						0,
						245
					]
				]
,				[
					0,
					[
						0,
						145
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4150
				,[
				[
					0,
					[
						0,
						135
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4151
				,[
				[
					0,
					[
						0,
						449
					]
				]
,				[
					0,
					[
						0,
						158
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4152
				,[
				[
					0,
					[
						0,
						230
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4153
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4154
				,[
				[
					0,
					[
						0,
						534
					]
				]
,				[
					0,
					[
						0,
						250
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4155
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4156
				,[
				[
					0,
					[
						0,
						350
					]
				]
,				[
					0,
					[
						0,
						370
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4157
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4158
				,[
				[
					0,
					[
						0,
						179
					]
				]
,				[
					0,
					[
						0,
						250
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4159
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4160
				,[
				[
					0,
					[
						0,
						350
					]
				]
,				[
					0,
					[
						0,
						130
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4161
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4162
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4163
				,[
				[
					0,
					[
						0,
						419
					]
				]
,				[
					0,
					[
						0,
						252
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4164
				,[
				[
					0,
					[
						0,
						334
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4165
				,[
				[
					0,
					[
						0,
						496
					]
				]
,				[
					0,
					[
						0,
						217
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4166
				,[
				[
					0,
					[
						0,
						28
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4167
				,[
				[
					0,
					[
						0,
						318
					]
				]
,				[
					0,
					[
						0,
						217
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4168
				,[
				[
					0,
					[
						0,
						30
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4169
				,[
				[
					0,
					[
						0,
						219
					]
				]
,				[
					0,
					[
						0,
						172
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4170
				,[
				[
					0,
					[
						0,
						81
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4181
				,[
				[
					0,
					[
						0,
						143
					]
				]
,				[
					0,
					[
						0,
						223
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4182
				,[
				[
					0,
					[
						0,
						143
					]
				]
,				[
					0,
					[
						0,
						223
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4183
				,[
				[
					0,
					[
						0,
						143
					]
				]
,				[
					0,
					[
						0,
						223
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4184
				,[
				[
					0,
					[
						0,
						143
					]
				]
,				[
					0,
					[
						0,
						223
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4185
				,[
				[
					0,
					[
						1,
						0.8
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4186
				,[
				[
					0,
					[
						0,
						162
					]
				]
,				[
					0,
					[
						0,
						236
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4187
				,[
				[
					0,
					[
						0,
						334
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4188
				,[
				[
					0,
					[
						0,
						574
					]
				]
,				[
					0,
					[
						0,
						305
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4189
				,[
				[
					0,
					[
						0,
						11
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4190
				,[
				[
					0,
					[
						0,
						430
					]
				]
,				[
					0,
					[
						0,
						262
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4191
				,[
				[
					0,
					[
						0,
						12
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4192
				,[
				[
					0,
					[
						0,
						287
					]
				]
,				[
					0,
					[
						0,
						204
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4193
				,[
				[
					0,
					[
						0,
						28
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4194
				,[
				[
					0,
					[
						0,
						154
					]
				]
,				[
					0,
					[
						0,
						242
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4195
				,[
				[
					0,
					[
						0,
						154
					]
				]
,				[
					0,
					[
						0,
						242
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4196
				,[
				[
					0,
					[
						0,
						154
					]
				]
,				[
					0,
					[
						0,
						242
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4197
				,[
				[
					0,
					[
						0,
						154
					]
				]
,				[
					0,
					[
						0,
						242
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4198
				,[
				[
					0,
					[
						1,
						0.8
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4199
				,[
				[
					0,
					[
						0,
						90
					]
				]
,				[
					0,
					[
						0,
						260
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4200
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4201
				,[
				[
					0,
					[
						0,
						611
					]
				]
,				[
					0,
					[
						0,
						260
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4202
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4203
				,[
				[
					0,
					[
						0,
						442
					]
				]
,				[
					0,
					[
						0,
						260
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4204
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4205
				,[
				[
					0,
					[
						0,
						272
					]
				]
,				[
					0,
					[
						0,
						260
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4206
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4211
				,[
				[
					0,
					[
						1,
						1.5
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4212
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4213
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4214
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4215
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4219
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4220
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4221
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4222
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4223
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4224
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4225
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4226
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4227
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4228
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4229
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4230
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4231
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4232
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4233
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4234
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4235
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4236
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4237
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4238
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4239
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4240
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4241
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4242
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4243
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4255
				,[
				[
					0,
					[
						1,
						2
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4256
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4257
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4258
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4259
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4260
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4261
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4262
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4263
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4264
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4265
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4266
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4267
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4268
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4269
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4270
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4271
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4272
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4273
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4274
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4275
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4276
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4277
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4278
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4279
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4290
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4292
				,[
				[
					0,
					[
						0,
						106
					]
				]
,				[
					0,
					[
						0,
						214
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4293
				,[
				[
					0,
					[
						0,
						13
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4294
				,[
				[
					0,
					[
						0,
						597
					]
				]
,				[
					0,
					[
						0,
						294
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4295
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4296
				,[
				[
					0,
					[
						0,
						465
					]
				]
,				[
					0,
					[
						0,
						194
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4297
				,[
				[
					0,
					[
						0,
						10
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4298
				,[
				[
					0,
					[
						0,
						292
					]
				]
,				[
					0,
					[
						0,
						277
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4299
				,[
				[
					0,
					[
						0,
						345
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4300
				,[
				[
					0,
					[
						0,
						189
					]
				]
,				[
					0,
					[
						0,
						319
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4301
				,[
				[
					0,
					[
						0,
						189
					]
				]
,				[
					0,
					[
						0,
						319
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4302
				,[
				[
					0,
					[
						0,
						189
					]
				]
,				[
					0,
					[
						0,
						319
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4303
				,[
				[
					0,
					[
						0,
						189
					]
				]
,				[
					0,
					[
						0,
						319
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4304
				,[
				[
					0,
					[
						1,
						0.3
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4305
				,[
				[
					0,
					[
						0,
						100
					]
				]
,				[
					0,
					[
						0,
						187
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4307
				,[
				[
					0,
					[
						0,
						593
					]
				]
,				[
					0,
					[
						0,
						319
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4308
				,[
				[
					0,
					[
						0,
						357
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4309
				,[
				[
					0,
					[
						0,
						435
					]
				]
,				[
					0,
					[
						0,
						162
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4310
				,[
				[
					0,
					[
						0,
						10
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				4311
				,[
				[
					0,
					[
						0,
						283
					]
				]
,				[
					0,
					[
						0,
						313
					]
				]
				]
			]
,			[
				164,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4313
				,[
				[
					0,
					[
						0,
						270
					]
				]
,				[
					0,
					[
						0,
						401
					]
				]
				]
			]
,			[
				137,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4314
				,[
				[
					0,
					[
						0,
						270
					]
				]
,				[
					0,
					[
						0,
						401
					]
				]
				]
			]
,			[
				165,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4315
				,[
				[
					0,
					[
						0,
						270
					]
				]
,				[
					0,
					[
						0,
						401
					]
				]
				]
			]
,			[
				166,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				4316
				,[
				[
					0,
					[
						0,
						270
					]
				]
,				[
					0,
					[
						0,
						401
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4317
				,[
				[
					0,
					[
						1,
						0.4
					]
				]
				]
			]
,			[
				133,
				cr.plugins_.TiledBg.prototype.acts.Destroy,
				null,
				4322
			]
,			[
				136,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				4323
			]
,			[
				135,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				4324
			]
,			[
				167,
				cr.plugins_.TiledBg.prototype.acts.SetVisible,
				null,
				4319
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4320
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				67,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4321
				,[
				[
					3,
					1
				]
				]
			]
,			[
				67,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				4326
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4534
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				4327
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						5
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4217,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4218
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						5
					]
				]
				]
			]
			],
			[
			[
				103,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4346
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				4348
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						6
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				4328,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4329
					,[
					[
						11,
						"отметказаматем"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					130,
					cr.plugins_.Text.prototype.cnds.CompareY,
					null,
					0,
					false,
					false,
					false,
					4330
					,[
					[
						8,
						3
					]
,					[
						0,
						[
							0,
							194
						]
					]
					]
				]
				],
				[
				[
					130,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					4331
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4332,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4333
					,[
					[
						11,
						"отметказаматем"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
,				[
					65,
					cr.plugins_.Text.prototype.cnds.CompareY,
					null,
					0,
					false,
					false,
					false,
					4334
					,[
					[
						8,
						3
					]
,					[
						0,
						[
							0,
							194
						]
					]
					]
				]
				],
				[
				[
					65,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					4335
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4336,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4337
					,[
					[
						11,
						"отметкафизра"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
,				[
					130,
					cr.plugins_.Text.prototype.cnds.CompareY,
					null,
					0,
					false,
					false,
					false,
					4342
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							194
						]
					]
					]
				]
				],
				[
				[
					130,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					4338
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4339,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4340
					,[
					[
						11,
						"отметкафизра"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
,				[
					65,
					cr.plugins_.Text.prototype.cnds.CompareY,
					null,
					0,
					false,
					false,
					false,
					4343
					,[
					[
						8,
						4
					]
,					[
						0,
						[
							0,
							194
						]
					]
					]
				]
				],
				[
				[
					65,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					4341
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4522,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4523
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						6
					]
				]
				]
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4347
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				103,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				4345
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4524
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				4526,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4527
					,[
					[
						11,
						"ашыпке"
					]
,					[
						8,
						5
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
				],
				[
				[
					104,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					4530
					,[
					[
						3,
						1
					]
					]
				]
,				[
					104,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					4531
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					4541
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					172,
					cr.plugins_.Button.prototype.acts.SetVisible,
					null,
					4542
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4528,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4529
					,[
					[
						11,
						"ашыпке"
					]
,					[
						8,
						2
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
				],
				[
				[
					102,
					cr.plugins_.Text.prototype.acts.SetVisible,
					null,
					4371
					,[
					[
						3,
						1
					]
					]
				]
,				[
					102,
					cr.behaviors.Fade.prototype.acts.StartFade,
					"Fade",
					4372
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					4540
					,[
					[
						0,
						[
							0,
							1
						]
					]
					]
				]
,				[
					172,
					cr.plugins_.Button.prototype.acts.SetVisible,
					null,
					4543
					,[
					[
						3,
						1
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4544,
			[
			[
				172,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				4545
			]
			],
			[
			[
				67,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				4552
			]
,			[
				103,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4553
			]
,			[
				130,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4554
			]
,			[
				65,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4555
			]
,			[
				130,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4556
			]
,			[
				65,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4557
			]
,			[
				104,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4558
			]
,			[
				102,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4559
			]
,			[
				172,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				4560
			]
,			[
				171,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				4546
			]
,			[
				171,
				cr.plugins_.TiledBg.prototype.acts.SetVisible,
				null,
				4547
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4548
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.GoToLayout,
				null,
				4561
				,[
				[
					6,
					"концовка"
				]
				]
			]
			]
		]
		]
	]
,	[
		"концовкащет",
		[
		[
			0,
			null,
			false,
			4562,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				4563
			]
			],
			[
			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				4640
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						100
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4566
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				5,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				4564
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4565
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4567
				,[
				[
					3,
					1
				]
				]
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4568
				,[
				[
					3,
					1
				]
				]
			]
,			[
				13,
				cr.plugins_.Button.prototype.acts.SetVisible,
				null,
				4569
				,[
				[
					3,
					1
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5284
				,[
				[
					2,
					["Звук - Печатная машинка (mp3cut.net)",false]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5220
				,[
				[
					2,
					["340087__thunderstorm10__metal-backing-track",true]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5221
				,[
				[
					2,
					["jamiroquai - just dance",true]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5092
				,[
				[
					2,
					["otrizka (mp3cut.net)",false]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5219
				,[
				[
					2,
					["Ранетки - Мы Ранетки (mp3cut.net)",true]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5288
				,[
				[
					2,
					["звук - фейерверк (mp3cut.net)",false]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4678,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4679
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
			],
			[
			[
				174,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4680
				,[
				[
					7,
					[
						2,
						"Т ы  з а н я л а  п е р в о е  м е с т о  н а  о л и м п и а д е  "
					]
				]
				]
			]
,			[
				175,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4681
				,[
				[
					7,
					[
						2,
						"п о  в с е й  р е с п у б л и к е   и   "
					]
				]
				]
			]
,			[
				176,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4682
				,[
				[
					7,
					[
						2,
						"о д о л е л а  К а т ь к у Н о в о х а т ь к у ."
					]
				]
				]
			]
,			[
				177,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4683
				,[
				[
					7,
					[
						2,
						"П о с л е  ш к о л ы  т ы  с т а л а  "
					]
				]
				]
			]
,			[
				178,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4686
				,[
				[
					7,
					[
						2,
						"в е д у щ е й  т е л е п р о г р а м м ы   "
					]
				]
				]
			]
,			[
				179,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4688
				,[
				[
					7,
					[
						2,
						"\" Щ т о  Г д е  К о г д а ? \""
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4642,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4643
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				174,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4645
				,[
				[
					7,
					[
						2,
						"Ты  н а ш л а  к у п о н  н а  н е о г р а н и ч е н н о е "
					]
				]
				]
			]
,			[
				175,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4646
				,[
				[
					7,
					[
						2,
						"к о л и ч е с т в о  ш к о л ь н о й  п и ц ц ы ."
					]
				]
				]
			]
,			[
				176,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4647
				,[
				[
					7,
					[
						2,
						"У  т е б я  п о я в и л а с ь  с о б с т в е н н а я  "
					]
				]
				]
			]
,			[
				177,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4648
				,[
				[
					7,
					[
						2,
						"я х т а \" С а р а т о в - М и н с к \" ."
					]
				]
				]
			]
,			[
				178,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4649
				,[
				[
					7,
					[
						2,
						"П о с л е  ш к о л ы  т ы  с т а л а  у ч и т е л е м  т а н ц а ."
					]
				]
				]
			]
,			[
				179,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4650
				,[
				[
					7,
					[
						2,
						"С т р и п т и з а ."
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4651,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4652
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				174,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4654
				,[
				[
					7,
					[
						2,
						"Т в о и  ф у т б о л ь н ы е  в и д е о р о л и к и"
					]
				]
				]
			]
,			[
				175,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4655
				,[
				[
					7,
					[
						2,
						"т е п е р ь  к р у т я т  п о  т е л и к у ."
					]
				]
				]
			]
,			[
				176,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4656
				,[
				[
					7,
					[
						2,
						"П о с л е  ш к о л ы  т ы  с т а л  т а к с и с т о м ."
					]
				]
				]
			]
,			[
				177,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4657
				,[
				[
					7,
					[
						2,
						"Б а р с е л о н с к и м  т а к с и с т о м ."
					]
				]
				]
			]
,			[
				178,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4658
			]
,			[
				179,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4659
			]
			]
		]
,		[
			0,
			null,
			false,
			4664,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4665
				,[
				[
					11,
					"kto"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
			],
			[
			[
				174,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4667
				,[
				[
					7,
					[
						2,
						"Н е п р о с т о г р у п п а  с т а л а  с а м о й"
					]
				]
				]
			]
,			[
				175,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4668
				,[
				[
					7,
					[
						2,
						"т о п о в о й  в о  в с ё м  м и р е ."
					]
				]
				]
			]
,			[
				176,
				cr.plugins_.Text.prototype.acts.SetText,
				null,
				4669
				,[
				[
					7,
					[
						2,
						"П о с л е  ш к о л ы  т ы  с т а л  л о г о п е д о м ."
					]
				]
				]
			]
,			[
				177,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4670
			]
,			[
				178,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4671
			]
,			[
				179,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4672
			]
			]
		]
,		[
			0,
			null,
			false,
			4570,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				4571
			]
,			[
				1,
				cr.plugins_.Text.prototype.cnds.IsVisible,
				null,
				0,
				false,
				false,
				false,
				4749
			]
			],
			[
			[
				5,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				4572
			]
,			[
				1,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4573
			]
,			[
				7,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				4639
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4691
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				4576
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				4689
				,[
				[
					2,
					["Звук - Печатная машинка (mp3cut.net)",false]
				]
,				[
					3,
					1
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						"машинка"
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4577,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				4578
				,[
				[
					0,
					[
						1,
						0.1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4579
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						0
					]
				]
				]
			]
			],
			[
			[
				173,
				cr.plugins_.Text.prototype.acts.SetWidth,
				null,
				4580
				,[
				[
					0,
					[
						4,
						[
							20,
							173,
							cr.plugins_.Text.prototype.exps.Width,
							false,
							null
						]
						,[
							0,
							11
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				4581,
				[
				[
					173,
					cr.plugins_.Text.prototype.cnds.CompareWidth,
					null,
					0,
					false,
					false,
					false,
					4582
					,[
					[
						8,
						5
					]
,					[
						0,
						[
							0,
							397
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4583
					,[
					[
						11,
						"хрень"
					]
,					[
						7,
						[
							0,
							1
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4590,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				4591
				,[
				[
					0,
					[
						1,
						0.1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4592
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				174,
				cr.plugins_.Text.prototype.acts.SetWidth,
				null,
				4593
				,[
				[
					0,
					[
						4,
						[
							20,
							174,
							cr.plugins_.Text.prototype.exps.Width,
							false,
							null
						]
						,[
							0,
							11
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				4594,
				[
				[
					174,
					cr.plugins_.Text.prototype.cnds.CompareWidth,
					null,
					0,
					false,
					false,
					false,
					4595
					,[
					[
						8,
						5
					]
,					[
						0,
						[
							0,
							430
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4596
					,[
					[
						11,
						"хрень"
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4597,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				4598
				,[
				[
					0,
					[
						1,
						0.1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4599
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				175,
				cr.plugins_.Text.prototype.acts.SetWidth,
				null,
				4600
				,[
				[
					0,
					[
						4,
						[
							20,
							175,
							cr.plugins_.Text.prototype.exps.Width,
							false,
							null
						]
						,[
							0,
							11
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				4601,
				[
				[
					175,
					cr.plugins_.Text.prototype.cnds.CompareWidth,
					null,
					0,
					false,
					false,
					false,
					4602
					,[
					[
						8,
						5
					]
,					[
						0,
						[
							0,
							333
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4603
					,[
					[
						11,
						"хрень"
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4604,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				4605
				,[
				[
					0,
					[
						1,
						0.1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4606
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						3
					]
				]
				]
			]
			],
			[
			[
				176,
				cr.plugins_.Text.prototype.acts.SetWidth,
				null,
				4607
				,[
				[
					0,
					[
						4,
						[
							20,
							176,
							cr.plugins_.Text.prototype.exps.Width,
							false,
							null
						]
						,[
							0,
							11
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				4608,
				[
				[
					176,
					cr.plugins_.Text.prototype.cnds.CompareWidth,
					null,
					0,
					false,
					false,
					false,
					4609
					,[
					[
						8,
						5
					]
,					[
						0,
						[
							0,
							367
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4904
					,[
					[
						11,
						"kto"
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4610
					,[
					[
						11,
						"хрень"
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4896,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4897
					,[
					[
						11,
						"kto"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
,				[
					176,
					cr.plugins_.Text.prototype.cnds.CompareWidth,
					null,
					0,
					false,
					false,
					false,
					4903
					,[
					[
						8,
						5
					]
,					[
						0,
						[
							0,
							367
						]
					]
					]
				]
				],
				[
				[
					88,
					cr.plugins_.Audio.prototype.acts.SetPaused,
					null,
					4900
					,[
					[
						1,
						[
							2,
							"машинка"
						]
					]
,					[
						3,
						0
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.Wait,
					null,
					4899
					,[
					[
						0,
						[
							1,
							1.5
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Audio.prototype.acts.SetPaused,
					null,
					4901
					,[
					[
						1,
						[
							2,
							"машинка"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4902
					,[
					[
						11,
						"хрень"
					]
,					[
						7,
						[
							0,
							4
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4611,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				4612
				,[
				[
					0,
					[
						1,
						0.1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4613
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						4
					]
				]
				]
			]
			],
			[
			[
				177,
				cr.plugins_.Text.prototype.acts.SetWidth,
				null,
				4614
				,[
				[
					0,
					[
						4,
						[
							20,
							177,
							cr.plugins_.Text.prototype.exps.Width,
							false,
							null
						]
						,[
							0,
							11
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				4769,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4770
					,[
					[
						11,
						"kto"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4771
					,[
					[
						11,
						"хрень"
					]
,					[
						7,
						[
							0,
							7
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Audio.prototype.acts.SetLooping,
					null,
					4834
					,[
					[
						1,
						[
							2,
							"машинка"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					88,
					cr.plugins_.Audio.prototype.acts.Stop,
					null,
					4835
					,[
					[
						1,
						[
							2,
							"машинка"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4661,
				[
				[
					177,
					cr.plugins_.Text.prototype.cnds.CompareWidth,
					null,
					0,
					false,
					false,
					false,
					4662
					,[
					[
						8,
						5
					]
,					[
						0,
						[
							0,
							291
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4833
					,[
					[
						11,
						"kto"
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							0,
							3
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4663
					,[
					[
						11,
						"хрень"
					]
,					[
						7,
						[
							0,
							5
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4618,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				4619
				,[
				[
					0,
					[
						1,
						0.1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4620
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						5
					]
				]
				]
			]
			],
			[
			[
				178,
				cr.plugins_.Text.prototype.acts.SetWidth,
				null,
				4621
				,[
				[
					0,
					[
						4,
						[
							20,
							178,
							cr.plugins_.Text.prototype.exps.Width,
							false,
							null
						]
						,[
							0,
							11
						]
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				4838,
				[
				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4839
					,[
					[
						11,
						"kto"
					]
,					[
						8,
						0
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4840
					,[
					[
						11,
						"хрень"
					]
,					[
						7,
						[
							0,
							7
						]
					]
					]
				]
,				[
					88,
					cr.plugins_.Audio.prototype.acts.SetLooping,
					null,
					4841
					,[
					[
						1,
						[
							2,
							"машинка"
						]
					]
,					[
						3,
						1
					]
					]
				]
,				[
					88,
					cr.plugins_.Audio.prototype.acts.Stop,
					null,
					4842
					,[
					[
						1,
						[
							2,
							"машинка"
						]
					]
					]
				]
				]
			]
,			[
				0,
				null,
				false,
				4674,
				[
				[
					178,
					cr.plugins_.Text.prototype.cnds.CompareWidth,
					null,
					0,
					false,
					false,
					false,
					4675
					,[
					[
						8,
						5
					]
,					[
						0,
						[
							0,
							499
						]
					]
					]
				]
,				[
					-1,
					cr.system_object.prototype.cnds.CompareVar,
					null,
					0,
					false,
					false,
					false,
					4843
					,[
					[
						11,
						"kto"
					]
,					[
						8,
						1
					]
,					[
						7,
						[
							0,
							2
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4677
					,[
					[
						11,
						"хрень"
					]
,					[
						7,
						[
							0,
							6
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4632,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				4633
				,[
				[
					0,
					[
						1,
						0.1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4634
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						6
					]
				]
				]
			]
			],
			[
			[
				179,
				cr.plugins_.Text.prototype.acts.SetWidth,
				null,
				4635
				,[
				[
					0,
					[
						4,
						[
							20,
							179,
							cr.plugins_.Text.prototype.exps.Width,
							false,
							null
						]
						,[
							0,
							11
						]
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.SetLooping,
				null,
				4747
				,[
				[
					1,
					[
						2,
						"машинка"
					]
				]
,				[
					3,
					1
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Stop,
				null,
				4690
				,[
				[
					1,
					[
						2,
						"машинка"
					]
				]
				]
			]
			]
			,[
			[
				0,
				null,
				false,
				4636,
				[
				[
					179,
					cr.plugins_.Text.prototype.cnds.CompareWidth,
					null,
					0,
					false,
					false,
					false,
					4637
					,[
					[
						8,
						5
					]
,					[
						0,
						[
							0,
							190
						]
					]
					]
				]
				],
				[
				[
					-1,
					cr.system_object.prototype.acts.SetVar,
					null,
					4638
					,[
					[
						11,
						"хрень"
					]
,					[
						7,
						[
							0,
							7
						]
					]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4762,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4763
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						8
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				4764
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			],
			[
			[
				184,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4765
				,[
				[
					0,
					[
						0,
						6
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4766
				,[
				[
					0,
					[
						1,
						1
					]
				]
				]
			]
,			[
				184,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4767
				,[
				[
					0,
					[
						0,
						-6
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5008,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				5009
				,[
				[
					0,
					[
						1,
						1.5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5022
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						10
					]
				]
				]
			]
			],
			[
			[
				201,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5013
				,[
				[
					3,
					0
				]
				]
			]
,			[
				202,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5017
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5012
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				202,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5019
				,[
				[
					3,
					0
				]
				]
			]
,			[
				200,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5020
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5015
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				200,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5010
				,[
				[
					3,
					0
				]
				]
			]
,			[
				201,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5011
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5043,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				5044
				,[
				[
					0,
					[
						1,
						0.8
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5045
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						11
					]
				]
				]
			]
			],
			[
			[
				204,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5046
				,[
				[
					3,
					0
				]
				]
			]
,			[
				205,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5047
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5048
				,[
				[
					0,
					[
						1,
						0.4
					]
				]
				]
			]
,			[
				204,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5054
				,[
				[
					3,
					1
				]
				]
			]
,			[
				205,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5055
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5100,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				5101
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5283
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					2
				]
,				[
					7,
					[
						0,
						15
					]
				]
				]
			]
			],
			[
			[
				206,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5102
				,[
				[
					3,
					0
				]
				]
			]
,			[
				207,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5103
				,[
				[
					3,
					1
				]
				]
			]
,			[
				197,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5124
				,[
				[
					3,
					0
				]
				]
			]
,			[
				198,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5125
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5104
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				206,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5105
				,[
				[
					3,
					1
				]
				]
			]
,			[
				207,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5106
				,[
				[
					3,
					0
				]
				]
			]
,			[
				197,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5129
				,[
				[
					3,
					1
				]
				]
			]
,			[
				198,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5130
				,[
				[
					3,
					0
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4790,
			[
			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4791
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						9
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				4792
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				24,
				cr.plugins_.Text.prototype.acts.SetAngle,
				null,
				4818
				,[
				[
					0,
					[
						4,
						[
							20,
							24,
							cr.plugins_.Text.prototype.exps.Angle,
							false,
							null
						]
						,[
							0,
							3
						]
					]
				]
				]
			]
,			[
				185,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4822
				,[
				[
					0,
					[
						4,
						[
							20,
							185,
							cr.plugins_.Sprite.prototype.exps.Angle,
							false,
							null
						]
						,[
							0,
							9
						]
					]
				]
				]
			]
,			[
				183,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4800
				,[
				[
					0,
					[
						0,
						-10
					]
				]
				]
			]
,			[
				184,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4793
				,[
				[
					0,
					[
						0,
						6
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4798
				,[
				[
					0,
					[
						1,
						0.25
					]
				]
				]
			]
,			[
				24,
				cr.plugins_.Text.prototype.acts.SetAngle,
				null,
				4819
				,[
				[
					0,
					[
						5,
						[
							20,
							24,
							cr.plugins_.Text.prototype.exps.Angle,
							false,
							null
						]
						,[
							0,
							3
						]
					]
				]
				]
			]
,			[
				185,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4824
				,[
				[
					0,
					[
						5,
						[
							20,
							185,
							cr.plugins_.Sprite.prototype.exps.Angle,
							false,
							null
						]
						,[
							0,
							9
						]
					]
				]
				]
			]
,			[
				183,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4796
				,[
				[
					0,
					[
						0,
						10
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4802
				,[
				[
					0,
					[
						1,
						0.25
					]
				]
				]
			]
,			[
				184,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4811
				,[
				[
					0,
					[
						0,
						-6
					]
				]
				]
			]
,			[
				24,
				cr.plugins_.Text.prototype.acts.SetAngle,
				null,
				4820
				,[
				[
					0,
					[
						4,
						[
							20,
							24,
							cr.plugins_.Text.prototype.exps.Angle,
							false,
							null
						]
						,[
							0,
							3
						]
					]
				]
				]
			]
,			[
				185,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4823
				,[
				[
					0,
					[
						4,
						[
							20,
							185,
							cr.plugins_.Sprite.prototype.exps.Angle,
							false,
							null
						]
						,[
							0,
							9
						]
					]
				]
				]
			]
,			[
				183,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4797
				,[
				[
					0,
					[
						0,
						-10
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4794
				,[
				[
					0,
					[
						1,
						0.25
					]
				]
				]
			]
,			[
				24,
				cr.plugins_.Text.prototype.acts.SetAngle,
				null,
				4821
				,[
				[
					0,
					[
						5,
						[
							20,
							24,
							cr.plugins_.Text.prototype.exps.Angle,
							false,
							null
						]
						,[
							0,
							3
						]
					]
				]
				]
			]
,			[
				185,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4825
				,[
				[
					0,
					[
						5,
						[
							20,
							185,
							cr.plugins_.Sprite.prototype.exps.Angle,
							false,
							null
						]
						,[
							0,
							9
						]
					]
				]
				]
			]
,			[
				183,
				cr.plugins_.Sprite.prototype.acts.SetAngle,
				null,
				4801
				,[
				[
					0,
					[
						0,
						10
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4692,
			[
			[
				13,
				cr.plugins_.Button.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				4693
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				4694
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						7
					]
				]
				]
			]
			],
			[
			[
				13,
				cr.plugins_.Button.prototype.acts.Destroy,
				null,
				4750
			]
,			[
				177,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4695
			]
,			[
				178,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4696
			]
,			[
				179,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4697
			]
,			[
				173,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4698
			]
,			[
				174,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4699
			]
,			[
				175,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4700
			]
,			[
				176,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				4701
			]
,			[
				181,
				cr.plugins_.Particles.prototype.acts.SetY,
				null,
				4744
				,[
				[
					0,
					[
						0,
						250
					]
				]
				]
			]
,			[
				182,
				cr.plugins_.Particles.prototype.acts.SetY,
				null,
				4745
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				180,
				cr.plugins_.Particles.prototype.acts.SetY,
				null,
				4746
				,[
				[
					0,
					[
						0,
						230
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				4748
				,[
				[
					2,
					["звук - фейерверк (mp3cut.net)",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						"ф"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4751
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				183,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				4756
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4768
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				184,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				4785
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				184,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				4786
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4784
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				183,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				4759
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				184,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				4787
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				4761
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						8
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				4752
				,[
				[
					2,
					["340087__thunderstorm10__metal-backing-track",true]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						"мет"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4788
				,[
				[
					0,
					[
						0,
						5
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Stop,
				null,
				5312
				,[
				[
					1,
					[
						2,
						"ф"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				4789
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						9
					]
				]
				]
			]
,			[
				185,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4816
				,[
				[
					3,
					1
				]
				]
			]
,			[
				24,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				4817
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4829
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4830
				,[
				[
					0,
					[
						0,
						14
					]
				]
				]
			]
,			[
				185,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				4848
				,[
				[
					0,
					[
						0,
						360
					]
				]
				]
			]
,			[
				24,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				4849
				,[
				[
					0,
					[
						0,
						360
					]
				]
				]
			]
,			[
				185,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				4850
				,[
				[
					0,
					[
						0,
						400
					]
				]
				]
			]
,			[
				24,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				4851
				,[
				[
					0,
					[
						0,
						400
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				4831
				,[
				[
					2,
					["jamiroquai - just dance",true]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						"джастдэнс"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4852
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Stop,
				null,
				4857
				,[
				[
					1,
					[
						2,
						"мет"
					]
				]
				]
			]
,			[
				184,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				4855
				,[
				[
					0,
					[
						0,
						90
					]
				]
				]
			]
,			[
				183,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				4856
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				183,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				4853
				,[
				[
					0,
					[
						0,
						150
					]
				]
				]
			]
,			[
				184,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				4854
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4920
				,[
				[
					0,
					[
						1,
						2.5
					]
				]
				]
			]
,			[
				187,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				4922
				,[
				[
					0,
					[
						0,
						250
					]
				]
				]
			]
,			[
				187,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				4921
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4923
				,[
				[
					0,
					[
						1,
						1.2
					]
				]
				]
			]
,			[
				187,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				4924
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4928
				,[
				[
					0,
					[
						1,
						0.4
					]
				]
				]
			]
,			[
				186,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4929
				,[
				[
					3,
					1
				]
				]
			]
,			[
				187,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4930
				,[
				[
					3,
					0
				]
				]
			]
,			[
				190,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				4933
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				190,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				4934
				,[
				[
					0,
					[
						0,
						130
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4935
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				180,
				cr.plugins_.Particles.prototype.acts.Destroy,
				null,
				4971
			]
,			[
				186,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4959
				,[
				[
					3,
					0
				]
				]
			]
,			[
				187,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4960
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4958
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				186,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4962
				,[
				[
					3,
					1
				]
				]
			]
,			[
				187,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4963
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4961
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				182,
				cr.plugins_.Particles.prototype.acts.Destroy,
				null,
				4972
			]
,			[
				186,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4936
				,[
				[
					3,
					0
				]
				]
			]
,			[
				187,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4937
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4964
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				186,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4965
				,[
				[
					3,
					1
				]
				]
			]
,			[
				187,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4966
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4947
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				186,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4967
				,[
				[
					3,
					0
				]
				]
			]
,			[
				187,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4968
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4969
				,[
				[
					0,
					[
						1,
						0.4
					]
				]
				]
			]
,			[
				181,
				cr.plugins_.Particles.prototype.acts.Destroy,
				null,
				4973
			]
,			[
				190,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				4948
				,[
				[
					0,
					[
						0,
						240
					]
				]
				]
			]
,			[
				190,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4949
				,[
				[
					3,
					0
				]
				]
			]
,			[
				191,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4950
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5131
				,[
				[
					0,
					[
						1,
						0.4
					]
				]
				]
			]
,			[
				189,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4951
				,[
				[
					3,
					1
				]
				]
			]
,			[
				187,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4952
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				4953
				,[
				[
					0,
					[
						1,
						1.1
					]
				]
				]
			]
,			[
				190,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				4954
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				188,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4955
				,[
				[
					3,
					1
				]
				]
			]
,			[
				189,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				4956
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5003
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				203,
				cr.plugins_.Sprite.prototype.acts.MoveAtAngle,
				null,
				5002
				,[
				[
					0,
					[
						0,
						90
					]
				]
,				[
					0,
					[
						0,
						75
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5030
				,[
				[
					0,
					[
						1,
						0.2
					]
				]
				]
			]
,			[
				203,
				cr.plugins_.Sprite.prototype.acts.MoveAtAngle,
				null,
				5029
				,[
				[
					0,
					[
						0,
						90
					]
				]
,				[
					0,
					[
						0,
						75
					]
				]
				]
			]
,			[
				200,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5024
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				200,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5025
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5006
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				187,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5004
				,[
				[
					0,
					[
						0,
						250
					]
				]
				]
			]
,			[
				187,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5005
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5037
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5027
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						10
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5109
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				204,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5038
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				204,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5039
				,[
				[
					0,
					[
						0,
						150
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5040
				,[
				[
					0,
					[
						1,
						1.1
					]
				]
				]
			]
,			[
				204,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5041
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5042
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						11
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5060
				,[
				[
					0,
					[
						1,
						2.5
					]
				]
				]
			]
,			[
				200,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5112
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5648
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				195,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5061
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				192,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5062
				,[
				[
					0,
					[
						0,
						270
					]
				]
				]
			]
,			[
				195,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5063
				,[
				[
					0,
					[
						0,
						140
					]
				]
				]
			]
,			[
				192,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5064
				,[
				[
					0,
					[
						0,
						140
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5079
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				200,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5056
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5065
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5313
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				195,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5066
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				192,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5067
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5068
				,[
				[
					0,
					[
						1,
						1.5
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5078
				,[
				[
					2,
					["otrizka (mp3cut.net)",false]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						200
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				195,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5069
				,[
				[
					3,
					0
				]
				]
			]
,			[
				192,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5070
				,[
				[
					3,
					0
				]
				]
			]
,			[
				196,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5071
				,[
				[
					3,
					1
				]
				]
			]
,			[
				193,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5072
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5107
				,[
				[
					0,
					[
						1,
						0.75
					]
				]
				]
			]
,			[
				206,
				cr.plugins_.Sprite.prototype.acts.MoveAtAngle,
				null,
				5099
				,[
				[
					0,
					[
						0,
						270
					]
				]
,				[
					0,
					[
						0,
						230
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5108
				,[
				[
					0,
					[
						1,
						0.75
					]
				]
				]
			]
,			[
				196,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5074
				,[
				[
					3,
					0
				]
				]
			]
,			[
				193,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5075
				,[
				[
					3,
					0
				]
				]
			]
,			[
				195,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5076
				,[
				[
					3,
					1
				]
				]
			]
,			[
				194,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5077
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5083
				,[
				[
					0,
					[
						1,
						1.5
					]
				]
				]
			]
,			[
				195,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5084
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				192,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5085
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				195,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5086
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				192,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5087
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5111
				,[
				[
					0,
					[
						1,
						1.5
					]
				]
				]
			]
,			[
				206,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5110
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				206,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5579
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				204,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5114
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				204,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5115
				,[
				[
					0,
					[
						0,
						150
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5116
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				197,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5117
				,[
				[
					0,
					[
						0,
						45
					]
				]
				]
			]
,			[
				197,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5120
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5118
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				197,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5121
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5133
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				197,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5155
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				197,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5156
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				200,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5134
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				200,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5135
				,[
				[
					0,
					[
						0,
						150
					]
				]
				]
			]
,			[
				208,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5139
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				208,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5140
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5157
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
,			[
				203,
				cr.plugins_.Sprite.prototype.acts.MoveAtAngle,
				null,
				5160
				,[
				[
					0,
					[
						0,
						270
					]
				]
,				[
					0,
					[
						0,
						75
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5141
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				203,
				cr.plugins_.Sprite.prototype.acts.MoveAtAngle,
				null,
				5161
				,[
				[
					0,
					[
						0,
						270
					]
				]
,				[
					0,
					[
						0,
						75
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5218
				,[
				[
					2,
					["Ранетки - Мы Ранетки (mp3cut.net)",true]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						-10
					]
				]
,				[
					1,
					[
						2,
						"ранетки"
					]
				]
				]
			]
,			[
				211,
				cr.plugins_.Particles.prototype.acts.SetVisible,
				null,
				5229
				,[
				[
					3,
					1
				]
				]
			]
,			[
				212,
				cr.plugins_.Particles.prototype.acts.SetVisible,
				null,
				5230
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5162
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.SetVolume,
				null,
				5222
				,[
				[
					1,
					[
						2,
						"ранетки"
					]
				]
,				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				225,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5217
				,[
				[
					3,
					1
				]
				]
			]
,			[
				208,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5142
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Stop,
				null,
				5143
				,[
				[
					1,
					[
						2,
						"джастдэнс"
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5150
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						12
					]
				]
				]
			]
,			[
				208,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5153
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				208,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5154
				,[
				[
					0,
					[
						0,
						100
					]
				]
				]
			]
,			[
				197,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5314
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				197,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5315
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5163
				,[
				[
					0,
					[
						1,
						1.7
					]
				]
				]
			]
,			[
				208,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5164
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				208,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5203
				,[
				[
					3,
					0
				]
				]
			]
,			[
				215,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5210
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5223
				,[
				[
					0,
					[
						0,
						3
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5165
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						13
					]
				]
				]
			]
,			[
				225,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				5211
			]
,			[
				213,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5212
				,[
				[
					3,
					1
				]
				]
			]
,			[
				219,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5213
				,[
				[
					3,
					1
				]
				]
			]
,			[
				217,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5214
				,[
				[
					3,
					1
				]
				]
			]
,			[
				216,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5215
				,[
				[
					3,
					1
				]
				]
			]
,			[
				221,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5216
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5231
				,[
				[
					0,
					[
						1,
						1.5
					]
				]
				]
			]
,			[
				211,
				cr.plugins_.Particles.prototype.acts.SetInitSpeed,
				null,
				5232
				,[
				[
					0,
					[
						0,
						400
					]
				]
				]
			]
,			[
				212,
				cr.plugins_.Particles.prototype.acts.SetInitSpeed,
				null,
				5233
				,[
				[
					0,
					[
						0,
						400
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5234
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						14
					]
				]
				]
			]
,			[
				221,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5243
				,[
				[
					3,
					0
				]
				]
			]
,			[
				222,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5576
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.SetVar,
				null,
				5270
				,[
				[
					11,
					"хрень"
				]
,				[
					7,
					[
						0,
						15
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5268
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				197,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5316
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5354
				,[
				[
					0,
					[
						1,
						0.1
					]
				]
				]
			]
,			[
				197,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5353
				,[
				[
					3,
					0
				]
				]
			]
,			[
				198,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				5317
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5318
				,[
				[
					0,
					[
						0,
						10
					]
				]
				]
			]
,			[
				197,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5320
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				197,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5319
				,[
				[
					0,
					[
						0,
						-75
					]
				]
,				[
					0,
					[
						0,
						357
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5321
				,[
				[
					0,
					[
						1,
						1.7
					]
				]
				]
			]
,			[
				197,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5322
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5325
				,[
				[
					0,
					[
						0,
						13
					]
				]
				]
			]
,			[
				219,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5332
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				219,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5333
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				217,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5334
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				217,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5335
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				216,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5336
				,[
				[
					0,
					[
						0,
						180
					]
				]
				]
			]
,			[
				216,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5337
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				213,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5338
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				213,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5339
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				215,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5340
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				215,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5341
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				221,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5342
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				221,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5343
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				197,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5344
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				197,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5345
				,[
				[
					0,
					[
						0,
						350
					]
				]
				]
			]
,			[
				208,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5351
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				208,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5352
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				209,
				cr.behaviors.Bullet.prototype.acts.SetAngleOfMotion,
				"Bullet",
				5583
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				209,
				cr.behaviors.Bullet.prototype.acts.SetSpeed,
				"Bullet",
				5584
				,[
				[
					0,
					[
						0,
						200
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5346
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				211,
				cr.plugins_.Particles.prototype.acts.SetInitSpeed,
				null,
				5347
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				212,
				cr.plugins_.Particles.prototype.acts.SetInitSpeed,
				null,
				5355
				,[
				[
					0,
					[
						0,
						0
					]
				]
				]
			]
,			[
				212,
				cr.plugins_.Particles.prototype.acts.SetRate,
				null,
				5349
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				211,
				cr.plugins_.Particles.prototype.acts.SetRate,
				null,
				5361
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5357
				,[
				[
					0,
					[
						0,
						4
					]
				]
				]
			]
,			[
				211,
				cr.plugins_.Particles.prototype.acts.Destroy,
				null,
				5358
			]
,			[
				212,
				cr.plugins_.Particles.prototype.acts.Destroy,
				null,
				5359
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5360
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Play,
				null,
				5646
				,[
				[
					2,
					["wavlibrarynet_sound15822 (online-audio-converter.com)",true]
				]
,				[
					3,
					0
				]
,				[
					0,
					[
						0,
						0
					]
				]
,				[
					1,
					[
						2,
						""
					]
				]
				]
			]
,			[
				228,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				5364
			]
,			[
				228,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5365
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5366
				,[
				[
					0,
					[
						0,
						4
					]
				]
				]
			]
,			[
				229,
				cr.behaviors.Fade.prototype.acts.StartFade,
				"Fade",
				5380
			]
,			[
				229,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5577
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5381
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				6,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5382
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5384
				,[
				[
					0,
					[
						0,
						2
					]
				]
				]
			]
,			[
				85,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5385
				,[
				[
					3,
					1
				]
				]
			]
,			[
				230,
				cr.plugins_.TextBox.prototype.acts.SetVisible,
				null,
				5386
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			4997,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				4998
				,[
				[
					0,
					[
						0,
						1
					]
				]
				]
			]
			],
			[
			[
				203,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				4999
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5000
				,[
				[
					0,
					[
						1,
						0.5
					]
				]
				]
			]
,			[
				203,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				5001
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5148,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				5149
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5151
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						12
					]
				]
				]
			]
			],
			[
			[
				209,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5152
				,[
				[
					0,
					[
						4,
						[
							20,
							208,
							cr.plugins_.Sprite.prototype.exps.X,
							false,
							null
						]
						,[
							0,
							29
						]
					]
				]
,				[
					0,
					[
						4,
						[
							20,
							208,
							cr.plugins_.Sprite.prototype.exps.Y,
							false,
							null
						]
						,[
							0,
							21
						]
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5196,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				5197
				,[
				[
					0,
					[
						1,
						0.09
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5202
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						12
					]
				]
				]
			]
			],
			[
			[
				225,
				cr.plugins_.Sprite.prototype.acts.SetSize,
				null,
				5200
				,[
				[
					0,
					[
						4,
						[
							20,
							225,
							cr.plugins_.Sprite.prototype.exps.Width,
							false,
							null
						]
						,[
							0,
							4
						]
					]
				]
,				[
					0,
					[
						4,
						[
							20,
							225,
							cr.plugins_.Sprite.prototype.exps.Height,
							false,
							null
						]
						,[
							0,
							4
						]
					]
				]
				]
			]
,			[
				225,
				cr.plugins_.Sprite.prototype.acts.MoveAtAngle,
				null,
				5201
				,[
				[
					0,
					[
						0,
						95
					]
				]
,				[
					0,
					[
						0,
						2
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5235,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				5236
				,[
				[
					0,
					[
						1,
						0.8
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5237
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					5
				]
,				[
					7,
					[
						0,
						14
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5269
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					3
				]
,				[
					7,
					[
						0,
						15
					]
				]
				]
			]
			],
			[
			[
				215,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				5240
				,[
				[
					3,
					0
				]
				]
			]
,			[
				213,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5241
				,[
				[
					3,
					0
				]
				]
			]
,			[
				214,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5242
				,[
				[
					3,
					1
				]
				]
			]
,			[
				222,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5244
				,[
				[
					3,
					1
				]
				]
			]
,			[
				223,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5260
				,[
				[
					3,
					0
				]
				]
			]
,			[
				216,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				5245
				,[
				[
					3,
					0
				]
				]
			]
,			[
				217,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5246
				,[
				[
					3,
					0
				]
				]
			]
,			[
				218,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5247
				,[
				[
					3,
					1
				]
				]
			]
,			[
				219,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5248
				,[
				[
					3,
					0
				]
				]
			]
,			[
				220,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5249
				,[
				[
					3,
					1
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5250
				,[
				[
					0,
					[
						1,
						0.4
					]
				]
				]
			]
,			[
				215,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				5251
				,[
				[
					3,
					1
				]
				]
			]
,			[
				213,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5252
				,[
				[
					3,
					1
				]
				]
			]
,			[
				214,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5253
				,[
				[
					3,
					0
				]
				]
			]
,			[
				222,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5254
				,[
				[
					3,
					0
				]
				]
			]
,			[
				216,
				cr.plugins_.Sprite.prototype.acts.SetMirrored,
				null,
				5255
				,[
				[
					3,
					1
				]
				]
			]
,			[
				217,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5256
				,[
				[
					3,
					1
				]
				]
			]
,			[
				218,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5257
				,[
				[
					3,
					0
				]
				]
			]
,			[
				219,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5258
				,[
				[
					3,
					1
				]
				]
			]
,			[
				220,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5259
				,[
				[
					3,
					0
				]
				]
			]
,			[
				223,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5261
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5271,
			[
			[
				-1,
				cr.system_object.prototype.cnds.Every,
				null,
				0,
				false,
				false,
				false,
				5272
				,[
				[
					0,
					[
						1,
						0.8
					]
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.cnds.CompareVar,
				null,
				0,
				false,
				false,
				false,
				5273
				,[
				[
					11,
					"хрень"
				]
,				[
					8,
					0
				]
,				[
					7,
					[
						0,
						15
					]
				]
				]
			]
			],
			[
			[
				226,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5276
				,[
				[
					3,
					1
				]
				]
			]
,			[
				227,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5277
				,[
				[
					3,
					0
				]
				]
			]
,			[
				-1,
				cr.system_object.prototype.acts.Wait,
				null,
				5278
				,[
				[
					0,
					[
						1,
						0.4
					]
				]
				]
			]
,			[
				226,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5279
				,[
				[
					3,
					0
				]
				]
			]
,			[
				227,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5280
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5225,
			[
			[
				-1,
				cr.system_object.prototype.cnds.OnLayoutStart,
				null,
				1,
				false,
				false,
				false,
				5226
			]
			],
			[
			[
				211,
				cr.plugins_.Particles.prototype.acts.SetVisible,
				null,
				5227
				,[
				[
					3,
					0
				]
				]
			]
,			[
				212,
				cr.plugins_.Particles.prototype.acts.SetVisible,
				null,
				5228
				,[
				[
					3,
					0
				]
				]
			]
,			[
				88,
				cr.plugins_.Audio.prototype.acts.Preload,
				null,
				5647
				,[
				[
					2,
					["wavlibrarynet_sound15822 (online-audio-converter.com)",true]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5291,
			[
			[
				-1,
				cr.system_object.prototype.cnds.EveryTick,
				null,
				0,
				false,
				false,
				false,
				5292
			]
			],
			[
			[
				201,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5293
				,[
				[
					0,
					[
						20,
						200,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						200,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				202,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5294
				,[
				[
					0,
					[
						20,
						200,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						200,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				193,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5295
				,[
				[
					0,
					[
						20,
						192,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						192,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				194,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5296
				,[
				[
					0,
					[
						20,
						192,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						192,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				191,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5297
				,[
				[
					0,
					[
						20,
						190,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						190,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				189,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5298
				,[
				[
					0,
					[
						20,
						187,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						187,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				186,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5299
				,[
				[
					0,
					[
						20,
						187,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						187,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				188,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5300
				,[
				[
					0,
					[
						20,
						187,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						187,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				205,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5301
				,[
				[
					0,
					[
						20,
						204,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						204,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				196,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5302
				,[
				[
					0,
					[
						20,
						195,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						195,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				207,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5303
				,[
				[
					0,
					[
						20,
						206,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						206,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				198,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5304
				,[
				[
					0,
					[
						20,
						197,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						197,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				214,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5305
				,[
				[
					0,
					[
						20,
						213,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						213,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				222,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5306
				,[
				[
					0,
					[
						20,
						221,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						221,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				223,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5307
				,[
				[
					0,
					[
						20,
						221,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						221,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				218,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5308
				,[
				[
					0,
					[
						20,
						217,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						217,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				220,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5309
				,[
				[
					0,
					[
						20,
						219,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						219,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				226,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5310
				,[
				[
					0,
					[
						20,
						197,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						197,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
,			[
				227,
				cr.plugins_.Sprite.prototype.acts.SetPos,
				null,
				5311
				,[
				[
					0,
					[
						20,
						197,
						cr.plugins_.Sprite.prototype.exps.X,
						false,
						null
					]
				]
,				[
					0,
					[
						20,
						197,
						cr.plugins_.Sprite.prototype.exps.Y,
						false,
						null
					]
				]
				]
			]
			]
		]
,		[
			0,
			null,
			false,
			5387,
			[
			[
				230,
				cr.plugins_.TextBox.prototype.cnds.OnClicked,
				null,
				1,
				false,
				false,
				false,
				5388
			]
			],
			[
			[
				231,
				cr.plugins_.Sprite.prototype.acts.SetVisible,
				null,
				5391
				,[
				[
					3,
					1
				]
				]
			]
,			[
				6,
				cr.plugins_.Text.prototype.acts.Destroy,
				null,
				5392
			]
,			[
				229,
				cr.plugins_.Sprite.prototype.acts.Destroy,
				null,
				5393
			]
,			[
				232,
				cr.plugins_.Text.prototype.acts.SetVisible,
				null,
				5575
				,[
				[
					3,
					1
				]
				]
			]
			]
		]
		]
	]
	],
	"media/",
	false,
	700,
	500,
	0,
	true,
	true,
	true,
	"1.0",
	2,
	false,
	0,
	false,
	375,
	false,
	[
	]
];};

